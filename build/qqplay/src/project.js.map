{"version":3,"sources":["assets/basic/script/basic/DataFunc.js","assets/basic/script/basic/Globals.js","assets/basic/script/basic/MatchvsEngine.js","assets/basic/script/basic/Matchvs.js","assets/basic/script/basic/UIFunc.js","assets/game/script/managers/blockManager.js","assets/game/script/block.js","assets/game/script/managers/bubbleManager.js","assets/game/script/managers/clickManager.js","assets/basic/script/basic/messenger/clientEvent.js","assets/game/script/managers/comboManager.js","assets/game/script/data/dataManager.js","assets/game/script/managers/effectManager.js","assets/game/script/effect.js","assets/game/script/electric.js","assets/basic/script/basic/messenger/eventListenerSelf.js","assets/game/script/managers/gameManager.js","assets/game/script/move/jump.js","assets/game/script/data/layoutDt.js","packages/plugin-matchvs/matchvs/matchvsjssdk/matchvs.all.js","assets/basic/script/basic/rankNetwork/msgType.js","assets/basic/script/basic/rankNetwork/network.js","assets/game/script/managers/pathManager.js","assets/game/script/path.js","assets/basic/script/playerIcon.js","assets/game/script/managers/playerManager.js","assets/game/script/player.js","assets/basic/script/basic/rankNetwork/pomeloBuild.js","assets/basic/script/rankUserInfo.js","assets/basic/script/resultPlayerIcon.js","assets/basic/script/roomInfo.js","assets/basic/script/roomUserInfo.js","assets/basic/script/uiBeginnerCourse.js","assets/basic/script/uiCreateRoom.js","assets/basic/script/uiExit.js","assets/game/script/uiGamePanel.js","assets/basic/script/uiLobbyPanel.js","assets/basic/script/uiLogin.js","assets/basic/script/uiMaskLayout.js","assets/basic/script/uiMatching1v1Ver.js","assets/basic/script/basic/uiPanel.js","assets/basic/script/uiRankPanel.js","assets/basic/script/uiResultPanel.js","assets/basic/script/uiResult.js","assets/basic/script/uiRoomList.js","assets/basic/script/uiRoom.js","assets/basic/script/uiTip.js","assets/basic/script/uiVsResult.js","assets/basic/script/uiWaitingForServer.js"],"names":["window","dataFunc","arrTables","csvTables","csvTableForArr","tableCast","tableComment","CELL_DELIMITERS","LINE_DELIMITERS","uiPanelAnimationClips","getTable","tableName","getTableArr","queryOne","key","value","table","tbItem","hasOwnProperty","queryByID","ID","queryAll","ret","loadConfigs","progressCb","callback","cc","loader","loadResDir","AnimationClip","err","clips","error","message","i","length","name","currentLoad","getterCast","index","cast","d","Array","Number","isNaN","forEach","loadRes","content","tableContent","force","tableData","tableArr","CSV","parse","header","row","keyname","push","opts","comment","addTable","STANDARD_DECODE_OPTS","skip","limit","STANDARD_ENCODE_OPTS","delimiter","newline","quoteMark","doubleQuoteMark","quoteRegex","assign","args","prototype","slice","call","arguments","base","rest","len","attr","map","collection","fn","results","getType","obj","Object","toString","getLimit","buildObjectConstructor","fields","sample","object","setter","idx","buildArrayConstructor","frequency","coll","needle","count","lastIndex","maxIndex","this","indexOf","mostFrequent","needles","detected","cur","unsafeParse","text","constructor","lines","split","cells","line","shift","findIndex","item","list","quoteCount","start","end","parseInt","substring","splice","rows","bind","Math","min","floor","Game","GameManager","BlockManager","PlayerManager","ClickManager","BubbleManager","PathManager","ComboManager","EffectManager","GameState","Enum","None","Pause","Play","Over","DirectState","Left","Right","GLB","RANDOM_MATCH","PROPERTY_MATCH","COOPERATION","COMPETITION","MAX_PLAYER_COUNT","PLAYER_COUNTS","GAME_START_EVENT","GAME_OVER_EVENT","READY","ROUND_START","SCORE_EVENT","DELETE_BLOCK","DISTANCE","INITMAP","BUBBLE","TIME_OUT","GET_GAME_DATA","RECONNECTION_DATA","COUNT_DOWN","channel","platform","gameId","gameVersion","IP","PORT","GAME_NAME","appKey","secret","matchType","gameType","userInfo","playerUserIds","isRoomOwner","syncFrame","FRAME_RATE","nickName","avatarUrl","NormalBulletSpeed","limitX","limitY","range","MatchvsEngine","console","log","init","matchVSResponses","gameid","responses","registerUser","_forEachResponse","res","setTimeout","registerUserResponse","userID","token","avatar","login","appkey","deviceID","gatewayid","joinRandomRoom","roomJoinResponse","status","userInfoList","userProfile","roomInfo","rootID","rootProperty","owner","func","joinOver","sendEvent","event","mockEventId","Date","getTime","sendEventRsp","seq","module","exports","engine","MsMatchInfo","MsCreateRoomInfo","response","Matchvs","getInstance","e","jsMatchvs","require","MatchvsResponse","MatchInfo","CreateRoomInfo","uiFunc","uiList","openUI","uiName","callBack","prefab","temp","instantiate","parent","Canvas","instance","node","targetUI","getComponent","isTop","setSiblingIndex","MAX_SAFE_INTEGER","closeUI","destroy","findUI","getUiList","Class","extends","Component","properties","blockPrefab","type","Prefab","default","linkAudio","url","AudioClip","blockSpriteFrame","SpriteFrame","onLoad","arrMap","newArrMap","blockPool","NodePool","receiveArrMap","array","deleteWholeBlock","col","arrBlcokData","initMap","y","x","pos","p","sprite","block","get","Sprite","spriteFrame","setPosition","setArrMap","self","combo","rival","deleteBlock","first","last","id","arrPath","audioEngine","play","addPath","recycleBlock","addScore","curBlocBeDelete","addCombo","resettingMap","arrBlock","children","dispatchEvent","Event","EventCustom","clientEvent","eventType","nextRound","automaticClearing","number1","number2","random","exchangeType","getArrMap","dispatch","updateMap","block1","block2","removeAllChildren","choiceBox","curSelec","setChoiceBox","target","put","j","link","on","click","clickBlock","bubblePrefab","bubbleClip","bubbleSpriteFrame","selfBubblePool","rivalBubblePool","initBubble","playerId","bubble","scaleX","moveTo","callFunc","removeSprite","sequence","runAction","mvs","choiceBoxPrefab","bClick","jump","repeatForever","moveBy","setLocalZOrder","opacity","setJump","setStop","sendEliminateBlock","getPosition","stopAllActions","straightLine","pushPath","corner","arrFirstRow","arrLastRow","expandRow","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","firstEx","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","lastEx","return","arrFirstCol","arrLastCol","expandCol","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_firstEx","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_lastEx","col1","col2","max","flag","row1","row2","data","_row","_data","_col","_data2","gameState","sendFrameEvent","JSON","stringify","action","firstPos","lastPos","refreshSlateBtn","roundStart","roundOver","gameStart","gameOver","setScoreProgressBar","getReconnectionData","setReconnectionData","setCount","checkLcon","playerAccountGet","initResponse","errorResponse","joinRoomResponse","joinRoomNotify","leaveRoomResponse","leaveRoomNotify","leaveRoomMedNotify","joinOverResponse","createRoomResponse","getRoomListResponse","getRoomDetailResponse","getRoomListExResponse","kickPlayerResponse","kickPlayerNotify","eventListener","create","eventName","handler","off","clear","comboPrefab","color","Color","Label","string","comboDelete","dataManager","layoutDtMgr","effect","initEffect","arrParticle","Node","scheduleOnce","stop","ParticleSystem","stopSystem","destroyBullet","time","playAnim","Animation","oneToMultiListener","handlerList","handlers","oldHandler","oldTarget","newEventListener","uiTip","blockInput","BlockInputEvents","enabled","game","addPersistRootNode","director","getCollisionManager","view","enableAutoFullScreen","leaveRoom","bUiReconnection","bReconnect","bExit","number","start_game_time","network","chooseNetworkMode","findPlayerByAccountListener","getUserInfoFromRank","uiTipBk","active","BK","Audio","switch","schedule","leaveRoomInfo","userId","isRivalLeave","readyCnt","matchVsInit","loginResponse","logoutResponse","sendEventNotify","frameUpdate","setFrameSyncResponse","reconnectResponse","networkStateNotify","result","loginServer","netNotify","state","setData","_kickPlayerNotify","kickPlayerRsp","rsp","userInfos","roomInfos","joinOverRsp","roomUserInfoList","roomUserInfo","leaveRoomRsp","disconnect","removePersistRootNode","loadScene","msg","recurLobby","openTip","reconnectCountDown","closeUiPanel","uiPanel","uiPanelName","getName","reconnect","stopReconnectCountDown","success","unschedule","gamePanel","connect","getRoomDetail","roomID","logout","info","lobbyShow","designResolution","height","width","cpProto","userIds","startGame","sendRoundStartMsg","setFrameSync","frameItems","buffTime","sendReadyMsg","sendEventEx","mStatus","recvMsg","isConnected","send","account","userName","headIcon","QQ","getRankListWithoutRoom","errCode","cmd","isContainSelf","ranking_list","rd","selfFlag","nick","setRankData","userInfoReq","getRankData","Script","score","userData","openId","GameStatusInfo","startMs","endMs","scoreInfo","order","uploadScoreWithoutRoom","onDestroy","arrLayoutDt","getDataByID","getArrLayoutLenght","MVS","hexcase","chrsz","hex_md5","s","binl2hex","core_md5","str2binl","a","b","c","olda","oldb","oldc","oldd","md5_ii","md5_hh","md5_gg","md5_ff","safe_add","md5_cmn","q","t","num","cnt","bit_rol","lsw","str","bin","mask","charCodeAt","binarray","hex_tab","charAt","format","fmt","arg","tmp","precision","argIndex","n","escaped","leadingZero","nextArg","slurpNumber","digits","test","String","fromCharCode","parseFloat","toFixed","replace","toUpperCase","MatchvsLog","toArray","argument","getNowFormatDate","date","month","getMonth","strDate","getDate","getFullYear","getHours","getMinutes","getSeconds","getMilliseconds","openLog","wx","logI","logE","loc","Error","stack","lastIndexOf","closeLog","ENGE_STATE","NONE","INITING","HAVE_INIT","LOGINING","HAVE_LOGIN","IN_ROOM","CREATEROOM","JOIN_ROOMING","LEAVE_ROOMING","LOGOUTING","RECONNECTING","ENMU_MVS_PTF","MVS_COMMON","MVS_EGRET","MVS_WX","MVSCONFIG","MAXPLAYER_LIMIT","MINPLAYER_LIMIT","MVS_PTF_ADATPER","HttpConf","HOST_GATWAY_ADDR","HOST_HOTEL_ADDR","GETHOSTLIST_URL","REGISTER_USER_URL","CMSNS_URL","VS_OPEN_URL","VS_PAY_URL","VS_PRODUCT_URL","stringToUtf8ByteArray","Uint8Array","buf","utf8ByteArrayToString","f","g","join","LocalStore_Clear","localStorage","clearStorageSync","isNeedUseWSS","getHotelUrl","bookInfo","getWssproxy","getHoteladdr","commEngineStateCheck","engineState","roomLoock","resNo","startsWith","prefix","endsWith","suffix","MvsTicker","_tickMap","_count","setInterval","interval","Ticker","setTickerCallBack","clearInterval","ti","dispose","_super","AppKeyCheck","_obj","_tags","AppkeyCheck","isInvailed","tag","tags","getTag","ticker","r","o","u","_require","code","l","1","global","$jscomp","scope","getGlobal","initSymbol","symbolCounter_","initSymbolIterator","makeIterator","arrayFromIterator","arrayFromIterable","inherits","defineProperties","getOwnPropertyDescriptor","defineProperty","iteratorFromArray","findInternal","v","from","of","entries","installHelper_","configurable","enumerable","writable","entries$install","keys","keys$install","values","values$install","copyWithin","copyWithin$install","fill","fill$install","find","find$install","findIndex$install","ASSUME_NO_NATIVE_MAP","Map$isConformant","Map","seal","size","set","data_","head_","createHead","maybeGetEntry","entry","previous","head","has","makeIterator_","getId","mapIndex_","idKey","Entry","Map$install","math","clz32","imul","sign","log10","LN10","log2","LN2","log1p","expm1","exp","cosh","sinh","tanh","abs","acosh","sqrt","asinh","atanh","hypot","trunc","Infinity","cbrt","pow","isFinite","isInteger","isSafeInteger","EPSILON","MIN_SAFE_INTEGER","is","ASSUME_NO_NATIVE_SET","Set$isConformant","Set","add","map_","Set$install","checkStringArgs","TypeError","RegExp","fromCodePoint","RangeError","repeat","repeat$install","codePointAt","codePointAt$install","includes","includes$install","startsWith$install","endsWith$install","goog","isDef","exportPath_","execScript","define","DEBUG","LOCALE","TRUSTED_SITE","STRICT_MODE_COMPATIBLE","DISALLOW_TEST_ONLY_CODE","ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING","provide","constructNamespace_","VALID_MODULE_RE_","isString","search","isInModuleLoader_","moduleLoaderState_","moduleName","getInternal_","declareLegacyNamespace","setTestOnly","forwardDeclare","getObjectByName","isDefAndNotNull","globalize","addDependency","DEPENDENCIES_ENABLED","dependencies_","nameToPath","pathIsModule","_requires","ENABLE_DEBUG_LOADER","logToConsole_","basePath","nullFunction","abstractMethod","addSingletonGetter","instance_","instantiatedSingletons_","LOAD_MODULE_USING_EVAL","SEAL_MODULE_EXPORTS","loadedModules_","visited","written","deferred","inHtmlDocument_","document","findBasePath_","CLOSURE_BASE_PATH","getElementsByTagName","src","substr","importScript_","CLOSURE_IMPORT_SCRIPT","writeScriptTag_","IS_OLD_IE_","atob","all","importModule_","queuedModules_","wrapModule_","loadQueuedModules_","maybeProcessDeferredPath_","maybeProcessDeferredDep_","isDeferredModule_","allDepsAreAvailable_","getPathFromDeps_","isProvided_","globalEval","loadModuleFromUrl","retrieveAndExecModule_","loadModule","isFunction","loadModuleFromSource_","writeScriptSrcNode_","write","appendScriptSrcNode_","createElement","defer","async","appendChild","readyState","lastNonModuleScriptIndex_","onScriptLoad_","writeScripts_","CLOSURE_NO_DEPS","normalizePath_","loadFileSync_","CLOSURE_LOAD_FILE_SYNC","XMLHttpRequest","open","responseText","typeOf","_typeof","propertyIsEnumerable","isNull","isArray","isArrayLike","isDateLike","isObject","isBoolean","isNumber","getUid","UID_PROPERTY_","uidCounter_","hasUid","removeUid","removeAttribute","getHashCode","removeHashCode","cloneObject","clone","bindNative_","apply","bindJs_","unshift","Function","partial","mixin","now","eval","evalWorksForGlobals_","_evalTest_","createTextNode","body","removeChild","getCssName","cssNameMapping_","cssNameMappingStyle_","setCssNameMapping","getMsg","getMsgWithFallback","exportSymbol","exportProperty","superClass_","h","callee","caller","defineClass","statics","createSealingConstructor_","applyProperties_","SEAL_CLASS_INSTANCES","UNSEALABLE_CONSTRUCTOR_PROPERTY_","OBJECT_PROTOTYPE_FIELDS_","tagUnsealableClass","dom","NodeType","ELEMENT","ATTRIBUTE","TEXT","CDATA_SECTION","ENTITY_REFERENCE","ENTITY","PROCESSING_INSTRUCTION","COMMENT","DOCUMENT","DOCUMENT_TYPE","DOCUMENT_FRAGMENT","NOTATION","debug","captureStackTrace","reportErrorToServer","DETECT_DOUBLE_ESCAPING","FORCE_NON_DOM_HTML_UNESCAPING","Unicode","NBSP","caseInsensitiveStartsWith","caseInsensitiveCompare","caseInsensitiveEndsWith","caseInsensitiveEquals","toLowerCase","subs","collapseWhitespace","isEmptyOrWhitespace","isEmptyString","isEmpty","isEmptyOrWhitespaceSafe","makeSafe","isEmptySafe","isBreakingWhitespace","isAlpha","isNumeric","isAlphaNumeric","isSpace","isUnicodeChar","stripNewlines","canonicalizeNewlines","normalizeWhitespace","normalizeSpaces","collapseBreakingSpaces","trim","trimLeft","trimRight","numberAwareCompare_","match","intAwareCompare","floatAwareCompare","numerateCompare","urlEncode","encodeURIComponent","urlDecode","decodeURIComponent","newLineToBr","htmlEscape","AMP_RE_","LT_RE_","GT_RE_","QUOT_RE_","SINGLE_QUOTE_RE_","NULL_RE_","E_RE_","ALL_RE_","unescapeEntities","contains","unescapeEntitiesUsingDom_","unescapePureXmlEntities_","unescapeEntitiesWithDocument","&amp;","&lt;","&gt;","&quot;","HTML_ENTITY_PATTERN_","innerHTML","firstChild","nodeValue","whitespaceEscape","preserveSpaces","stripQuotes","truncate","truncateMiddle","specialEscapeChars_","\u0000","\b","\f","\n","\r","\t","\u000b","\"","\\","<","jsEscapeCache_","'","quote","escapeChar","escapeString","caseInsensitiveContains","countOf","removeAt","remove","regExpEscape","removeAll","padNumber","buildString","getRandomString","compareVersions","k","m","exec","compareElements_","hashCode","uniqueStringCounter_","createUniqueString","toNumber","NaN","isLowerCamelCase","isUpperCamelCase","toCamelCase","toSelectorCase","toTitleCase","capitalize","splitLimit","editDistance","asserts","ENABLE_ASSERTS","AssertionError","messagePattern","DEFAULT_ERROR_HANDLER","errorHandler_","doAssertFailure_","setErrorHandler","assert","fail","assertNumber","assertString","assertFunction","assertObject","assertArray","assertBoolean","assertElement","nodeType","assertInstanceof","getType_","assertObjectPrototypeIsIntact","displayName","jspb","arr_","valueCtor_","arrClean","loadFromArray_","Entry_","valueWrapper","stringKeys_","sort","toObject","wrapEntry_","fromObject","ArrayIteratorIterable_","idx_","getLength","del","getEntryList","serializeBinary","beginSubMessage","endSubMessage","deserializeBinary","nextField","isEndGroup","getFieldNumber","NATIVE_ARRAY_PROTOTYPES","ASSUME_NATIVE_FUNCTIONS","peek","forEachRight","filter","reduce","reduceRight","some","every","findRight","findIndexRight","insert","insertAt","insertArrayAt","insertBefore","removeIf","removeAllIf","concat","extend","removeDuplicates","binarySearch","binarySearch_","defaultCompare","binarySelect","stableSort","sortByKey","sortObjectsByKey","isSorted","equals","defaultCompareEquality","compare3","inverseDefaultCompare","binaryInsert","binaryRemove","bucket","flatten","rotate","moveItem","zip","shuffle","copyByIndex","crypt","stringToByteArray","byteArrayToString","byteArrayToHex","hexToByteArray","xorByteArray","labs","userAgent","util","getNativeUserAgentString_","getNavigator_","navigator","userAgent_","setUserAgent","getUserAgent","matchUserAgent","matchUserAgentIgnoreCase","extractVersionTuples","isAndroid","isIpod","isIphone","isIpad","isIos","isMacintosh","isLinux","isWindows","isChromeOS","getVersion","isVersionOrHigher","getCount","getAnyKey","getAnyValue","containsValue","getValues","getKeys","getValueByKeys","containsKey","findKey","findValue","setIfUndefined","setWithReturnValueIfNotSet","unsafeClone","transpose","PROTOTYPE_FIELDS_","createSet","createImmutableView","isFrozen","freeze","isImmutableView","browser","matchOpera_","matchIE_","matchEdge_","matchFirefox_","matchSafari_","matchChrome_","matchCoast_","isSilk","matchIosWebview_","matchAndroidBrowser_","isChrome","isFirefox","isOpera","isIE","isEdge","isSafari","isCoast","isIosWebview","isAndroidBrowser","getIEVersion_","isPresto","isTrident","isWebKit","isGecko","getEngineTuple_","getVersionForKey_","ASSUME_IE","ASSUME_EDGE","ASSUME_GECKO","ASSUME_WEBKIT","ASSUME_MOBILE_WEBKIT","ASSUME_OPERA","ASSUME_ANY_VERSION","BROWSER_KNOWN_","getUserAgentString","getNavigator","OPERA","IE","EDGE","EDGE_OR_IE","GECKO","WEBKIT","isMobile_","MOBILE","SAFARI","determinePlatform_","PLATFORM","ASSUME_MAC","ASSUME_WINDOWS","ASSUME_LINUX","ASSUME_X11","ASSUME_ANDROID","ASSUME_IPHONE","ASSUME_IPAD","PLATFORM_KNOWN_","MAC","WINDOWS","isLegacyLinux_","LINUX","isX11_","appVersion","X11","ANDROID","IPHONE","IPAD","operaVersion_","opera","version","determineVersion_","getVersionRegexResult_","getDocumentMode_","documentMode","VERSION","compare","isVersionOrHigherCache_","isVersion","isDocumentModeOrHigher","DOCUMENT_MODE","isDocumentMode","compatMode","product","ASSUME_FIREFOX","ASSUME_CHROME","ASSUME_SAFARI","PRODUCT_KNOWN_","FIREFOX","isIphoneOrIpod_","CHROME","isSafariDesktop_","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","ASSUME_NATIVE_SUPPORT_","HAS_NATIVE_ENCODE_","btoa","HAS_NATIVE_DECODE_","encodeByteArray","init_","encodeString","decodeString","decodeStringInternal_","decodeStringToByteArray","decodeStringToUint8Array","ceil","subarray","ExtensionFieldInfo","fieldIndex","fieldName","ctor","toObjectFn","isRepeated","ExtensionFieldBinaryInfo","fieldInfo","binaryReaderFn","binaryWriterFn","binaryMessageSerializeFn","binaryMessageDeserializeFn","isPacked","isMessageType","Message","GENERATE_TO_OBJECT","GENERATE_FROM_OBJECT","GENERATE_TO_STRING","ASSUME_LOCAL_ARRAYS","MINIMIZE_MEMORY_ALLOCATIONS","SUPPORTS_UINT8ARRAY_","getJsPbMessageId","messageId_","getIndex_","arrayIndexOffset_","initialize","wrappers_","initPivotAndExtensionObject_","convertedFloatingPointFields_","pivot_","EMPTY_LIST_SENTINEL_","maybeInitEmptyExtensionObject_","extensionObject_","computeOneofCase","isArray_","MAX_VALUE","toObjectList","toObjectExtension","serializeBinaryExtensions","readBinaryExtension","skipField","getField","getRepeatedField","getOptionalFloatingPointField","getRepeatedFloatingPointField","bytesAsB64","bytesAsU8","bytesListAsB64","assertConsistentTypes_","bytesListAsU8","getFieldWithDefault","getFieldProto3","getMapField","setField","setProto3IntField","setFieldIgnoringDefault_","setProto3FloatField","setProto3BooleanField","setProto3StringField","setProto3StringIntField","setProto3BytesField","setProto3EnumField","addToRepeatedField","setOneofField","getWrapperField","getRepeatedWrapperField","wrapRepeatedField_","setWrapperField","setOneofWrapperField","setRepeatedWrapperField","addToRepeatedWrapperField","toMap","syncMapFields_","getExtension","setExtension","difference","compareFields","compareExtensions","cloneMessage","clone_","copyInto","registerMessageType","registry_","messageId","messageSetExtensions","messageSetExtensionsBinary","arith","UInt64","lo","hi","cmp","rightShift","leftShift","msb","lsb","zero","sub","mul32x32","mul","div","fromString","Int64","BinaryConstants","ConstBinaryMessage","BinaryMessage","FieldType","INVALID","DOUBLE","FLOAT","INT64","UINT64","INT32","FIXED64","FIXED32","BOOL","STRING","GROUP","MESSAGE","BYTES","UINT32","ENUM","SFIXED32","SFIXED64","SINT32","SINT64","FHASH64","VHASH64","WireType","VARINT","DELIMITED","START_GROUP","END_GROUP","FieldTypeToWireType","INVALID_FIELD_NUMBER","FLOAT32_EPS","FLOAT32_MIN","FLOAT32_MAX","FLOAT64_EPS","FLOAT64_MIN","FLOAT64_MAX","TWO_TO_20","TWO_TO_23","TWO_TO_31","TWO_TO_32","TWO_TO_52","TWO_TO_63","TWO_TO_64","ZERO_HASH","utils","split64Low","split64High","splitUint64","splitInt64","splitZigzag64","splitFloat32","round","splitFloat64","splitHash64","joinUint64","joinInt64","joinZigzag64","joinFloat32","joinFloat64","joinHash64","DIGITS","joinUnsignedDecimalString","joinSignedDecimalString","hash64ToDecimalString","hash64ArrayToDecimalStrings","decimalStringToHash64","splitDecimalString","hash64ToHexString","hexStringToHash64","hash64ToNumber","numberToHash64","countVarints","countVarintFields","countFixedFields_","countFixed32Fields","countFixed64Fields","countDelimitedFields","debugBytesToTextFormat","byteSourceToUint8Array","debugScalarToTextFormat","ArrayBuffer","BinaryEncoder","buffer_","writeSplitVarint64","writeSplitFixed64","writeUint32","writeUnsignedVarint32","writeSignedVarint32","writeUnsignedVarint64","writeSignedVarint64","writeZigzagVarint32","writeZigzagVarint64","writeZigzagVarint64String","writeUint8","writeUint16","writeUint64","writeInt8","writeInt16","writeInt32","writeInt64","writeInt64String","writeFloat","writeDouble","writeBool","writeEnum","writeBytes","writeVarintHash64","writeFixedHash64","writeString","BinaryWriter","blocks_","totalLength_","encoder_","bookmarks_","appendUint8Array_","beginDelimited_","writeFieldHeader_","endDelimited_","pop","writeSerializedMessage","maybeWriteSerializedMessage","reset","getResultBuffer","getResultBase64String","writeAny","writeFixed64","writeFixed32","writeSfixed32","writeSfixed64","writeSint32","writeSint64","writeUnsignedVarint32_","writeSignedVarint32_","writeUnsignedVarint64_","writeSignedVarint64_","writeZigzagVarint32_","writeZigzagVarint64_","writeZigzagVarint64String_","writeInt32String","writeUint32String","writeUint64String","writeSint64String","writeFixed64String","writeSfixed64String","writeMessage","writeGroup","writeRepeatedInt32","writeRepeatedInt32String","writeRepeatedInt64","writeRepeatedInt64String","writeRepeatedUint32","writeRepeatedUint32String","writeRepeatedUint64","writeRepeatedUint64String","writeRepeatedSint32","writeRepeatedSint64","writeRepeatedSint64String","writeRepeatedFixed32","writeRepeatedFixed64","writeRepeatedFixed64String","writeRepeatedSfixed32","writeRepeatedSfixed64","writeRepeatedSfixed64String","writeRepeatedFloat","writeRepeatedDouble","writeRepeatedBool","writeRepeatedEnum","writeRepeatedString","writeRepeatedBytes","writeRepeatedMessage","writeRepeatedGroup","writeRepeatedFixedHash64","writeRepeatedVarintHash64","writePackedInt32","writePackedInt32String","writePackedInt64","writePackedInt64String","writePackedUint32","writePackedUint32String","writePackedUint64","writePackedUint64String","writePackedSint32","writePackedSint64","writePackedSint64String","writePackedFixed32","writePackedFixed64","writePackedFixed64String","writePackedSfixed32","writePackedSfixed64","writePackedSfixed64String","writePackedFloat","writePackedDouble","writePackedBool","writePackedEnum","writePackedFixedHash64","writePackedVarintHash64","BinaryIterator","elements_","nextMethod_","decoder_","cursor_","nextValue_","atEnd_","instanceCache_","alloc","free","atEnd","BinaryDecoder","bytes_","tempHigh_","tempLow_","end_","start_","error_","setBlock","getBuffer","getEnd","setEnd","getCursor","setCursor","advance","pastEnd","getError","readSplitVarint64_","skipVarint","unskipVarint","readUnsignedVarint32","readSignedVarint32","readUnsignedVarint32String","readSignedVarint32String","readZigzagVarint32","readUnsignedVarint64","readUnsignedVarint64String","readSignedVarint64","readSignedVarint64String","readZigzagVarint64","readZigzagVarint64String","readUint8","readUint16","readUint32","readUint64","readUint64String","readInt8","readInt16","readInt32","readInt64","readInt64String","readFloat","readDouble","readBool","readEnum","readString","readStringWithLength","readBytes","readVarintHash64","readFixedHash64","BinaryReader","fieldCursor_","nextField_","nextWireType_","readCallbacks_","getFieldCursor","getWireType","unskipHeader","skipMatchingFields","skipVarintField","skipDelimitedField","skipFixed32Field","skipFixed64Field","skipGroup","registerReadCallback","runReadCallback","readAny","readFixed64","readFixed32","readSfixed32","readSfixed64","readSint32","readSint64","readMessage","readGroup","getFieldDecoder","readInt32String","readUint32String","readSint64String","readFixed64String","readSfixed32String","readSfixed64String","readPackedField_","readPackedInt32","readPackedInt32String","readPackedInt64","readPackedInt64String","readPackedUint32","readPackedUint32String","readPackedUint64","readPackedUint64String","readPackedSint32","readPackedSint64","readPackedSint64String","readPackedFixed32","readPackedFixed64","readPackedFixed64String","readPackedSfixed32","readPackedSfixed64","readPackedSfixed64String","readPackedFloat","readPackedDouble","readPackedBool","readPackedEnum","readPackedVarintHash64","readPackedFixedHash64","Export","2","proto","stream","ErrorCode","NOERROR","OK","ACCEPTED","NOCONTENT","BADREQUEST","UNAUTHORIZED","SIGNATUREFAILED","FORBIDDEN","NOTFOUND","INTERNALSERVERERROR","NOTIMPLEMENTED","BADGATEWAY","SERVICEUNAVAILABLE","google-protobuf","3","_module$exports","myProto","myProto1","myProto2","_defineProperty","DataProto","./errorcode_pb","./gateway_pb","./sdk_pb","4","LoginReq","opt_data","COMPILED","opt_includeInstance","includeInstance","deviceid","sdkver","vendor","$jspbMessageInstance","bytes","reader","deserializeBinaryFromReader","setGameid","setAppkey","setDeviceid","setSign","setSdkver","setVendor","setToken","writer","serializeBinaryToWriter","getGameid","getAppkey","getDeviceid","getSign","getSdkver","getVendor","getToken","LoginRsp","roomid","setStatus","setRoomid","getStatus","getRoomid","HeartbeatReq","HeartbeatRsp","gsexist","setGsexist","getGsexist","DisconnectReq","userid","setUserid","getUserid","DisconnectRsp","LogoutRsp","keyValue","setKey","setValue","getKey","getValue","PlayerInfo","userprofile","getUserprofile_asB64","setUserprofile","getUserprofile_asU8","getUserprofile","BookInfo","bookid","bookkey","hoteladdr","wssproxy","setBookid","setBookkey","setHoteladdr","setWssproxy","getBookid","getBookkey","RoomInfo","roomname","maxplayer","mode","canwatch","visibility","roomproperty","getRoomproperty_asB64","setRoomname","setMaxplayer","setMode","setCanwatch","setVisibility","setRoomproperty","setOwner","setState","getRoomname","getMaxplayer","getMode","getCanwatch","getVisibility","getRoomproperty_asU8","getOwner","getState","getRoomproperty","JoinRoomReq","repeatedFields_","jointype","playerinfo","getPlayerinfo","roominfo","getRoominfo","tagsList","getTagsList","cpproto","getCpproto_asB64","setJointype","setPlayerinfo","setRoominfo","addTags","setCpproto","getJointype","getCpproto_asU8","clearPlayerinfo","hasPlayerinfo","clearRoominfo","hasRoominfo","setTagsList","opt_value","opt_index","clearTagsList","getCpproto","JoinRoomRsp","usersList","getUsersList","bookinfo","getBookinfo","addUsers","setBookinfo","setUsersList","clearUsersList","clearBookinfo","hasBookinfo","NoticeJoin","user","getUser","setUser","clearUser","hasUser","NoticeLeave","JoinOverReq","JoinOverRsp","JoinOverNotify","srcuserid","setSrcuserid","getSrcuserid","JoinOpenReq","JoinOpenRsp","JoinOpenNotify","LeaveRoomReq","LeaveRoomRsp","TcpProtoHeader","setSize","setSeq","setCmd","setVersion","getSize","getSeq","getCmd","ConnDetailV2","fieldid","heartbeattime","setFieldid","setHeartbeattime","getFieldid","getHeartbeattime","UserV2","versionSdk","connectionId","serviceId","roomId","deviceId","connStatus","setUserId","setGameId","setVersionSdk","setConnectionId","setServiceId","setRoomId","setDeviceId","setConnStatus","getUserId","getGameId","getVersionSdk","getConnectionId","getServiceId","getRoomId","getDeviceId","getConnStatus","NetworkStateReq","NetworkStateRsp","NetworkStateNotify","CreateRoom","CreateRoomRsp","GetRoomList","roomfilter","getRoomfilter","RoomFilter","setRoomfilter","clearRoomfilter","hasRoomfilter","full","setFull","getFull","GetRoomListRsp","roominfoList","getRoominfoList","addRoominfo","setRoominfoList","clearRoominfoList","GetRoomListExReq","pageno","pagesize","setSort","setOrder","setPageno","setPagesize","getSort","getOrder","getPageno","getPagesize","RoomInfoEx","gameplayer","watchplayer","createtime","setGameplayer","setWatchplayer","setCreatetime","getGameplayer","getWatchplayer","getCreatetime","GetRoomListExRsp","total","roominfoexList","getRoominfoexList","setTotal","addRoominfoex","getTotal","setRoominfoexList","clearRoominfoexList","GetRoomDetailReq","GetRoomDetailRsp","roomdetail","getRoomdetail","RoomDetail","setRoomdetail","clearRoomdetail","hasRoomdetail","createflag","playerinfosList","getPlayerinfosList","setCreateflag","addPlayerinfos","getCreateflag","setPlayerinfosList","clearPlayerinfosList","KickPlayer","KickPlayerRsp","KickPlayerNotify","SetRoomPropertyReq","SetRoomPropertyRsp","NoticeRoomProperty","CmdId","NOCMD","LOGINREQ","LOGINRSP","LOGOUTREQ","LOGOUTRSP","HEARTBEATREQ","NETWORKSTATEREQ","NETWORKSTATERSP","NOTICENETWORKSTATEREQ","CREATEROOMREQ","CREATEROOMRSP","GETROOMLISTREQ","GETROOMLISTRSP","ROOMLISTEXREQ","ROOMLISTEXRSP","SETROOMPROPERTYREQ","SETROOMPROPERTYRSP","NOTICEROOMPROPERTY","GETROOMDETAILREQ","GETROOMDETAILRSP","JOINROOMREQ","JOINROOMRSP","NOTICEUSERJOINREQ","LEAVEROOMREQ","LEAVEROOMRSP","NOTICEUSERLEAVEREQ","JOINOVERREQ","JOINOVERRSP","JOINOVERNOTIFY","JOINOPENREQ","JOINOPENRSP","JOINOPENNOTIFY","DISCONNECTREQ","DISCONNECTRSP","KICKPLAYERREQ","KICKPLAYERRSP","KICKPLAYERNOTIFY","JoinRoomType","NOJOIN","JOINSPECIALROOM","JOINROOMWITHPROPERTY","JOINRANDOMROOM","RoomState","ROOMSTATENIL","ROOMSTATEOPEN","ROOMSTATECLOSED","RoomListSort","ROOMSORTNIL","ROOMSORTCREATETIME","ROOMSORTPLAYERNUM","ROOMSORTSTATE","SortOrder","SORTASC","SORTDESC","./errorcode_pb.js","5","CheckIn","CheckInAck","checkinsList","playersList","maxplayers","setCheckinsList","setPlayersList","setMaxplayers","getCheckinsList","getPlayersList","getMaxplayers","addCheckins","clearCheckinsList","addPlayers","clearPlayersList","Heartbeat","HeartbeatAck","Broadcast","dstuidsList","setFlag","setDstuidsList","getFlag","getDstuidsList","addDstuids","clearDstuidsList","BroadcastAck","CheckInNotify","Notify","srcuid","priority","setSrcuid","setPriority","getSrcuid","getPriority","Subscribe","confirmsList","cancelsList","addConfirms","addCancels","getConfirmsList","getCancelsList","setConfirmsList","clearConfirmsList","setCancelsList","clearCancelsList","SubscribeAck","groupsList","addGroups","getGroupsList","setGroupsList","clearGroupsList","Publish","PublishAck","dstnum","setDstnum","getDstnum","PublishNotify","SetUseTimeStamp","usetimestamp","setUsetimestamp","getUsetimestamp","SetUseTimeStampAck","timestamp","setTimestamp","getTimestamp","SetFrameSyncRate","framerate","frameidx","setFramerate","setFrameidx","getFramerate","getFrameidx","SetFrameSyncRateAck","SetFrameSyncRateNotify","FrameBroadcast","FrameBroadcastAck","FrameDataNotify","FrameSyncNotify","lastidx","nextidx","startts","endts","setLastidx","setNextidx","setStartts","setEndts","getLastidx","getNextidx","getStartts","getEndts","SDKHotelCmdID","INVALIDSDKCMD","CHECKINCMDID","CHECKINACKCMDID","HEARTBEATCMDID","HEARTBEATACKCMDID","BROADCASTCMDID","BROADCASTACKCMDID","NOTIFYCMDID","CHECKINNOTIFYCMDID","SUBSCRIBECMDID","SUBSCRIBEACKCMDID","PUBLISHCMDID","PUBLISHACKCMDID","PUBLISHNOTIFYCMDID","MatchvsNetWork","MatchvsHttp","MvsCode","NoLogin","CODE_201","CODE_400","CODE_401","CODE_402","CODE_403","CODE_404","CODE_405","CODE_406","CODE_500","CODE_502","CODE_503","CODE_504","CODE_507","CODE_521","CODE_522","CODE_527","CODE_1000","NetWorkErr","CODE_1005","DataParseErr","MvsErrMsg","roomName","maxPlayer","canWatch","roomProperty","MsEnum","MsRoomJoin","joinType","gameID","MsCreateRoomRsp","MsRoomUserInfo","MsRegistRsp","MsRoomInfoEx","MsRoomFilter","MsRoomFilterEx","pageNo","pageSize","MsGetRoomDetailRsp","createFlag","MsReopenRoomResponse","Status","MsReopenRoomNotify","MatchvsNetWorkCallBack","onMsg","onErr","errMsg","NoJoin","joinSpecialRoom","joinRoomWithProperty","host","socket","connectSocket","socketOpen","socketMsgQueue","mCallBack","mHost","that","close","reason","buffer","onOpen","onConnect","onClose","onDisConnect","onMessage","dataView","DataView","onError","isPost","params","contentType","request","content-type","mCallback","post","WebSocket","getErrorCode","getErrorString","rewind","ab","eof","setUint8","pointer","readUint8Buffer","http","HttpUtil","setHttpMethod","setHttpHeader","requestAsync","dt","readAsString","setHttpPostData","setHttpUrl","bufQueue","ActiveXObject","uint8A","byteLength","getUint8","OPEN","MozWebSocket","hashcode","onmessage","FileReader","Blob","readAsArrayBuffer","onload","evt","DONE","onopen","onclose","onerror","alert","setRequestHeader","onreadystatechange","statusText","warn","MATCHVS_USER_GATEWAY_SPEED_REQ","MATCHVS_USER_GATEWAY_SPEED_RSP","MATCHVS_USER_LOGIN_REQ","MATCHVS_USER_LOGIN_RSP","MATCHVS_USER_HEARTBEAT_RSP","MATCHVS_USER_LOGOUT_RSP","MATCHVS_NETWORK_STATE_NOTIFY","MATCHVS_ROOM_CREATE_REQ","MATCHVS_ROOM_CREATE_RSP","MATCHVS_ROOM_JOIN_REQ","MATCHVS_ROOM_JOIN_RSP","MATCHVS_ROOM_JOIN_OVER_REQ","MATCHVS_ROOM_JOIN_OVER_RSP","MATCHVS_ROOM_JOIN_OVER_NOTIFY","MATCHVS_ROOM_LEAVE_REQ","MATCHVS_ROOM_LEAVE_RSP","MATCHVS_ROOM_NOTICE_USER_JOIN","MATCHVS_ROOM_NOTICE_USER_LEAVE","MATCHVS_ROOM_CHECK_IN_REQ","MATCHVS_ROOM_CHECK_IN_RSP","MATCHVS_HEARTBEAT_HOTEL_RSP","MATCHVS_BROADCAST_HOTEL_RSP","MATCHVS_HOTEL_NOTIFY","MATCHVS_ROOM_CHECKIN_NOTIFY","CMD_GET_ROOM_LIST_REQ","CMD_GET_ROOM_LIST_RSP","CMD_GET_ROOM_DETAIL_REQ","CMD_GET_ROOM_DETAIL_RSP","CMD_GET_ROOM_LIST_EX_REQ","CMD_GET_ROOM_LIST_EX_RSP","CMD_SET_ROOM_PROPERTY_RSP","CMD_SET_ROOM_PROPERTY_NOTIFY","CMD_DISCONNECT_RSP","CMD_KICK_PLAYER_RSP","CMD_KICK_PLAYER_NOTIFY","CMD_SUBSCRIBE_ACK_CMDID","CMD_PUBLISH_ACKCMDID","CMD_PUBLISH_NOTIFYCMDID","CMD_SET_FRAME_SYNCRATEACK_CMDID","CMD_SET_FRAME_SYNCRATENOTIFY_CMDID","CMD_FRAME_BROADCASTACK_CMDID","CMD_FRAME_DATANOTIFY_CMDID","CMD_FRAME_SYNCNOTIFY_CMDID","CMD_ROOM_JOIN_OPEN_RSP","CMD_ROOM_JOIN_OPEN_NOT","FIXED_HEAD_SIZE","MatchvsProtoMap","MsProtoMapDesc","MatchvsProtocol","mUserID","msProtoMap","fillHeader","dataArray","setInt32","setInt16","parseHeader","getInt32","getInt16","handleMsg","ext","protoMap","packet","payload","userToken","app_key","app_secret","gateway_id","toMd5","md5","speed","versionSDK","_user","_gameID","setUint32","setUint16","roomCreate","maxUser","pRoomInfo","pPlayInfo","pi","roomJoin","playInfo","joinRoomSpecial","joinRoomWithProperties","kvtags","roomCheckIn","pkg","getRoomList","roomFilter","getRoomListEx","EngineNetworkMap","doSubHandle","mEngineState","ErrorRspWork","mRsp","mRecntRoomID","mMsPubArgs","reconbuf","mProtocol","mNetWork","mBookInfo","mRoomInfo","mUserListForJoinRoomRsp","joinRoomNotifyInfo","mHotelNetWork","mAllPlayers","roomUserList","roomuser","ownerID","ownerId","roomCheckInNotify","checkins","players","maxPlayers","joinoverNotifyInfo","srcUserID","joinOverNotify","gsExist","heartBeatResponse","hotelHeartBeatRsp","sendEventResponse","gameServerNotify","srcUserId","subscribeEventGroupResponse","sendEventGroupResponse","sendEventGroupNotify","gatewaySpeedResponse","Seq","roominfolist","roomList","disConnectResponse","hotelTimer","sendFrameEventResponse","frameCache","frameData","msFrameData","frameIndex","frameWaitCount","roomInfoList","roomAttrs","roomAttr","gamePlayer","watchPlaer","createTime","watchPlayer","roomListExInfo","roomDetail","playerlist","player","userinfo","roomDetailRsp","setRoomPropertyResponse","setRoomPropertyNotify","joinOpenResponse","joinOpenNotify","heartBeat","broadCast","destUids","destType","msgType","broadcast","subscribeEventGroup","confirms","cancels","subscribe","sendEventGroup","groups","sendevnt","hotelHeartBeat","heartbeat","disConnect","paker","kickPlayer","kick","frameRate","reqEx","setRoomProperty","joinOpen","M_ENGINE","ErrCall","tempmsg","NetWorkCallBackImp","Child","Parent","MSExtend","engineWorkMap","gtwTimer","mHotelTimer","hbTimers","clearAllBeatTimer","dohandle","mChannel","mPlatform","channle","secretKey","gatewayID","mGameID","getHostList","premiseInit","endPoint","mNetWorkCallBackImp","loginbuf","pGameID","pGameVersion","pAppKey","pSecretKey","mToken","mGameVersion","mAppKey","createRoom","cinfo","uninit","matchinfo","joinRoom","loginRsp","notifyInfo","notify","tRsp","dstNum","rep","Instance","userids","desttype","userIDs","_engine","cacheKey","cacheUserInfo","getItem","getStorageSync","LocalStore_Load","nickname","setItem","setStorageSync","LocalStore_Save","isUseWSS","vsuser","wssProxy","cmsns","vsopen","vspay","hashSet","httpReq","hashGet","protocol","dcodeIO","ProtoBuf","newBuilder","populateAccessors","package","syntax","messages","rule","enums","services","options","rpc","request_stream","response_stream","isNamespace","build","initNetwork","pomeloBuildObj","pomeloBuild","pomelo","isBinding","netListener","_registerNetEvent","curMsgName","routerManager","receiveRouterFromServer","route","getCurMsgName","ip","port","cb","netConfig","isKicked","wsStr","guid","s4","routeStr","dataObj","uuid","addRouterToManager","msgOrigin","router","setNetLoadingStatus","checkNetLoadingStatus","currentTime","netLoadingCheckInterval","clearCallback","isConnecting","isOpen","isClosed","isClosing","msgName","msgContent","blueHead","blueCorner","blueStraight","redHead","redCorner","redStraight","blueHeadPool","blueCornerPool","blueStraightPool","redHeadPool","redCornerPool","redStraightPool","path","angle","twoNodeRotation","pos1","pos2","setHead","straightPosAndLong","setStraight","long","_angle","angleCorner","threeNodeRotation","_pos","_pos2","setCorner","_angle2","path1","path2","path3","rotation","initDelete","straight","getChildByName","recyclePath","_this","playerSprite","userInfoSet","load","texture","Rect","selfNode","rivalNode","playerInit","scoreLabel","maxCombo","blockNumber","buff","changeScore","getData","modules","aliases","requirePomelo","orig","resolved","resolve","client","component","relative","paths","resolvePath","normalize","curr","segs","register","definition","alias","to","selfPomelo","localrequirePomelo","arr","exists","Emitter","_callbacks","once","_off","removeListener","removeAllListeners","callbacks","emit","listeners","hasListeners","ByteArray","Protocol","Package","TYPE_HANDSHAKE","TYPE_HANDSHAKE_ACK","TYPE_HEARTBEAT","TYPE_DATA","TYPE_KICK","TYPE_REQUEST","TYPE_NOTIFY","TYPE_RESPONSE","TYPE_PUSH","strencode","byteArray","offset","charCode","codes","_buffer","copyArray","strdecode","encode","decode","compressRoute","idBytes","msgHasId","caculateMsgIdBytes","msgLen","msgHasRoute","encodeMsgFlag","encodeMsgId","encodeMsgRoute","encodeMsgBody","bytesLen","byte","routeLen","bodyLen","dest","doffset","soffset","copy","Buffer","Protobuf","encoder","encoderProtos","decoder","decoderProtos","protobuf","constants","TYPES","uInt32","sInt32","int32","double","float","isSimpleType","Codec","codec","float32Array","Float32Array","float64Array","Float64Array","uInt8Array","encode2UTF8","codeLength","encodeUInt32","encodeSInt32","decodeUInt32","decodeSInt32","encodeFloat","decodeFloat","encodeDouble","decodeDouble","encodeStr","decodeStr","MsgEncoder","constant","encodeMsg","protos","option","encodeTag","encodeProp","encodeArray","__messages","tmpBuffer","checkMsg","MsgDecoder","decodeMsg","getHead","__tags","decodeProp","decodeArray","getBytes","setProtos","EventEmitter","F","root","reqId","routeMap","heartbeatInterval","heartbeatTimeout","nextHeartbeatTimeout","heartbeatId","heartbeatTimeoutId","handshakeCallback","handshakeBuffer","sys","initCallback","initWebSocket","binaryType","processPackage","clearTimeout","sendMessage","CONNECTING","CLOSED","CLOSING","dict","heartbeatTimeoutCb","gap","handshakeInit","deCompose","processMessage","server","abbrs","initData","rankCntLb","userNameLb","userIcon","userScoreLb","rankIndex","icon","nameLb","roomIdLb","roomNameLb","msRoomAttribute","ownerTag","otherTag","selfTag","defaultNode","commonNode","pageView","nodeDict","EventType","TOUCH_END","leftScroll","rightScroll","PageView","getCurrentPageIndex","setCurrentPageIndex","lobbyPanel","openBotton","update","Button","interactable","playerCntLb","playerCnt","refreshBtnState","quit","addPlayerCount","subPlayerCount","EditBox","createRoomInit","sure","_cc$Class","bgmAudio","startAudio","selfScore","rivalScore","progressBar","numberSpriteFrame","playerLcon","rivalLcon","initArrBlock","sendInitMapMsg","setPlayerId","TOUCH_START","exit","checkGameStatus","bgmId","sendExpressionMsg","customEventData","showLcon","arrPlayer","playPrompt","removeId","arrRemove","blockType","ratio","ProgressBar","progress","scheduleCountDown","countDown","sendNextRound","selfData","rivalData","gameData","gamestate","beginnerCourse","randomRoom","inviteFriend","rank","uiRankPanelScript","onEnable","shareToArk","uiOperateCallBack","isUseMask","lastMaskIndex","panel","refresh","playerIcons","bQuit","tagsInfo","playerIcon","notifyGameStart","linkWidget","widgetName","nodeName","childrenCount","rankPrefab","rank1Node","rank2Node","rank3Node","rank1Info","rank2Info","rank3Info","rankdata","loseClip","victoryClip","player1","player2","player3","loseCamp","Camp","Friend","roomPrefab","editBox","rooms","roomRqId","room","joinRoomInit","playerPrefab","refreshStartBtn","spNode","btn","WHITE","BLACK","isLose","showScore"],"mappings":"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A,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAIAsB,GAAA,EACAtB,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAIAsB,GAAA,EACAtB,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAIAsB,GAAA,EACAtB,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAIAsB,GAAA,EACAtB,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAIAsB,GAAA,GACAtB,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAGAsB,GAAA,GACAtB,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAGAsB,GAAA,GACAtB,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAIAsB,GAAA,GACAtB,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAIAsB,GAAA,GACAtB,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAIAsB,GAAA,GACAtB,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAKAsB,GAAA,GACAtB,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAKAsB,GAAA,GACAtB,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAIAsB,GAAA,GACAtB,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,I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","sourcesContent":["/*\n    create by hao.c 2018/04/10\n\n    desc: 游戏数据相关操作逻辑\n */\n\nwindow.dataFunc = {\n    // 表格加载--\n    arrTables: [],\n    csvTables: {},\n    csvTableForArr: {},\n    tableCast: {},\n    tableComment: {},\n    CELL_DELIMITERS: [\",\", \";\", \"\\t\", \"|\", \"^\"],\n    LINE_DELIMITERS: [\"\\r\\n\", \"\\r\", \"\\n\"],\n    // 动画--\n    uiPanelAnimationClips: {}\n};\n\ndataFunc.getTable = function(tableName) {\n    return dataFunc.csvTables[tableName];\n};\n\ndataFunc.getTableArr = function(tableName) {\n    return dataFunc.csvTableForArr[tableName];\n};\n\ndataFunc.queryOne = function(tableName, key, value) {\n    var table = dataFunc.getTable(tableName);\n    if (!table) {\n        return null;\n    }\n\n    if (key) {\n        for (var tbItem in table) {\n            if (!table.hasOwnProperty(tbItem)) {\n                continue;\n            }\n\n            if (table[tbItem][key] === value) {\n                return table[tbItem];\n            }\n        }\n    } else {\n        return table[value];\n    }\n};\n\ndataFunc.queryByID = function(tableName, ID) {\n    return dataFunc.queryOne(tableName, null, ID);\n};\n\ndataFunc.queryAll = function(tableName, key, value) {\n    var table = dataFunc.getTable(tableName);\n    if (!table || !key) {\n        return null;\n    }\n\n    var ret = {};\n    for (var tbItem in table) {\n        if (!table.hasOwnProperty(tbItem)) {\n            continue;\n        }\n\n        if (table[tbItem][key] === value) {\n            ret[tbItem] = table[tbItem];\n        }\n    }\n\n    return ret;\n};\n\ndataFunc.loadConfigs = function(progressCb, callback) {\n\n    // 加载动画\n    cc.loader.loadResDir(\"panelAnimClips\", cc.AnimationClip, function(err, clips) {\n        if (err) {\n            cc.error(err.message || err);\n            return;\n        }\n        for (var i = 0; i < clips.length; i++) {\n            dataFunc.uiPanelAnimationClips[clips[i].name] = clips[i];\n        }\n    });\n\n    // 加载数据表\n    var currentLoad = 0;\n    dataFunc.arrTables.forEach(function(tableName, index) {\n        cc.loader.loadRes(\"data/\" + tableName, function(err, content) {\n            if (err) {\n                cc.error(err.message || err);\n                return;\n            }\n            if (progressCb) {\n                progressCb(index + 1, dataFunc.arrTables.length);\n            }\n            addTable(tableName, content);\n            if (callback) {\n                currentLoad++;\n                if (currentLoad >= dataFunc.arrTables.length) {\n                    callback();\n                }\n            }\n        });\n    });\n\n    function addTable(tableName, tableContent, force) {\n        if (dataFunc.csvTables[tableName] && !force) {\n            return;\n        }\n\n        var tableData = {};\n        var tableArr = [];\n        var opts = {header: true};\n        CSV.parse(tableContent, opts, function(row, keyname) {\n            tableData[row[keyname]] = row;\n            tableArr.push(row);\n        });\n\n        dataFunc.tableCast[tableName] = CSV.opts.cast;\n        dataFunc.tableComment[tableName] = CSV.opts.comment;\n        dataFunc.csvTables[tableName] = tableData;\n        dataFunc.csvTableForArr[tableName] = tableArr;\n    };\n\n    function getterCast(value, index, cast, d) {\n\n        if (cast instanceof Array) {\n            if (cast[index] === \"number\") {\n                return Number(d[index]);\n            } else if (cast[index] === \"boolean\") {\n                return d[index] === \"true\" || d[index] === \"t\" || d[index] === \"1\";\n            } else {\n                return d[index];\n            }\n        } else {\n            if (!isNaN(Number(value))) {\n                return Number(d[index]);\n            } else if (value == \"false\" || value == \"true\" || value == \"t\" || value == \"f\") {\n                return d[index] === \"true\" || d[index] === \"t\" || d[index] === \"1\";\n            } else {\n                return d[index];\n            }\n        }\n    }\n\n    var CSV = {\n        /* =========================================\n         * Constants ===============================\n         * ========================================= */\n\n        STANDARD_DECODE_OPTS: {\n            skip: 0,\n            limit: false,\n            header: false,\n            cast: false,\n            comment: \"\"\n        },\n\n        STANDARD_ENCODE_OPTS: {\n            delimiter: dataFunc.CELL_DELIMITERS[0],\n            newline: dataFunc.LINE_DELIMITERS[0],\n            skip: 0,\n            limit: false,\n            header: false\n        },\n\n        quoteMark: '\"',\n        doubleQuoteMark: '\"\"',\n        quoteRegex: /\"/g,\n\n\n        /* =========================================\n         * Utility Functions =======================\n         * ========================================= */\n\n\n\n        assign: function() {\n            var args = Array.prototype.slice.call(arguments);\n            var base = args[0];\n            var rest = args.slice(1);\n            for (var i = 0, len = rest.length; i < len; i++) {\n                for (var attr in rest[i]) {\n                    base[attr] = rest[i][attr];\n                }\n            }\n\n            return base;\n        },\n\n        map: function(collection, fn) {\n            var results = [];\n            for (var i = 0, len = collection.length; i < len; i++) {\n                results[i] = fn(collection[i], i);\n            }\n\n            return results;\n        },\n\n        getType: function(obj) {\n            return Object.prototype.toString.call(obj).slice(8, -1);\n        },\n\n        getLimit: function(limit, len) {\n            return limit === false ? len : limit;\n        },\n\n        buildObjectConstructor: function(fields, sample, cast) {\n            return function(d) {\n                var object = new Object();\n                var setter = function(attr, value) {\n                    return object[attr] = value;\n                };\n                if (cast) {\n                    fields.forEach(function(attr, idx) {\n                        setter(attr, getterCast(sample[idx], idx, cast, d));\n                    });\n                } else {\n                    fields.forEach(function(attr, idx) {\n                        setter(attr, getterCast(sample[idx], idx, null, d));\n                    });\n                }\n                // body.push(\"return object;\");\n                // body.join(\";\\n\");\n                return object;\n            };\n        },\n\n        buildArrayConstructor: function(sample, cast) {\n            return function(d) {\n                var row = new Array(sample.length);\n                var setter = function(idx, value) {\n                    return row[idx] = value;\n                };\n                if (cast) {\n                    fields.forEach(function(attr, idx) {\n                        setter(attr, getterCast(sample[idx], idx, cast, d));\n                    });\n                } else {\n                    fields.forEach(function(attr, idx) {\n                        setter(attr, getterCast(sample[idx], idx, null, d));\n                    });\n                }\n                return row;\n            };\n        },\n\n        frequency: function(coll, needle, limit) {\n            if (limit === void 0) limit = false;\n\n            var count = 0;\n            var lastIndex = 0;\n            var maxIndex = this.getLimit(limit, coll.length);\n\n            while (lastIndex < maxIndex) {\n                lastIndex = coll.indexOf(needle, lastIndex);\n                if (lastIndex === -1) break;\n                lastIndex += 1;\n                count++;\n            }\n\n            return count;\n        },\n\n        mostFrequent: function(coll, needles, limit) {\n            var max = 0;\n            var detected;\n\n            for (var cur = needles.length - 1; cur >= 0; cur--) {\n                if (this.frequency(coll, needles[cur], limit) > max) {\n                    detected = needles[cur];\n                }\n            }\n\n            return detected || needles[0];\n        },\n\n        unsafeParse: function(text, opts, fn) {\n            var lines = text.split(opts.newline);\n\n            if (opts.skip > 0) {\n                lines.splice(opts.skip);\n            }\n\n            var fields;\n            var constructor;\n\n            function cells(lines) {\n                var line = lines.shift();\n                if (line.indexOf('\"') >= 0) {// 含引号\n\n                    // 找到这行完整的数据, 找到对称的双引号\n                    var lastIndex = 0;\n                    var findIndex = 0;\n                    var count = 0;\n                    while (lines.length > 0) {\n                        lastIndex = line.indexOf('\"', findIndex);\n                        if (lastIndex === -1 && count % 2 === 0) break;\n\n                        if (lastIndex !== -1) {\n                            findIndex = lastIndex + 1;\n                            count++;\n                        } else {\n                            line = line + opts.newline + lines.shift();\n                        }\n                    }\n\n                    var list = [];\n                    var item;\n\n                    var quoteCount = 0;\n\n                    var start = 0;\n                    var end = 0;\n                    var length = line.length;\n                    for (var key in line) {\n                        if (!line.hasOwnProperty(key)) {\n                            continue;\n                        }\n\n                        key = parseInt(key);\n                        var value = line[key];\n\n                        if (key === 0 && value === '\"') {\n                            quoteCount++;\n                            start = 1;\n                        }\n\n                        if (value === '\"') {\n                            quoteCount++;\n\n                            if (line[key - 1] === opts.delimiter && start === key) {\n                                start++;\n                            }\n                        }\n\n                        if (value === '\"' && quoteCount % 2 === 0) {\n\n                            if (line[key + 1] === opts.delimiter || key + 1 === length) {\n                                end = key;\n                                item = line.substring(start, end);\n                                list.push(item);\n                                start = end + 2;\n                                end = start;\n                            }\n\n                        }\n\n                        if (value === opts.delimiter && quoteCount % 2 === 0) {\n                            end = key;\n                            if (end > start) {\n                                item = line.substring(start, end);\n                                list.push(item);\n                                start = end + 1;\n                                end = start;\n                            } else if (end === start) {\n                                list.push(\"\");\n                                start = end + 1;\n                                end = start;\n                            }\n                        }\n\n                    }\n\n                    end = length;\n\n                    if (end >= start) {\n                        item = line.substring(start, end);\n                        list.push(item);\n                    }\n\n                    return list;\n                } else {\n                    return line.split(opts.delimiter);\n                }\n            }\n\n            if (opts.header) {\n                if (opts.header === true) {\n                    opts.comment = cells(lines); // 第一行是注释\n                    opts.cast = cells(lines); // 第二行是数据类型\n                    fields = cells(lines);\n                } else if (this.getType(opts.header) === \"Array\") {\n                    fields = opts.header;\n                }\n\n                constructor = this.buildObjectConstructor(fields, lines[0].split(opts.delimiter), opts.cast);\n            } else {\n                constructor = this.buildArrayConstructor(lines[0].split(opts.delimiter), opts.cast);\n            }\n\n            while (lines.length > 0) {\n                var row = cells(lines);\n                if (row.length > 1) {\n                    fn(constructor(row), fields[0]);\n                }\n            }\n\n            return true;\n        },\n\n        parse: function(text, opts, fn) {\n            var rows;\n\n            if (this.getType(opts) === \"Function\") {\n                fn = opts;\n                opts = {};\n            } else if (this.getType(fn) !== \"Function\") {\n                rows = [];\n                fn = rows.push.bind(rows);\n            } else {\n                rows = [];\n            }\n\n            opts = this.assign({}, this.STANDARD_DECODE_OPTS, opts);\n            this.opts = opts;\n\n            if (!opts.delimiter || !opts.newline) {\n                var limit = Math.min(48, Math.floor(text.length / 20), text.length);\n                opts.delimiter = opts.delimiter || this.mostFrequent(text, dataFunc.CELL_DELIMITERS, limit);\n                opts.newline = opts.newline || this.mostFrequent(text, dataFunc.LINE_DELIMITERS, limit);\n            }\n\n            // modify by jl 由表自行控制不要含有双引号.提高解析效率\n            return this.unsafeParse(text, opts, fn) &&\n                (rows.length > 0 ? rows : true);\n        }\n    };\n}","window.Game = {\n    GameManager: null,\n    BlockManager: null,\n    PlayerManager: null,\n    ClickManager: null,\n    BubbleManager: null,\n    PathManager: null,\n    ComboManager: null,\n    EffectManager: null\n}\n\nwindow.GameState = cc.Enum({\n    None: 0,\n    Pause: 1,\n    Play: 2,\n    Over: 3\n})\n\nwindow.DirectState = cc.Enum({\n    None: 0,\n    Left: 1,\n    Right: 2\n})\n\nwindow.GLB = {\n    RANDOM_MATCH: 1,\n    PROPERTY_MATCH: 2,\n    COOPERATION: 1,\n    COMPETITION: 2,\n    MAX_PLAYER_COUNT: 2,\n\n    PLAYER_COUNTS: [2],\n\n    GAME_START_EVENT: \"gameStart\",\n    GAME_OVER_EVENT: \"gameOver\",\n    READY: \"ready\",\n    ROUND_START: \"roundStar\",\n    SCORE_EVENT: \"score\",\n    DELETE_BLOCK:\"deleteBlock\",\n    DISTANCE: \"distance\",\n    INITMAP:\"initMap\",\n    BUBBLE:\"bubble\",\n    TIME_OUT:\"timeOut\",\n    GET_GAME_DATA:\"getGameData\",\n    RECONNECTION_DATA:\"ReconnectionData\",\n    COUNT_DOWN:\"countDown\",\n\n    channel: 'MatchVS',\n    platform: 'alpha',\n    gameId: 201681,\n    gameVersion: 1,\n    IP: \"wxrank.matchvs.com\",\n    PORT: \"3010\",\n    GAME_NAME: \"game10\",\n    appKey: 'd5b8332763ac468e9462488110e10955',\n    secret: '542763e151f04defa81195fbe2fca935',\n\n    matchType: 1,\n    gameType: 2,\n    userInfo: null,\n    playerUserIds: [],\n    isRoomOwner: false,\n\n    syncFrame: true,\n    FRAME_RATE: 10,\n    nickName: null,\n    avatarUrl: null,\n\n    NormalBulletSpeed: 1000,\n    limitX: 53,\n    limitY: 780,\n    range:77\n}\n","function MatchvsEngine() {\r\n    console.log('MatchvsEngine init');\r\n}\r\n\r\nMatchvsEngine.prototype.init = function(matchVSResponses, channel, platform, gameid){\r\n    this.responses = matchVSResponses;\r\n    return 0;\r\n};\r\n\r\nMatchvsEngine.prototype.registerUser = function() {\r\n    this._forEachResponse(function(res) {\r\n        setTimeout(function(){\r\n            var userInfo = {\r\n                userID: 10086,\r\n                token: 'jkfldjalfkdjaljfs',\r\n                name: '张三',\r\n                avatar: 'http://d3819ii77zvwic.cloudfront.net/wp-content/uploads/2015/02/child-fist-pump.jpg'\r\n            };\r\n            res.registerUserResponse && res.registerUserResponse(userInfo);\r\n        }, 100);\r\n    });\r\n    return 0;\r\n};\r\n\r\nMatchvsEngine.prototype.login = function(userID,token,gameid,gameVersion,appkey, secret,deviceID,gatewayid){\r\n    return 0;\r\n};\r\n\r\nMatchvsEngine.prototype.joinRandomRoom = function(){\r\n    this._forEachResponse(function(res) {\r\n        setTimeout(function(){\r\n            var roomInfo = {\r\n                status: 0,\r\n                userInfoList: [\r\n                    {userID: 10086,userProfile: '张三'},\r\n                    {userID: 10087,userProfile: '李四'},\r\n                    {userID: 10088,userProfile: '王五'},\r\n                ],\r\n                roomInfo: {\r\n                    rootID: 1028374,\r\n                    rootProperty: \"好房间\",\r\n                    owner: 10086,\r\n                }\r\n            };\r\n            res && res.roomJoinResponse(roomInfo);\r\n        }, 100);\r\n    });\r\n    return 0;\r\n};\r\n\r\nMatchvsEngine.prototype._forEachResponse = function(func) {\r\n    if (this.responses) {\r\n        for(var i = 0; i<this.responses.length; i++) {\r\n            this.responses[i] && func(this.responses[i]);\r\n        }\r\n    }\r\n};\r\n\r\nMatchvsEngine.prototype.joinOver = function(){\r\n    return 0;\r\n};\r\n\r\nMatchvsEngine.prototype.sendEvent = function(event){\r\n    var mockEventId = new Date().getTime();\r\n    this._forEachResponse(function(res){\r\n        setTimeout(function(){\r\n            res.sendEventRsp && res.sendEventRsp({\"status\": 0, \"seq\": mockEventId});\r\n        }, 100);\r\n    });\r\n    return {status: 0, seq: mockEventId};\r\n};\r\n\r\nmodule.exports = MatchvsEngine;","var engine;\r\nvar response = {};\r\nvar MsMatchInfo;\r\nvar MsCreateRoomInfo;\r\ntry {\r\n    engine = Matchvs.MatchvsEngine.getInstance();\r\n    MsMatchInfo = Matchvs.MsMatchInfo;\r\n    MsCreateRoomInfo = Matchvs.MsCreateRoomInfo;\r\n} catch (e) {\r\n    try {\r\n        var jsMatchvs = require(\"matchvs.all\");\r\n        engine = new jsMatchvs.MatchvsEngine();\r\n        response = new jsMatchvs.MatchvsResponse();\r\n        MsMatchInfo = jsMatchvs.MsMatchInfo;\r\n        MsCreateRoomInfo = jsMatchvs.MsCreateRoomInfo;\r\n    } catch (e) {\r\n        var MatchVSEngine = require('MatchvsEngine');\r\n        engine = new MatchVSEngine();\r\n    }\r\n}\r\nmodule.exports = {\r\n    engine: engine,\r\n    response: response,\r\n    MatchInfo: MsMatchInfo,\r\n    CreateRoomInfo: MsCreateRoomInfo,\r\n};","/*\n    create by hao.c 2018/04/10\n\n    desc: 游戏显示相关操作逻辑\n */\n\nwindow.uiFunc = {\n    uiList: []\n};\n\nuiFunc.openUI = function(uiName, callBack) {\n    cc.loader.loadRes('ui/' + uiName, function(err, prefab) {\n        if (err) {\n            cc.log(err.message || err);\n            return;\n        }\n\n        var temp = cc.instantiate(prefab);\n        temp.parent = cc.Canvas.instance.node;\n        uiFunc.uiList.push(temp);\n\n        for (var i = 0; i < uiFunc.uiList.length; i++) {\n            if (uiFunc.uiList[i] && uiFunc.uiList[i].name !== \"\") {\n                var targetUI = uiFunc.uiList[i].getComponent(\"uiPanel\");\n                if (targetUI && targetUI.isTop) {\n                    targetUI.node.setSiblingIndex(Number.MAX_SAFE_INTEGER);\n                }\n            }\n        }\n        // event--\n        if (callBack) {\n            callBack(temp);\n        }\n    });\n};\n\nuiFunc.closeUI = function(targetUI) {\n    for (var i = uiFunc.uiList.length - 1; i >= 0; i--) {\n        if (uiFunc.uiList[i] && targetUI === uiFunc.uiList[i]) {\n            targetUI.destroy();\n            uiFunc.uiList.splice(i, 1);\n            break;\n        }\n    }\n};\n\nuiFunc.findUI = function(uiName) {\n    for (var i = uiFunc.uiList.length - 1; i >= 0; i--) {\n        var temp = uiFunc.uiList[i];\n        if (temp && temp.name === uiName) {\n            return temp;\n        }\n    }\n    return null;\n}\n\nuiFunc.getUiList = function() {\n    return uiFunc.uiList;\n}","var mvs = require(\"Matchvs\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        blockPrefab:{\n            type: cc.Prefab,\n            default: null\n        },\n        linkAudio: {\n            default: null,\n            url: cc.AudioClip\n        },\n        blockSpriteFrame:{\n            default:[],\n            type: cc.SpriteFrame\n        }\n    },\n\n    onLoad () {\n        Game.BlockManager = this;\n        this.index = 0;\n        this.arrMap = [];\n        this.newArrMap = [];\n        this.blockPool = new cc.NodePool();\n    },\n    receiveArrMap(array){\n        this.deleteWholeBlock();\n        for(let row = 0; row < 8; row++){\n            this.arrMap[row] = [];\n            for (let col = 0; col < 9; col++){\n                this.arrMap[row][col] = this.arrBlcokData(row,col,array[row][col]);\n            }\n        }\n        this.initMap(this.arrMap);\n    },\n    arrBlcokData(row,col,type){\n        let y = GLB.limitY - GLB.range * row;\n        let x = GLB.limitX + GLB.range * col;\n        let data = {\n            pos: cc.p(x,y),\n            type: type,\n            sprite: null\n        };\n        return data;\n    },\n\n    initMap(arrMap){\n        //初始化地图\n        for(let row = 0; row < 8; row++){\n            for (let col = 0; col < 9; col++){\n                if(arrMap[row][col].type !== null){\n                    var block = this.blockPool.get();\n                    if (!block){\n                       block = cc.instantiate(this.blockPrefab);\n                    }\n                    block.getComponent(cc.Sprite).spriteFrame = this.blockSpriteFrame[arrMap[row][col].type];\n                    block.parent = this.node;\n                    block.setPosition(arrMap[row][col].pos);\n                    block.row = row;\n                    block.col = col;\n                    block.type = arrMap[row][col].type;\n                    arrMap[row][col].sprite = block;\n                }\n            }\n        }\n        Game.ClickManager.setArrMap(arrMap);\n        Game.PlayerManager.self.combo = 1;\n        Game.PlayerManager.rival.combo = 1;\n    },\n    deleteBlock(first,last,id,arrPath) {\n        if (this.arrMap[first.row][first.col].sprite === null\n            || this.arrMap[last.row][last.col].sprite === null) {\n            return;\n        }\n        if (this.arrMap[first.row][first.col].type !== this.arrMap[last.row][last.col].type) {\n            return;\n        }\n\n        cc.audioEngine.play(this.linkAudio, false, 1);\n        Game.PathManager.addPath(arrPath, id);\n        this.arrMap[first.row][first.col].type = null;\n        this.recycleBlock(this.arrMap[first.row][first.col].sprite);\n        this.arrMap[first.row][first.col].sprite = null;\n        this.arrMap[last.row][last.col].type = null;\n        this.recycleBlock(this.arrMap[last.row][last.col].sprite);\n        this.arrMap[last.row][last.col].sprite = null;\n        if (id === GLB.userInfo.id) {\n            Game.PlayerManager.self.addScore();\n        } else {\n            Game.PlayerManager.rival.addScore();\n            Game.ClickManager.curBlocBeDelete(first);\n            Game.ClickManager.curBlocBeDelete(last);\n        }\n        var pos = this.arrMap[last.row][last.col].pos;\n        Game.ComboManager.addCombo(pos, id);\n        this.resettingMap();\n    },\n    resettingMap(){\n        let arrBlock = this.node.children;\n        if (arrBlock.length <= 0){\n            this.node.dispatchEvent(new cc.Event.EventCustom(clientEvent.eventType.nextRound,true));\n            return;\n        }\n\n        if (this.automaticClearing()) {\n            return;\n        }\n        if(GLB.isRoomOwner){\n            while (true){\n                var number1 = 0;\n                var number2 = 0;\n                while (number1 === number2){\n                    number1 = Math.floor(Math.random() * arrBlock.length);\n                    number2 = Math.floor(Math.random() * arrBlock.length);\n                }\n                this.exchangeType(arrBlock[number1],arrBlock[number2]);\n                if (this.automaticClearing()) {\n                    break;\n                }\n            }\n            var arrMap = this.getArrMap();\n            clientEvent.dispatch(clientEvent.eventType.updateMap, arrMap);\n        }\n    },\n    exchangeType(block1,block2){\n        var temp = block1.type;\n        block1.getComponent(cc.Sprite).spriteFrame = this.blockSpriteFrame[block2.type];\n        block1.type = block2.type;\n        this.arrMap[block1.row][block1.col].type = block2.type;\n        block2.getComponent(cc.Sprite).spriteFrame = this.blockSpriteFrame[temp];\n        block2.type = temp;\n        this.arrMap[block2.row][block2.col].type = temp;\n    },\n    deleteWholeBlock(){\n        this.arrMap = [];\n        if(this.node.children.length > 0){\n            this.node.removeAllChildren();\n        }\n        Game.ClickManager.choiceBox.destroy();\n        Game.ClickManager.curSelec = null;\n        Game.ClickManager.setChoiceBox();\n    },\n    recycleBlock(target){\n        this.blockPool.put(target);\n    },\n    getArrMap(){\n        var arrMap = [];\n        for (let row = 0; row < 8 ; row++){\n            arrMap[row] = [];\n            for(let col = 0; col < 9; col++){\n                arrMap[row][col] = this.arrMap[row][col].type;\n            }\n        }\n        return arrMap;\n    },\n    nextRound(){\n        this.deleteWholeBlock();\n        this.node.dispatchEvent(new cc.Event.EventCustom(clientEvent.eventType.nextRound,true));\n    },\n    automaticClearing(){\n        let arrBlock = this.node.children;\n        for (let i = 0; i < arrBlock.length; i++){\n            for (let j = i + 1; j < arrBlock.length; j++){\n                if (Game.ClickManager.link(arrBlock[i],arrBlock[j])){\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n    // update (dt) {},\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n    },\n    onLoad () {\n        this.node.on(\"click\",this.click,this);\n    },\n    click(){\n        Game.ClickManager.clickBlock(this.node);\n    }\n});\n","\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        bubblePrefab:{\n            type:cc.Prefab,\n            default:null\n        },\n        bubbleClip:{\n            default: null,\n            url: cc.AudioClip\n        },\n        bubbleSpriteFrame:{\n            default:[],\n            type: cc.SpriteFrame\n        }\n    },\n    start () {\n        Game.BubbleManager = this;\n        this.selfBubblePool = new cc.NodePool();\n        this.rivalBubblePool = new cc.NodePool();\n    },\n    initBubble(type,id){\n        cc.audioEngine.play(this.bubbleClip, false, 1);\n        var i = null;\n        switch (type){\n            case \"one\": i = 0;\n                break;\n            case \"two\": i = 1;\n                break;\n            case \"three\": i = 2;\n                break;\n            case \"four\": i = 3;\n                break;\n            case \"five\": i = 4;\n                break;\n            case \"six\": i = 5;\n                break;\n        }\n        var x = -200;\n        var y = Math.random() * 100;\n        if (id !== Game.PlayerManager.self.playerId){\n            var bubble = this.selfBubblePool.get();\n            if (!bubble){\n                bubble = cc.instantiate(this.bubblePrefab);\n            }\n            bubble.getComponent(cc.Sprite).spriteFrame = this.bubbleSpriteFrame[i];\n            bubble.scaleX = -1;\n            var pos = cc.p(-x,y);\n            bubble.type = \"self\";\n        }else {\n            var bubble = this.rivalBubblePool.get();\n            if (!bubble){\n                bubble = cc.instantiate(this.bubblePrefab);\n            }\n            bubble.getComponent(cc.Sprite).spriteFrame = this.bubbleSpriteFrame[i];\n            var pos = cc.p(x,y);\n            bubble.type = \"rival\";\n        }\n        bubble.parent = this.node;\n        bubble.setPosition(pos);\n        var moveTo = cc.moveTo(3, cc.p(0, y));\n        var callFunc = cc.callFunc(this.removeSprite, bubble, this);\n        var seq = cc.sequence(moveTo,callFunc);\n        bubble.runAction(seq);\n\n    },\n    removeSprite(target){\n        if (target.type === \"self\"){\n            Game.BubbleManager.selfBubblePool.put(target);\n        }else{\n            Game.BubbleManager.rivalBubblePool.put(target);\n        }\n\n    }\n    // update (dt) {},\n});\n","var mvs = require(\"Matchvs\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        choiceBoxPrefab:{\n            default: null,\n            type: cc.Prefab\n        }\n    },\n    onLoad () {\n        Game.ClickManager = this;\n        this.curSelec = null;\n        this.arrMap = [];\n        this.bClick = false;\n        this.arrPath = [];\n        this.setChoiceBox();\n\n        this.jump = cc.repeatForever(\n            cc.sequence(\n                cc.moveBy(1, 0, 5),\n                cc.moveBy(0.5, 0, -5)\n            ));\n    },\n    setArrMap(arrMap){\n        this.arrMap = arrMap;\n    },\n    setChoiceBox(){\n        //创建点击效果的框 并隐藏\n        this.choiceBox = cc.instantiate(this.choiceBoxPrefab);\n        this.choiceBox.parent = this.node;\n        this.choiceBox.setPosition(cc.p(0,0));\n        this.choiceBox.setLocalZOrder(100);\n        this.choiceBox.opacity = 0;\n    },\n    clickBlock(block){\n        if (!this.bClick){\n            return;\n        }\n        if (this.curSelec === null){\n            this.curSelec = block;\n            this.setJump(block);\n        }else{\n            if (block !== this.curSelec) {\n                if (!this.link(this.curSelec, block)) {\n                    this.setStop(this.curSelec);\n                    this.curSelec = block;\n                    this.setJump(block);\n                }else{\n                    this.setStop(this.curSelec);\n                    this.sendEliminateBlock(this.curSelec,block,this.arrPath);\n                    this.choiceBox.opacity = 0;\n                }\n            }\n        }\n    },\n    setJump(block){\n\n        block.runAction(this.jump);\n        let pos = block.getPosition();\n        this.choiceBox.setPosition(pos);\n        this.choiceBox.opacity = 255;\n\n    },\n    setStop(block){\n        block.stopAllActions();\n        let pos = this.arrMap[block.row][block.col].pos;\n        block.setPosition(pos);\n        this.choiceBox.opacity = 0;\n    },\n    link(first,last){\n        if (first.type !== last.type){\n            return false;\n        }\n        //用于存储路径的数组\n        this.arrPath = [];\n        //判断能否直连\n        if (this.straightLine(first,last)){\n            this.pushPath(first);\n            this.pushPath(last);\n            return true;\n        }\n        //一个拐角，对角可直连\n        //取得拐角位置的精灵\n        var corner = {\n            row: first.row,\n            col: last.col\n        }\n        if (this.arrMap[corner.row][corner.col].type === null){\n            if (this.straightLine(first, corner)\n                && this.straightLine(corner, last)){\n                this.pushPath(first);\n                this.pushPath(corner);\n                this.pushPath(last);\n                return true;\n            }\n        }\n        //一个拐角的另一种方法\n        corner = {\n            row: last.row,\n            col: first.col\n        }\n        if (this.arrMap[corner.row][corner.col].type === null){\n            if (this.straightLine(first, corner)\n                && this.straightLine(corner, last)){\n                this.pushPath(first);\n                this.pushPath(corner);\n                this.pushPath(last);\n                return true;\n\n            }\n        }\n        //俩个精灵进行row扩展，判断是否有可直连的点\n        var arrFirstRow = [];\n        var arrLastRow = [];\n        this.expandRow(first,arrFirstRow);\n        this.expandRow(last,arrLastRow);\n        for (let firstEx of arrFirstRow){\n            for (let lastEx of arrLastRow){\n                if (firstEx.row === lastEx.row){\n                    if (this.straightLine(lastEx,firstEx)){\n                        this.pushPath(first);\n                        this.pushPath(firstEx);\n                        this.pushPath(lastEx);\n                        this.pushPath(last);\n                        return true;\n                    }\n                }\n            }\n        }\n        //俩个精灵进行col扩展，判断是否有可直连的点\n        var arrFirstCol = [];\n        var arrLastCol = [];\n        this.expandCol(first,arrFirstCol);\n        this.expandCol(last,arrLastCol);\n        for (let firstEx of arrFirstCol){\n            for (let lastEx of arrLastCol){\n                if (firstEx.col === lastEx.col){\n                    if (this.straightLine(lastEx,firstEx)){\n                        this.pushPath(first);\n                        this.pushPath(firstEx);\n                        this.pushPath(lastEx);\n                        this.pushPath(last);\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    },\n    straightLine(first,last){\n        //查询row相同时，俩个精灵col直线中有没有其他精灵\n        if (first.row === last.row){\n            let col1 = Math.min(first.col,last.col);\n            let col2 = Math.max(first.col,last.col);\n            var flag = true;\n            for (let col = col1 + 1;col < col2; col++){\n                if (this.arrMap[first.row][col].type !== null){\n                    flag = false;\n                    this.arrPath = [];\n                    break;\n                }\n            }\n        }\n        if (flag){\n            return true;\n        }\n        //查询col相同时，俩个精灵row直线中有没有其他精灵\n        if (first.col === last.col){\n            var row1 = Math.min(first.row,last.row);\n            var row2 = Math.max(first.row,last.row);\n            flag = true;\n            for (let row = row1 + 1;row < row2; row++){\n                if (this.arrMap[row][first.col].type !== null){\n                    flag = false;\n                    this.arrPath = [];\n                    break;\n                }\n            }\n        }\n        if (flag){\n            return true;\n        }\n        return false;\n    },\n    expandRow(sprite,array){\n        //row扩展到边界，如果都是空的就将扩展的点放入数组，知道触碰到边界或其他方块\n        for(let row = sprite.row + 1; row < 8; row++){\n            if (this.arrMap[row][sprite.col].type !== null){\n                break\n            }\n            let data = {\n                row: row,\n                col: sprite.col\n            }\n            array.push(data);\n        }\n        for(let row = sprite.row - 1; row >= 0; row--){\n            if (this.arrMap[row][sprite.col].type !== null){\n                break\n            }\n            let data = {\n                row: row,\n                col: sprite.col\n            }\n            array.push(data);\n        }\n    },\n    expandCol(sprite,array){\n        //row扩展到边界，如果都是空的就将扩展的点放入数组，直到触碰到边界或其他方块\n        for(let col = sprite.col + 1; col < 9; col++){\n            if (this.arrMap[sprite.row][col].type !== null){\n                break\n            }\n            let data = {\n                row: sprite.row,\n                col: col\n            }\n            array.push(data);\n        }\n        for(let col = sprite.col - 1; col >= 0; col--){\n            if (this.arrMap[sprite.row][col].type !== null){\n                break\n            }\n            let data = {\n                row: sprite.row,\n                col: col\n            }\n            array.push(data);\n        }\n\n    },\n    sendEliminateBlock(first,last,arrPath){\n        //cc.log(arrPath);\n        var id = Game.PlayerManager.self.playerId;\n        if (Game.GameManager.gameState !== GameState.Over) {\n            mvs.engine.sendFrameEvent(JSON.stringify({\n                action: GLB.DELETE_BLOCK,\n                firstPos: {row:first.row, col:first.col},\n                lastPos: {row:last.row, col:last.col},\n                playerId: id,\n                arrPath: arrPath\n            }));\n        }\n\n        this.curSelec = null;\n    },\n    pushPath(obj){\n        let data = {\n            row: obj.row,\n            col: obj.col\n        }\n        this.arrPath.push(data);\n    },\n    curBlocBeDelete(obj){\n        if (this.curSelec === null){\n            return;\n        }\n        if (obj.row === this.curSelec.row && obj.col === this.curSelec.col){\n            this.curSelec = null;\n            this.choiceBox.opacity = 0;\n        }\n    }\n\n\n    //start () {},\n\n    // update (dt) {},\n});\n","window.clientEvent = {\n    eventType: {\n        openUI: \"openUI\",\n        closeUI: \"closeUI\",\n        refreshSlateBtn: \"refreshSlateBtn\",\n        roundStart: \"roundStart\",\n        roundOver: \"roundOver\",\n        gameStart: \"gameStart\",\n        gameOver: \"gameOver\",\n        nextRound:\"nextRound\",\n        setScoreProgressBar:\"setScoreProgressBar\",\n        getReconnectionData:\"getReconnectionData\",\n        setReconnectionData:\"setReconnectionData\",\n        setCount:\"setCount\",\n        updateMap:\"updateMap\",\n        checkLcon:\"checkLcon\",\n\n        playerAccountGet: \"playerAccountGet\",\n        initResponse: \"initResponse\",\n        errorResponse: \"errorResponse\",\n        joinRoomResponse: \"joinRoomResponse\",\n        joinRoomNotify: \"joinRoomNotify\",\n        leaveRoomResponse: \"leaveRoomResponse\",\n        leaveRoomNotify: \"leaveRoomNotify\",\n        leaveRoomMedNotify: \"leaveRoomMedNotify\",\n        joinOverResponse: \"joinOverResponse\",\n        createRoomResponse: \"createRoomResponse\",\n        getRoomListResponse: \"getRoomListResponse\",\n        getRoomDetailResponse: \"getRoomDetailResponse\",\n        getRoomListExResponse: \"getRoomListExResponse\",\n        kickPlayerResponse: \"kickPlayerResponse\",\n        kickPlayerNotify: \"kickPlayerNotify\"\n    },\n    eventListener: null\n};\n\nclientEvent.init = function() {\n    clientEvent.eventListener = eventListener.create();\n};\n\nclientEvent.on = function(eventName, handler, target) {\n    if (typeof eventName !== \"string\") {\n        return;\n    }\n    clientEvent.eventListener.on(eventName, handler, target);\n};\n\nclientEvent.off = function(eventName, handler, target) {\n    if (typeof eventName !== \"string\") {\n        return;\n    }\n    clientEvent.eventListener.off(eventName, handler, target);\n};\n\nclientEvent.clear = function(target) {\n    clientEvent.eventListener.clear(target);\n};\n\nclientEvent.dispatch = function(eventName, data) {\n    if (typeof eventName !== \"string\") {\n        return;\n    }\n    clientEvent.eventListener.dispatch(eventName, data);\n};","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n      comboPrefab:{\n          type: cc.Prefab,\n          default: null\n      }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n        Game.ComboManager = this;\n    },\n    addCombo(pos,id){\n\n        if (id === Game.PlayerManager.self.playerId){\n            if (Game.PlayerManager.self.combo <= 2){\n                return;\n            }\n            var comboPrefab = cc.instantiate(this.comboPrefab);\n            comboPrefab.parent = this.node;\n            comboPrefab.setPosition(pos);\n            comboPrefab.color = new cc.Color(89, 213, 252);\n            comboPrefab.getComponent(cc.Label).string = \"combo\" + (Game.PlayerManager.self.combo - 2);\n        }else{\n            if (Game.PlayerManager.rival.combo <= 2){\n                return;\n            }\n            var comboPrefab = cc.instantiate(this.comboPrefab);\n            comboPrefab.parent = this.node;\n            comboPrefab.setPosition(pos);\n            comboPrefab.color = new cc.Color(245, 100, 100);\n            comboPrefab.getComponent(cc.Label).string = \"combo\" + (Game.PlayerManager.rival.combo - 2);\n        }\n        var moveBy = cc.moveBy(0.5,cc.p(0,20));\n        var callFunc = cc.callFunc(this.comboDelete, comboPrefab);\n        var seq = cc.sequence(moveBy,callFunc);\n        comboPrefab.runAction(seq);\n    },\n    comboDelete(combo){\n        combo.destroy();\n    }\n\n    // update (dt) {},\n});\n","window.dataManager = {};\nwindow.dataManager.layoutDtMgr = require(\"layoutDt\");","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        effect:{\n            type: cc.Prefab,\n            default: null\n        }\n    },\n    onLoad () {\n        Game.EffectManager = this;\n        //this.effectPool = new cc.NodePool();\n    },\n    initEffect(pos){\n        // var effect = this.effectPool.get();\n        // if (!effect) {\n        //     effect = cc.instantiate(this.effect);\n        // }\n        var effect = cc.instantiate(this.effect);\n        effect.parent = this.node;\n        effect.setPosition(pos);\n    },\n    // update (dt) {},\n});\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        arrParticle:{\n            default: [],\n            type: cc.Node\n        }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    init () {\n        this.scheduleOnce(this.stop,1);\n    },\n    stop(){\n        for (let particle of this.arrParticle){\n            particle.getComponent(cc.ParticleSystem).stopSystem();\n        }\n        this.scheduleOnce(this.destroyBullet,1);\n    },\n    destroyBullet() {\n        this.node.destroy();\n    },\n\n    // update (dt) {},\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n       time: 0\n    },\n\n    start () {\n        this.scheduleOnce(this.playAnim,this.time);\n    },\n    playAnim(){\n        this.node.getComponent(cc.Animation).play(\"electric\");\n    }\n    // update (dt) {},\n});\n","window.eventListener = {};\n\nvar oneToMultiListener = {};\n\noneToMultiListener.on = function(eventName, handler, target) {\n    var handlerList = this.handlers[eventName];\n    if (!handlerList) {\n        handlerList = [];\n        this.handlers[eventName] = handlerList;\n    }\n\n    for (var i = 0; i < handlerList.length; i++) {\n        if (!handlerList[i]) {\n            handlerList[i].handler = handler;\n            handlerList[i].target = target;\n            return i;\n        }\n    }\n\n    handlerList.push({ handler: handler, target: target });\n    return handlerList.length;\n};\n\noneToMultiListener.dispatch = function(eventName, data) {\n    var handlerList = this.handlers[eventName];\n    if (!handlerList) {\n        return;\n    }\n\n    var len = handlerList.length;\n    for (var i = 0; i < len; i++) {\n        if (handlerList[i]) {\n            var handler = handlerList[i].handler;\n            var target = handlerList[i].target;\n            if (handler) {\n                try {\n                    if (target) {\n                        handler.call(target, data);\n                    } else {\n                        handler(data);\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            }\n        }\n    }\n};\n\noneToMultiListener.off = function(eventName, handler, target) {\n    var handlerList = this.handlers[eventName];\n    if (!handlerList) {\n        return;\n    }\n\n    for (var i = 0; i < handlerList.length; i++) {\n        var oldHandler = handlerList[i].handler;\n        var oldTarget = handlerList[i].target;\n        if (oldHandler === handler && oldTarget === target) {\n            handlerList.splice(i, 1);\n            break;\n        }\n    }\n};\noneToMultiListener.clear = function(target) {\n    for (var eventName in this.handlers) {\n        var handlerList = this.handlers[eventName];\n        for (var i = 0; i < handlerList.length; i++) {\n            var oldTarget = handlerList[i].target;\n            if (oldTarget === target) {\n                handlerList.splice(i, 1);\n            }\n        }\n    }\n};\n\neventListener.create = function() {\n    var newEventListener = Object.create(oneToMultiListener);\n    newEventListener.handlers = {};\n    return newEventListener;\n};","var mvs = require(\"Matchvs\");\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        uiTip:{\n            type: cc.Prefab,\n            default: null\n        }\n    },\n    blockInput() {\n        Game.GameManager.getComponent(cc.BlockInputEvents).enabled = true;\n        setTimeout(function() {\n            Game.GameManager.node.getComponent(cc.BlockInputEvents).enabled = false;\n        }, 1000);\n    },\n    onLoad() {\n        Game.GameManager = this;\n        cc.game.addPersistRootNode(this.node);\n        cc.director.getCollisionManager().enabled = true;\n        clientEvent.init();\n        dataFunc.loadConfigs();\n        cc.view.enableAutoFullScreen(false);\n\n        clientEvent.on(clientEvent.eventType.gameOver, this.gameOver, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomNotify, this.leaveRoom, this);\n\n        this.bUiReconnection = true;\n        this.bReconnect = false;\n        this.bExit = true;\n        this.number = 0;\n\n        this.start_game_time = new Date().getTime();\n        this.network = window.network;\n        this.network.chooseNetworkMode();\n        this.findPlayerByAccountListener();\n        this.getUserInfoFromRank();\n\n        this.uiTipBk = cc.instantiate(this.uiTip);\n        this.uiTipBk.parent = this.node;\n        this.uiTipBk.active = false;\n\n        if (window.BK && BK.Audio.switch){\n            BK.Audio.switch = false;\n        }\n\n        this.schedule(this.checkLcon,2);\n    },\n\n    checkLcon(){\n        clientEvent.dispatch(clientEvent.eventType.checkLcon);\n    },\n\n    leaveRoom: function(data) {\n        // 离开房间--\n        if (this.gameState === GameState.Play) {\n            if (data.leaveRoomInfo.userId !== GLB.userInfo.id) {\n                this.isRivalLeave = true;\n            }\n            clientEvent.dispatch(clientEvent.eventType.leaveRoomMedNotify, this.leaveRoom, this);\n            this.gameOver();\n        }\n    },\n\n    gameOver: function() {\n        console.log(\"游戏结束\");\n        var gamePanel = uiFunc.findUI(\"uiGamePanel\");\n        if (gamePanel && Game.GameManager.gameState !== GameState.Over) {\n            Game.GameManager.gameState = GameState.Over;\n            this.readyCnt = 0;\n            setTimeout(function() {\n                clientEvent.dispatch(clientEvent.eventType.gameOver);\n            }.bind(this), 1500);\n            setTimeout(function() {\n                uiFunc.openUI(\"uiVsResultVer\");\n            }.bind(this), 3000);\n        }\n    },\n\n    matchVsInit: function() {\n        mvs.response.initResponse = this.initResponse.bind(this);\n        mvs.response.errorResponse = this.errorResponse.bind(this);\n        mvs.response.joinRoomResponse = this.joinRoomResponse.bind(this);\n        mvs.response.joinRoomNotify = this.joinRoomNotify.bind(this);\n        mvs.response.leaveRoomResponse = this.leaveRoomResponse.bind(this);\n        mvs.response.leaveRoomNotify = this.leaveRoomNotify.bind(this);\n        mvs.response.joinOverResponse = this.joinOverResponse.bind(this);\n        mvs.response.createRoomResponse = this.createRoomResponse.bind(this);\n        mvs.response.getRoomListResponse = this.getRoomListResponse.bind(this);\n        mvs.response.getRoomDetailResponse = this.getRoomDetailResponse.bind(this);\n        mvs.response.getRoomListExResponse = this.getRoomListExResponse.bind(this);\n        mvs.response.kickPlayerResponse = this.kickPlayerResponse.bind(this);\n        mvs.response.kickPlayerNotify = this.kickPlayerNotify.bind(this);\n        mvs.response.registerUserResponse = this.registerUserResponse.bind(this);\n        mvs.response.loginResponse = this.loginResponse.bind(this); // 用户登录之后的回调\n        mvs.response.logoutResponse = this.logoutResponse.bind(this); // 用户登录之后的回调\n        mvs.response.sendEventNotify = this.sendEventNotify.bind(this);\n        mvs.response.frameUpdate = this.frameUpdate.bind(this);\n        mvs.response.setFrameSyncResponse = this.setFrameSyncResponse.bind(this);\n        mvs.response.reconnectResponse = this.reconnectResponse.bind(this);\n        mvs.response.networkStateNotify = this.networkStateNotify.bind(this);\n\n        var result = mvs.engine.init(mvs.response, GLB.channel, GLB.platform, GLB.gameId);\n        if (result !== 0) {\n            console.log('初始化失败,错误码:' + result);\n        }\n        Game.GameManager.blockInput();\n        this.loginServer();\n    },\n    networkStateNotify: function(netNotify) {\n        console.log(\"netNotify\");\n        console.log(\"netNotify.owner:\" + netNotify.owner);\n        console.log(\"玩家：\" + netNotify.userID + \" state:\" + netNotify.state);\n        if (this.gameState === GameState.Play) {\n            GLB.isRoomOwner = true;\n            if (netNotify.state === 1){\n                uiFunc.openUI(\"uiTip\", function(obj) {\n                    var uiTip = obj.getComponent(\"uiTip\");\n                    if (uiTip) {\n                        uiTip.setData(\"对手离开了游戏\");\n                    }\n                });\n            } else if (netNotify.state === 3){\n                var data = {\n                    leaveRoomInfo: netNotify\n                };\n                clientEvent.dispatch(clientEvent.eventType.leaveRoomNotify, data);\n            }\n        }\n        clientEvent.dispatch(clientEvent.eventType.leaveRoomMedNotify, netNotify);\n    },\n\n    kickPlayerNotify: function(kickPlayerNotify) {\n        var data = {\n            kickPlayerNotify: kickPlayerNotify\n        };\n        clientEvent.dispatch(clientEvent.eventType.kickPlayerNotify, data);\n    },\n\n    kickPlayerResponse: function(kickPlayerRsp) {\n        if (kickPlayerRsp.status !== 200) {\n            console.log(\"失败kickPlayerRsp:\" + kickPlayerRsp);\n            return;\n        }\n        var data = {\n            kickPlayerRsp: kickPlayerRsp\n        };\n        clientEvent.dispatch(clientEvent.eventType.kickPlayerResponse, data);\n    },\n\n    getRoomListExResponse: function(rsp) {\n        if (rsp.status !== 200) {\n            console.log(\"失败 rsp:\" + rsp);\n            return;\n        }\n        var data = {\n            rsp: rsp\n        };\n        clientEvent.dispatch(clientEvent.eventType.getRoomListExResponse, data);\n    },\n\n    getRoomDetailResponse: function(rsp) {\n        if (rsp.status !== 200) {\n            console.log(\"失败 rsp:\" + rsp);\n            return;\n        }\n        var data = {\n            rsp: rsp\n        };\n        cc.log(data.rsp.userInfos);\n        clientEvent.dispatch(clientEvent.eventType.getRoomDetailResponse, data);\n    },\n\n    getRoomListResponse: function(status, roomInfos) {\n        if (status !== 200) {\n            console.log(\"失败 status:\" + status);\n            return;\n        }\n        var data = {\n            status: status,\n            roomInfos: roomInfos\n        };\n        clientEvent.dispatch(clientEvent.eventType.getRoomListResponse, data);\n    },\n\n    createRoomResponse: function(rsp) {\n        if (rsp.status !== 200) {\n            console.log(\"失败 createRoomResponse:\" + rsp);\n            return;\n        }\n        var data = {\n            rsp: rsp\n        };\n        clientEvent.dispatch(clientEvent.eventType.createRoomResponse, data);\n    },\n\n    joinOverResponse: function(joinOverRsp) {\n        if (joinOverRsp.status !== 200) {\n            console.log(\"失败 joinOverRsp:\" + joinOverRsp);\n            return;\n        }\n        var data = {\n            joinOverRsp: joinOverRsp\n        };\n        clientEvent.dispatch(clientEvent.eventType.joinOverResponse, data);\n    },\n\n    joinRoomResponse: function(status, roomUserInfoList, roomInfo) {\n        if (status !== 200) {\n            console.log(\"失败 joinRoomResponse:\" + status);\n            return;\n        }\n        var data = {\n            status: status,\n            roomUserInfoList: roomUserInfoList,\n            roomInfo: roomInfo\n        };\n        clientEvent.dispatch(clientEvent.eventType.joinRoomResponse, data);\n    },\n\n    joinRoomNotify: function(roomUserInfo) {\n        var data = {\n            roomUserInfo: roomUserInfo\n        };\n        console.log(\"GameManager.joinRoomNotify\");\n        clientEvent.dispatch(clientEvent.eventType.joinRoomNotify, data);\n    },\n\n    leaveRoomResponse: function(leaveRoomRsp) {\n        if (leaveRoomRsp.status !== 200) {\n            console.log(\"失败 leaveRoomRsp:\" + leaveRoomRsp);\n            return;\n        }\n        var data = {\n            leaveRoomRsp: leaveRoomRsp\n        };\n        clientEvent.dispatch(clientEvent.eventType.leaveRoomResponse, data);\n    },\n\n    leaveRoomNotify: function(leaveRoomInfo) {\n        var data = {\n            leaveRoomInfo: leaveRoomInfo\n        };\n        clientEvent.dispatch(clientEvent.eventType.leaveRoomNotify, data);\n    },\n\n    logoutResponse: function(status) {\n        Game.GameManager.network.disconnect();\n        cc.game.removePersistRootNode(this.node);\n        cc.director.loadScene('lobby');\n    },\n\n    errorResponse: function(error, msg) {\n        if (error === 406 || error === 405) {\n            return;\n        }\n        let recurLobby = true;\n        this.openTip(\"网络连接中断\");\n        if (this.gameState === GameState.Play) {\n            GLB.isRoomOwner = false;\n        }\n        console.log(\"错误信息：\" + error);\n        console.log(\"错误信息：\" + msg);\n        if (error === 1001 || error === 0){\n            var gamePanel = uiFunc.findUI(\"uiGamePanel\");\n            if (gamePanel) {\n                if (this.bUiReconnection) {\n                    this.bUiReconnection = false;\n                    Game.GameManager.gameState = GameState.None;\n                    this.schedule(this.reconnectCountDown, 1);\n                }\n                recurLobby = false;\n                cc.log(\"游戏界面存在\");\n            }\n            if (recurLobby) {\n                setTimeout(function() {\n                    // if (error === 0) {\n                    //     this.closeUiPanel();\n                    // } else {\n                    //     this.recurLobby();\n                    // }\n                    this.recurLobby();\n                }.bind(this), 2000);\n            }\n        }\n    },\n    openTip(string){\n        var uiTip = cc.instantiate(this.uiTipBk);\n        uiTip.active = true;\n        uiTip.parent = cc.Canvas.instance.node;\n        uiTip.getComponent(\"uiTip\").setData(string);\n        uiTip.setPosition(cc.p(0,0));\n    },\n    closeUiPanel(){\n        var uiList = uiFunc.getUiList();\n        for (let uiPanel of uiList){\n            var uiPanelName = uiPanel.getName();\n            if (uiPanelName !== \"\"){\n                uiFunc.closeUI(uiPanelName);\n                uiPanel.destroy();\n            }\n        }\n    },\n    reconnectCountDown(){\n        this.number++;\n        cc.log(\"当前断线重连计数:\" + this.number);\n        mvs.engine.reconnect();\n        if (this.number >= 15){\n            this.stopReconnectCountDown(false);\n        }\n    },\n    stopReconnectCountDown(success){\n        this.number = 0;\n        this.unschedule(this.reconnectCountDown);\n        if(!success) {\n            //this.closeUiPanel();\n            this.recurLobby();\n        }\n    },\n    reconnect() {\n        if (this.bReconnect) {\n            return;\n        }\n        uiFunc.openUI(\"uiTip\", function(obj) {\n            var uiTip = obj.getComponent(\"uiTip\");\n            if (uiTip) {\n                uiTip.setData(\"无法获取房间信息，不能进行重新连接\");\n            }\n        });\n        var gamePanel = uiFunc.findUI(\"uiGamePanel\");\n        if (gamePanel) {\n            uiFunc.closeUI(\"uiGamePanel\");\n            gamePanel.destroy();\n        }\n        this.recurLobby();\n    },\n    reconnectResponse: function(status, roomUserInfoList, roomInfo) {\n        if (status === 200) {\n            cc.log(\"重新连接成功\" + status);\n            cc.log(\"重连玩家信息\" + GLB.userInfo.id);\n            Game.GameManager.network.connect(GLB.IP, GLB.PORT,function(){});\n            if (roomUserInfoList.length <= 0) {\n                cc.log(\"无法获取房间信息，不能进行重新连接\")\n                this.stopReconnectCountDown(false);\n                uiFunc.openUI(\"uiTip\", function(obj) {\n                    var uiTip = obj.getComponent(\"uiTip\");\n                    if (uiTip) {\n                        uiTip.setData(\"无法获取房间信息，不能进行重新连接\");\n                    }\n                });\n                this.recurLobby();\n                return;\n            }\n            this.stopReconnectCountDown(true);\n            uiFunc.openUI(\"uiTip\", function(obj) {\n                var uiTip = obj.getComponent(\"uiTip\");\n                if (uiTip) {\n                    uiTip.setData(\"正在重新连接\");\n                }\n            });\n            var gamePanel = uiFunc.findUI(\"uiGamePanel\");\n            if (gamePanel) {\n                cc.log(\"游戏界面已存在\");\n                mvs.engine.sendFrameEvent(JSON.stringify({\n                    action: GLB.GET_GAME_DATA,\n                    playerId: GLB.userInfo.id,\n                }));\n            } else {\n                cc.log(\"游戏界面不存在\");\n                cc.director.loadScene('game', function() {\n                    uiFunc.openUI(\"uiGamePanel\", function() {\n                        mvs.engine.getRoomDetail(roomInfo.roomID);\n                        mvs.engine.sendFrameEvent(JSON.stringify({\n                            action: GLB.GET_GAME_DATA,\n                            playerId: GLB.userInfo.id,\n                        }));\n                    }.bind(this));\n                }.bind(this));\n            }\n            this.bUiReconnection = true;\n        } else {\n            cc.log(\"重新连接失败\" + status);\n            uiFunc.openUI(\"uiTip\", function(obj) {\n                var uiTip = obj.getComponent(\"uiTip\");\n                if (uiTip) {\n                    uiTip.setData(\"重新连接失败\");\n                }\n            });\n            this.stopReconnectCountDown(false);\n            this.recurLobby();\n        }\n    },\n    recurLobby() {\n        mvs.engine.logout(\"\");\n        setTimeout(function() {\n            cc.game.removePersistRootNode(this.node);\n            cc.director.loadScene('lobby');\n        }.bind(this), 1500);\n    },\n    initResponse: function() {\n        console.log('初始化成功，开始注册用户');\n        var result = mvs.engine.registerUser();\n        if (result !== 0) {\n            console.log('注册用户失败，错误码:' + result);\n        } else {\n            console.log('注册用户成功');\n        }\n    },\n\n    registerUserResponse: function(userInfo) {\n        var deviceId = 'abcdef';\n        var gatewayId = 0;\n        GLB.userInfo = userInfo;\n\n        console.log('开始登录,用户Id:' + userInfo.id);\n\n        var result = mvs.engine.login(\n            userInfo.id, userInfo.token,\n            GLB.gameId, GLB.gameVersion,\n            GLB.appKey, GLB.secret,\n            deviceId, gatewayId\n        );\n        if (result !== 0) {\n            console.log('登录失败,错误码:' + result);\n        }\n    },\n\n    loginResponse: function(info) {\n        if (info.status !== 200) {\n            console.log('登录失败,异步回调错误码:' + info.status);\n        } else {\n            console.log('登录成功');\n            if (info.roomID !== null && info.roomID !== \"0\") {\n                mvs.engine.reconnect();\n            } else {\n                this.lobbyShow();\n            }\n        }\n    },\n\n    lobbyShow: function() {\n        this.gameState = GameState.None;\n        if (cc.Canvas.instance.designResolution.height > cc.Canvas.instance.designResolution.width) {\n            uiFunc.openUI(\"uiLobbyPanelVer\");\n        } else {\n            uiFunc.openUI(\"uiLobbyPanel\");\n        }\n    },\n\n    // 收到的消息\n    sendEventNotify: function(info) {\n        //console.log(info);\n        var cpProto = JSON.parse(info.cpProto);\n        if (info.cpProto.indexOf(GLB.GAME_START_EVENT) >= 0) {\n            GLB.playerUserIds = [GLB.userInfo.id];\n            var remoteUserIds = JSON.parse(info.cpProto).userIds;\n            remoteUserIds.forEach(function(id) {\n                if (GLB.userInfo.id !== id) {\n                    GLB.playerUserIds.push(id);\n                }\n            });\n            this.startGame();\n        }\n\n        if (info.cpProto.indexOf(GLB.GAME_OVER_EVENT) >= 0) {\n            this.gameOver();\n        }\n\n        if (info.cpProto.indexOf(GLB.READY) >= 0) {\n            this.readyCnt++;\n            if (GLB.isRoomOwner && this.readyCnt >= GLB.playerUserIds.length) {\n                this.sendRoundStartMsg();\n            }\n        }\n\n        if (info.cpProto.indexOf(GLB.ROUND_START) >= 0) {\n            setTimeout(function() {\n                Game.GameManager.gameState = GameState.Play;\n            }.bind(this), 2000);\n\n            if (GLB.syncFrame === true && GLB.isRoomOwner === true) {\n                var result = mvs.engine.setFrameSync(GLB.FRAME_RATE);\n                if (result !== 0) {\n                    console.log('设置帧同步率失败,错误码:' + result);\n                }\n            }\n            clientEvent.dispatch(clientEvent.eventType.roundStart);\n        }\n    },\n\n\n    frameUpdate: function(rsp) {\n        for (var i = 0; i < rsp.frameItems.length; i++) {\n            if (Game.GameManager.gameState === GameState.Over) {\n                return;\n            }\n            var info = rsp.frameItems[i];\n            var cpProto = JSON.parse(info.cpProto);\n\n            if (info.cpProto.indexOf(GLB.INITMAP) >= 0) {\n                Game.BlockManager.receiveArrMap(cpProto.array);\n            }\n\n            if (info.cpProto.indexOf(GLB.DELETE_BLOCK) >= 0) {\n               Game.BlockManager.deleteBlock(cpProto.firstPos, cpProto.lastPos, cpProto.playerId ,cpProto.arrPath);\n\n            }\n            if (info.cpProto.indexOf(GLB.BUBBLE) >= 0) {\n                Game.BubbleManager.initBubble(cpProto.type, cpProto.id);\n            }\n            if (info.cpProto.indexOf(GLB.TIME_OUT) >= 0) {\n                Game.BlockManager.nextRound();\n            }\n            if (info.cpProto.indexOf(GLB.GET_GAME_DATA) >= 0) {\n                if (GLB.userInfo.id === cpProto.playerId) {\n                    this.bReconnect = false;\n                    this.scheduleOnce(this.reconnect, 3);\n                }\n                if (GLB.userInfo.id !== cpProto.playerId) {\n                    cc.log(\"精灵帧，准备获取未断线玩家数据\");\n                    clientEvent.dispatch(clientEvent.eventType.getReconnectionData);\n                }\n            }\n            if (info.cpProto.indexOf(GLB.RECONNECTION_DATA) >= 0) {\n                if (cpProto.playerId === GLB.userInfo.id){\n                    uiFunc.openUI(\"uiTip\", function(obj) {\n                        var uiTip = obj.getComponent(\"uiTip\");\n                        if (uiTip) {\n                            uiTip.setData(\"对手重新连接\");\n                        }\n                    });\n                }\n                if (cpProto.playerId !== GLB.userInfo.id) {\n                    uiFunc.openUI(\"uiTip\", function(obj) {\n                        var uiTip = obj.getComponent(\"uiTip\");\n                        if (uiTip) {\n                            uiTip.setData(\"重新连接成功\");\n                        }\n                    });\n                    Game.GameManager.network.connect(GLB.IP, GLB.PORT,function(){});\n                }\n                clientEvent.dispatch(clientEvent.eventType.setReconnectionData, cpProto);\n            }\n        }\n        if (Game.GameManager.gameState === GameState.Play) {\n            Game.PlayerManager.self.buffTime();\n            Game.PlayerManager.rival.buffTime();\n        }\n    },\n\n    sendReadyMsg: function() {\n        var msg = {action: GLB.READY};\n        this.sendEventEx(msg);\n    },\n\n    sendRoundStartMsg: function() {\n        var msg = {action: GLB.ROUND_START};\n        this.sendEventEx(msg);\n    },\n\n    sendEventEx: function(msg) {\n        var result = mvs.engine.sendEventEx(0, JSON.stringify(msg), 0, GLB.playerUserIds);\n        if (result.result !== 0) {\n            console.log(msg.action, result.result);\n        }\n    },\n\n    sendEvent: function(msg) {\n        var result = mvs.engine.sendEvent(JSON.stringify(msg));\n        if (result.result !== 0) {\n            console.log(msg.action, result.result);\n        }\n    },\n\n    startGame: function() {\n        this.readyCnt = 0;\n        this.isRivalLeave = false;\n        cc.director.loadScene('game', function() {\n            uiFunc.openUI(\"uiGamePanel\", function() {\n                this.sendReadyMsg();\n            }.bind(this));\n        }.bind(this));\n    },\n\n    setFrameSyncResponse: function(rsp) {\n        if (rsp.mStatus !== 200) {\n            console.log('设置同步帧率失败，status=' + rsp.status);\n        } else {\n            console.log('设置同步帧率成功, 帧率为:' + GLB.FRAME_RATE);\n        }\n    },\n\n\n    findPlayerByAccountListener: function() {\n        this.network.on(\"connector.entryHandler.findPlayerByAccount\", function(recvMsg) {\n            clientEvent.dispatch(clientEvent.eventType.playerAccountGet, recvMsg);\n        });\n    },\n\n    loginServer: function() {\n        if (!this.network.isConnected()) {\n            try {\n                this.network.connect(GLB.IP, GLB.PORT, function() {\n                        this.network.send(\"connector.entryHandler.login\", {\n                            \"account\": GLB.userInfo.id + \"\",\n                            \"channel\": \"0\",\n                            \"userName\": GLB.nickName ? GLB.nickName : GLB.userInfo.id + \"\",\n                            \"headIcon\": GLB.avatarUrl ? GLB.avatarUrl : \"-\"\n                        });\n                    }.bind(this)\n                );\n            }\n            catch (e) {\n\n            }\n        }\n    },\n\n\n    // 排行榜相关--\n    getUserInfoFromRank() {\n        if (window.BK) {\n            var attr = \"score\";\n            var order = 1;\n            var rankType = 0;\n            BK.QQ.getRankListWithoutRoom(attr, order, rankType, function(errCode, cmd, data) {\n                var isContainSelf = false;\n                if (data) {\n                    for (var i = 0; i < data.data.ranking_list.length; ++i) {\n                        var rd = data.data.ranking_list[i];\n                        if (rd.selfFlag) {\n                            isContainSelf = true;\n                            GLB.avatarUrl = rd.url;\n                            GLB.nickName = rd.nick;\n                            break;\n                        }\n                    }\n                }\n                if (!isContainSelf) {\n                    this.setRankData(Number.MAX_SAFE_INTEGER, function() {\n                        // 设置成功，取值--\n                        this.getUserInfoFromRank();\n                    }.bind(this));\n                }\n            }.bind(this));\n        }\n    },\n\n    userInfoReq: function(userId) {\n        if (!Game.GameManager.network.isConnected()) {\n\n                Game.GameManager.network.connect(GLB.IP, GLB.PORT, function() {\n\n                        Game.GameManager.network.send(\"connector.entryHandler.login\", {\n                            \"account\": GLB.userInfo.id + \"\",\n                            \"channel\": \"0\",\n                            \"userName\": GLB.nickName ? GLB.nickName : GLB.userInfo.id + \"\",\n                            \"headIcon\": GLB.avatarUrl ? GLB.avatarUrl : \"-\"\n                        });\n                        setTimeout(function() {\n                            Game.GameManager.network.send(\"connector.entryHandler.findPlayerByAccount\", {\n                                \"account\": userId + \"\",\n                            });\n                        }, 200);\n                    }\n                );\n        } else {\n            Game.GameManager.network.send(\"connector.entryHandler.findPlayerByAccount\", {\n                \"account\": userId + \"\",\n            });\n        }\n    },\n\n    getRankData(callback) {\n        if (!window.BK) {\n            return;\n        }\n        // 先拉 score 排行榜\n        var attr = \"score\";//使用哪一种上报数据做排行，可传入score，a1，a2等\n        var order = 1;     //排序的方法：[ 1: 从大到小(单局)，2: 从小到大(单局)，3: 由大到小(累积)]\n        var rankType = 0; //要查询的排行榜类型，0: 好友排行榜，1: 群排行榜，2: 讨论组排行榜，3: C2C二人转 (手Q 7.6.0以上支持)\n        // 必须配置好周期规则后，才能使用数据上报和排行榜功能\n        BK.QQ.getRankListWithoutRoom(attr, order, rankType, function(errCode, cmd, data) {\n            BK.Script.log(1, 1, \"getRankListWithoutRoom callback  cmd\" + cmd + \" errCode:\" + errCode + \"  data:\" + JSON.stringify(data));\n            // 返回错误码信息\n            if (errCode !== 0) {\n                BK.Script.log(1, 1, '获取排行榜数据失败!错误码：' + errCode);\n                return;\n            }\n            // 解析数据\n            var isContainSelf = false;\n            if (data) {\n                for (var i = 0; i < data.data.ranking_list.length; ++i) {\n                    var rd = data.data.ranking_list[i];\n                    // rd 的字段如下:\n                    //var rd = {\n                    //    url: '',            // 头像的 url\n                    //    nick: '',           // 昵称\n                    //    score: 1,           // 分数\n                    //    selfFlag: false,    // 是否是自己\n                    //};\n                    if (rd.selfFlag) {\n                        isContainSelf = true;\n                    }\n                }\n                if (callback) {\n                    callback(data.data.ranking_list);\n                }\n            }\n            if (!isContainSelf) {\n                this.setRankData(Number.MAX_SAFE_INTEGER);\n            }\n        });\n    },\n\n    setRankData(score, callback) {\n        if (!window.BK) {\n            return;\n        }\n        var data = {\n            userData: [\n                {\n                    openId: GameStatusInfo.openId,\n                    startMs: this.start_game_time.toString(),    //必填。 游戏开始时间。单位为毫秒，<font color=#ff0000>类型必须是字符串</font>\n                    endMs: ((new Date()).getTime()).toString(),  //必填。 游戏结束时间。单位为毫秒，<font color=#ff0000>类型必须是字符串</font>\n                    scoreInfo: {\n                        score: score\n                    },\n                },\n            ],\n            // type 描述附加属性的用途\n            // order 排序的方式，\n            // 1: 从大到小，即每次上报的分数都会与本周期的最高得分比较，如果大于最高得分则覆盖，否则忽略\n            // 2: 从小到大，即每次上报的分数都会与本周期的最低得分比较，如果低于最低得分则覆盖，否则忽略（比如酷跑类游戏的耗时，时间越短越好）\n            // 3: 累积，即每次上报的积分都会累积到本周期已上报过的积分上\n            // 4: 直接覆盖，每次上报的积分都会将本周期的得分覆盖，不管大小\n            // 如score字段对应，上个属性.\n            attr: {\n                score: {\n                    type: 'rank',\n                    order: 1,\n                }\n            },\n        };\n        // gameMode: 游戏模式，如果没有模式区分，直接填 1\n        // 必须配置好周期规则后，才能使用数据上报和排行榜功能\n        BK.QQ.uploadScoreWithoutRoom(1, data, function(errCode, cmd, data) {\n            // 返回错误码信息\n            if (errCode !== 0) {\n                BK.Script.log(1, 1, '上传分数失败!错误码：' + errCode);\n            } else {\n                if (callback) {\n                    callback();\n                }\n            }\n        });\n    },\n    onDestroy() {\n        clientEvent.off(clientEvent.eventType.gameOver, this.gameOver, this);\n        clientEvent.off(clientEvent.eventType.leaveRoomNotify, this.leaveRoom, this);\n        this.unschedule(this.checkLcon);\n    }\n\n});\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n    },\n    start () {\n        var seq = cc.repeatForever(\n            cc.sequence(\n                cc.moveBy(2, 0, 30),\n                cc.moveBy(2, 0, -30)\n            ));\n        this.node.runAction(seq);\n    },\n\n    // update (dt) {},\n});\n","var layoutDtMgr = {\n    arrLayoutDt:[\n        {\n           id:1,\n           array:[[0,3],[0,7],[0,8],[1,0],[1,3],[1,8],[2,0],[2,3],[2,4],[2,5],[2,8],[3,0],[3,3],[3,4],[3,5],[3,8],\n           [4,0],[4,8],[5,0],[5,7],[5,8],[6,0],[6,3],[6,8],[7,3],[7,4]]\n        },\n        {\n            id:2,\n            array:[[0,1],[0,2],[0,6],[0,7],[1,0],[1,2],[1,6],[1,8],[2,0],[2,1],[2,7],[2,8],[5,0],[5,1],[5,7],[5,8],\n                [6,0],[6,2],[6,6],[6,8],[7,1],[7,2],[7,6],[7,7]]\n        },\n        {\n            id:3,\n            array:[[0,2],[0,3],[0,4],[0,5],[0,6],[1,3],[1,4],[1,5],[2,0],[2,8],[3,0],[3,1],[3,7],[3,8],[4,0],[4,1],\n                [4,7],[4,8],[5,0],[5,8],[6,3],[6,4],[6,5],[7,2],[7,3],[7,4],[7,5],[7,6]]\n        },\n        {\n            id:4,\n            array:[[0,0],[0,8],[1,2],[1,4],[1,6],[2,2],[2,4],[2,6],[3,0],[3,8],[5,0],[5,8],[6,0],[6,8]]\n        },\n        {\n            id:5,\n            array:[[0,4],[1,0],[1,3],[1,4],[1,8],[2,0],[2,6],[2,7],[2,8],[3,0],[3,5],[3,6],[3,7],[3,8],[4,0],[4,5],\n                [4,6],[4,7],[4,8],[5,0],[5,6],[5,7],[5,8],[6,0],[6,3],[6,4],[6,8],[7,4]]\n        },\n        {\n            id:6,\n            array:[[0,0],[0,8],[1,2],[1,6],[4,0],[4,1],[4,2],[4,3],[4,4],[4,5],[4,6],[4,7],[4,8],[5,2],[5,4],[5,6],\n                [6,0],[6,8],[7,0],[7,1],[7,7],[7,8]]\n        },\n        {\n            id:7,\n            array:[[0,0],[0,1],[0,7],[0,8],[1,0],[1,8],[2,2],[2,3],[2,4],[2,5],[2,6],[3,2],[3,4],[3,6],[4,2],[4,3],\n                [4,4],[4,5],[4,6],[5,0],[5,8],[6,0],[6,1],[6,7],[6,8],[7,2],[7,4],[7,6]]\n        },\n        {\n            id:8,\n            array:[[0,0],[0,1],[0,2],[0,6],[0,7],[0,8],[1,0],[1,1],[1,7],[1,8],[2,0],[2,8],[5,0],[5,8],[6,0],[6,1],\n                [6,7],[6,8],[7,0],[7,1],[7,2],[7,6],[7,7],[7,8]]\n        },\n        {\n            id:9,\n            array:[[1,2],[1,4],[1,6],[2,1],[2,3],[2,5],[2,6],[2,7],[3,2],[3,3],[3,5],[3,7],[4,1],[4,3],[4,4],[4,5],\n                [4,7],[5,2],[5,4],[5,6],[6,1],[6,3],[6,5],[6,7]]\n        },\n        {\n            id:10,\n            array:[[2,0],[2,1],[2,2],[2,6],[2,7],[2,8],[3,0],[3,1],[3,2],[4,2],[5,2],[5,6],[5,7],[5,8]]\n        },\n        {\n            id:11,\n            array:[[3,0],[3,1],[3,6],[3,7],[3,8],[4,0],[4,1],[5,0],[5,1],[6,0],[6,1],[7,0],[7,1],[7,6],[7,7],[7,8]]\n        },\n        {\n            id:12,\n            array:[[0,0],[0,1],[0,2],[0,6],[0,7],[0,8],[3,2],[3,6],[4,2],[4,6],[6,0],[6,1],[6,2],[6,6],[6,7],[6,8],\n                [7,0],[7,1],[7,7],[7,8]]\n        },\n        {\n            id:13,\n            array:[[0,2],[0,3],[0,5],[0,6],[1,2],[1,6],[2,2],[2,6],[3,2],[3,6],[5,0],[5,4],[5,8],[6,0],[6,4],[6,5],\n                [6,8],[7,0],[7,1],[7,3],[7,4],[7,5],[7,7],[7,8]]\n        },\n        {\n            id:14,\n            array:[[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[2,1],[2,7],[3,1],[3,3],[3,4],[3,5],[3,7],[4,1],[4,3],\n                [4,4],[4,5],[4,7],[5,1],[5,7],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6],[6,7]]\n        },\n        {\n            id:15,\n            array:[[0,3],[0,4],[0,5],[1,3],[1,4],[1,5],[2,0],[2,4],[2,8],[3,0],[3,1],[3,4],[3,7],[3,8],[4,0],[4,1],\n                [4,2],[4,6],[4,7],[4,8],[5,0],[5,1],[5,2],[5,6],[5,7],[5,8],[6,0],[6,1],[6,2],[6,6],[6,7],[6,8],\n                [7,0],[7,1],[7,7],[7,8]]\n        },\n        {\n            id:16,\n            array:[[0,0],[0,8],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[2,2],[2,3],[2,4],[2,5],[2,6],[3,3],[3,4],\n                [3,5],[4,3],[4,4],[4,5],[5,2],[5,3],[5,4],[5,5],[5,6],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6],[6,7],[7,0],\n                [7,8]]\n        },\n        {\n            id:17,\n            array:[[0,1],[0,4],[0,7],[1,1],[1,4],[1,7],[2,1],[2,4],[2,7],[3,1],[3,4],[3,7],[4,1],[4,4],[4,7],[5,1],\n                [5,4],[5,7],[6,1],[6,4],[6,7],[7,1],[7,4],[7,7],[1,2],[1,6],[2,3],[2,5],[5,3],[5,5],[6,2],[6,6]]\n        },\n        {\n            id:18,\n            array:[[1,1],[1,2],[1,4],[1,5],[1,7],[1,8],[2,1],[2,2],[2,4],[2,5],[2,7],[2,8],[3,1],[3,2],[3,4],[3,5],\n                [3,7],[3,8],[5,1],[5,4],[5,7],[6,1],[6,4],[6,7]]\n        },\n        {\n            id:19,\n            array:[[0,0],[0,2],[0,4],[0,6],[0,8],[1,1],[1,3],[1,5],[1,7],[2,0],[2,2],[2,4],[2,6],[2,8],[3,1],[3,3],\n                [3,5], [3,7],[4,0],[4,2],[4,4],[4,6],[4,8],[5,1],[5,3],[5,5],[5,7],[6,0],[6,2],[6,4],[6,6],[6,8],\n                [7,1],[7,3],[7,5],[7,7]]\n        },\n        {\n            id:20,\n            array:[[1,1],[1,3],[1,5],[1,7],[2,1],[2,3],[2,5],[2,7],[3,1],[3,3],[3,5],[3,7],[4,1],[4,3],[4,5],[4,7],\n                [5,1], [5,3],[5,5],[5,7],[6,1],[6,3],[6,5],[6,7]]\n        }\n    ],\n    getDataByID:function(id) {\n        for(let value of this.arrLayoutDt){\n            if (id === value.id){\n                return value;\n            }\n        }\n        return null;\n    },\n    getArrLayoutLenght:function() {\n        return this.arrLayoutDt.length;\n    }\n}\n\nmodule.exports = layoutDtMgr;","/**************************************************************************************************\r\n * \t\t\t\t\t\t\t\tMatchvs SDK\t\t\t\t\t\t\t\t\t\t\t\t\t\t  *\r\n *                                                                                     *\r\n * \t\t\t\t\t\t\t\t2018-08-30\t\t\t\t\t\t\t\t\t\t\t        \t  *\r\n * \t\t\t\t\t\t\t\thttps://www.matchvs.com/home\t\t\t\t\t\t\t\t\t  *\r\n **************************************************************************************************/\r\n/* ================ MVS.js ================= */\r\nvar MVS = (function (_obj) {\r\n    var MVS = (function () {\r\n    });\r\n    _obj = MVS;\r\n    return _obj;\r\n})({}); /* ================ md5.js ================= */\r\n/*\r\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\r\n * Digest Algorithm, as defined in RFC 1321.\r\n * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\r\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\r\n * Distributed under the BSD License\r\n * See http://pajhome.org.uk/crypt/md5 for more info.\r\n */\r\n/*\r\n * Configurable variables. You may need to tweak these to be compatible with\r\n * the server-side, but the defaults work in most cases.\r\n */\r\nvar hexcase = 0; /* hex output format. 0 - lowercase; 1 - uppercase        */\r\nvar b64pad = \"\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\r\nvar chrsz = 8; /* bits per input character. 8 - ASCII; 16 - Unicode      */\r\n/*\r\n * These are the functions you'll usually want to call\r\n * They take string arguments and return either hex or base-64 encoded strings\r\n */\r\nfunction hex_md5(s) { return binl2hex(core_md5(str2binl(s), s.length * chrsz)); }\r\nfunction b64_md5(s) { return binl2b64(core_md5(str2binl(s), s.length * chrsz)); }\r\nfunction str_md5(s) { return binl2str(core_md5(str2binl(s), s.length * chrsz)); }\r\nfunction hex_hmac_md5(key, data) { return binl2hex(core_hmac_md5(key, data)); }\r\nfunction b64_hmac_md5(key, data) { return binl2b64(core_hmac_md5(key, data)); }\r\nfunction str_hmac_md5(key, data) { return binl2str(core_hmac_md5(key, data)); }\r\n/*\r\n * Perform a simple self-test to see if the VM is working\r\n */\r\nfunction md5_vm_test() {\r\n    return hex_md5(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";\r\n}\r\n/*\r\n * Calculate the MD5 of an array of little-endian words, and a bit length\r\n */\r\nfunction core_md5(x, len) {\r\n    /* append padding */\r\n    x[len >> 5] |= 0x80 << ((len) % 32);\r\n    x[(((len + 64) >>> 9) << 4) + 14] = len;\r\n    var a = 1732584193;\r\n    var b = -271733879;\r\n    var c = -1732584194;\r\n    var d = 271733878;\r\n    for (var i = 0; i < x.length; i += 16) {\r\n        var olda = a;\r\n        var oldb = b;\r\n        var oldc = c;\r\n        var oldd = d;\r\n        a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);\r\n        d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\r\n        c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\r\n        b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\r\n        a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\r\n        d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\r\n        c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\r\n        b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\r\n        a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\r\n        d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\r\n        c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);\r\n        b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\r\n        a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\r\n        d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\r\n        c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\r\n        b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\r\n        a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\r\n        d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\r\n        c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\r\n        b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);\r\n        a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\r\n        d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\r\n        c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\r\n        b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\r\n        a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\r\n        d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\r\n        c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\r\n        b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\r\n        a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\r\n        d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\r\n        c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\r\n        b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\r\n        a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);\r\n        d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\r\n        c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\r\n        b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\r\n        a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\r\n        d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\r\n        c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\r\n        b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\r\n        a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\r\n        d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);\r\n        c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\r\n        b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\r\n        a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\r\n        d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\r\n        c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\r\n        b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\r\n        a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);\r\n        d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\r\n        c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\r\n        b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\r\n        a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\r\n        d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\r\n        c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\r\n        b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\r\n        a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\r\n        d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\r\n        c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\r\n        b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\r\n        a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\r\n        d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\r\n        c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\r\n        b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\r\n        a = safe_add(a, olda);\r\n        b = safe_add(b, oldb);\r\n        c = safe_add(c, oldc);\r\n        d = safe_add(d, oldd);\r\n    }\r\n    return Array(a, b, c, d);\r\n}\r\n/*\r\n * These functions implement the four basic operations the algorithm uses.\r\n */\r\nfunction md5_cmn(q, a, b, x, s, t) {\r\n    return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);\r\n}\r\nfunction md5_ff(a, b, c, d, x, s, t) {\r\n    return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\r\n}\r\nfunction md5_gg(a, b, c, d, x, s, t) {\r\n    return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\r\n}\r\nfunction md5_hh(a, b, c, d, x, s, t) {\r\n    return md5_cmn(b ^ c ^ d, a, b, x, s, t);\r\n}\r\nfunction md5_ii(a, b, c, d, x, s, t) {\r\n    return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\r\n}\r\n/*\r\n * Calculate the HMAC-MD5, of a key and some data\r\n */\r\nfunction core_hmac_md5(key, data) {\r\n    var bkey = str2binl(key);\r\n    if (bkey.length > 16)\r\n        bkey = core_md5(bkey, key.length * chrsz);\r\n    var ipad = Array(16), opad = Array(16);\r\n    for (var i = 0; i < 16; i++) {\r\n        ipad[i] = bkey[i] ^ 0x36363636;\r\n        opad[i] = bkey[i] ^ 0x5C5C5C5C;\r\n    }\r\n    var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);\r\n    return core_md5(opad.concat(hash), 512 + 128);\r\n}\r\n/*\r\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\r\n * to work around bugs in some JS interpreters.\r\n */\r\nfunction safe_add(x, y) {\r\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF);\r\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n    return (msw << 16) | (lsw & 0xFFFF);\r\n}\r\n/*\r\n * Bitwise rotate a 32-bit number to the left.\r\n */\r\nfunction bit_rol(num, cnt) {\r\n    return (num << cnt) | (num >>> (32 - cnt));\r\n}\r\n/*\r\n * Convert a string to an array of little-endian words\r\n * If chrsz is ASCII, characters >255 have their hi-byte silently ignored.\r\n */\r\nfunction str2binl(str) {\r\n    var bin = Array();\r\n    var mask = (1 << chrsz) - 1;\r\n    for (var i = 0; i < str.length * chrsz; i += chrsz)\r\n        bin[i >> 5] |= (str.charCodeAt(i / chrsz) & mask) << (i % 32);\r\n    return bin;\r\n}\r\n/*\r\n * Convert an array of little-endian words to a string\r\n */\r\nfunction binl2str(bin) {\r\n    var str = \"\";\r\n    var mask = (1 << chrsz) - 1;\r\n    for (var i = 0; i < bin.length * 32; i += chrsz)\r\n        str += String.fromCharCode((bin[i >> 5] >>> (i % 32)) & mask);\r\n    return str;\r\n}\r\n/*\r\n * Convert an array of little-endian words to a hex string.\r\n */\r\nfunction binl2hex(binarray) {\r\n    var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\r\n    var str = \"\";\r\n    for (var i = 0; i < binarray.length * 4; i++) {\r\n        str += hex_tab.charAt((binarray[i >> 2] >> ((i % 4) * 8 + 4)) & 0xF) +\r\n            hex_tab.charAt((binarray[i >> 2] >> ((i % 4) * 8)) & 0xF);\r\n    }\r\n    return str;\r\n}\r\n/*\r\n * Convert an array of little-endian words to a base-64 string\r\n */\r\nfunction binl2b64(binarray) {\r\n    var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    var str = \"\";\r\n    for (var i = 0; i < binarray.length * 4; i += 3) {\r\n        var triplet = (((binarray[i >> 2] >> 8 * (i % 4)) & 0xFF) << 16)\r\n            | (((binarray[i + 1 >> 2] >> 8 * ((i + 1) % 4)) & 0xFF) << 8)\r\n            | ((binarray[i + 2 >> 2] >> 8 * ((i + 2) % 4)) & 0xFF);\r\n        for (var j = 0; j < 4; j++) {\r\n            if (i * 8 + j * 6 > binarray.length * 32)\r\n                str += b64pad;\r\n            else\r\n                str += tab.charAt((triplet >> 6 * (3 - j)) & 0x3F);\r\n        }\r\n    }\r\n    return str;\r\n}\r\n/* ================ format.js ================= */\r\n/************************************************************************************\r\n * format - printf-like string formatting for JavaScript\r\n * github.com/samsonjs/format\r\n * @_sjs\r\n * Copyright 2010 - 2013 Sami Samhuri <sami@samhuri.net>\r\n * MIT License\r\n * http://sjs.mit-license.org\r\n ************************************************************************************/\r\nvar format = function (fmt) {\r\n    var argIndex = 1 // skip initial format argument\r\n    , args = [].slice.call(arguments), i = 0, n = fmt.length, result = \"\", c, escaped = false, arg, tmp, leadingZero = false, precision, nextArg = function () { return args[argIndex++]; }, slurpNumber = function () {\r\n        var digits = \"\";\r\n        while (/\\d/.test(fmt[i])) {\r\n            digits += fmt[i++];\r\n            c = fmt[i];\r\n        }\r\n        return digits.length > 0 ? parseInt(digits) : null;\r\n    };\r\n    for (; i < n; ++i) {\r\n        c = fmt[i];\r\n        if (escaped) {\r\n            escaped = false;\r\n            if (c == \".\") {\r\n                leadingZero = false;\r\n                c = fmt[++i];\r\n            }\r\n            else if (c == \"0\" && fmt[i + 1] == \".\") {\r\n                leadingZero = true;\r\n                i += 2;\r\n                c = fmt[i];\r\n            }\r\n            else {\r\n                leadingZero = true;\r\n            }\r\n            precision = slurpNumber();\r\n            switch (c) {\r\n                case \"b\":// number in binary\r\n                    result += parseInt(nextArg(), 10).toString(2);\r\n                    break;\r\n                case \"c\":// character\r\n                    arg = nextArg();\r\n                    if (typeof arg === \"string\" || arg instanceof String)\r\n                        result += arg;\r\n                    else\r\n                        result += String.fromCharCode(parseInt(arg, 10));\r\n                    break;\r\n                case \"d\":// number in decimal\r\n                    result += parseInt(nextArg(), 10);\r\n                    break;\r\n                case \"f\":// floating point number\r\n                    tmp = String(parseFloat(nextArg()).toFixed(precision || 6));\r\n                    result += leadingZero ? tmp : tmp.replace(/^0/, \"\");\r\n                    break;\r\n                case \"j\":// JSON\r\n                    result += JSON.stringify(nextArg());\r\n                    break;\r\n                case \"o\":// number in octal\r\n                    result += \"0\" + parseInt(nextArg(), 10).toString(8);\r\n                    break;\r\n                case \"s\":// string\r\n                    result += nextArg();\r\n                    break;\r\n                case \"x\":// lowercase hexadecimal\r\n                    result += \"0x\" + parseInt(nextArg(), 10).toString(16);\r\n                    break;\r\n                case \"X\":// uppercase hexadecimal\r\n                    result += \"0x\" + parseInt(nextArg(), 10).toString(16).toUpperCase();\r\n                    break;\r\n                default:\r\n                    result += c;\r\n                    break;\r\n            }\r\n        }\r\n        else if (c === \"%\") {\r\n            escaped = true;\r\n        }\r\n        else {\r\n            result += c;\r\n        }\r\n    }\r\n    return result;\r\n};\r\n/* ================ matchvsLog.js ================= */\r\nvar MatchvsLog = {\r\n    toArray: function (argument) {\r\n        var args = [];\r\n        for (var i = 0; i < argument.length; i++) {\r\n            args.push(argument[i]);\r\n        }\r\n        return args;\r\n    }\r\n};\r\nfunction getNowFormatDate() {\r\n    var date = new Date();\r\n    var ___ = \"-\";\r\n    var __ = \":\";\r\n    var month = date.getMonth() + 1;\r\n    var strDate = date.getDate();\r\n    if (month >= 1 && month <= 9) {\r\n        month = \"0\" + month;\r\n    }\r\n    if (strDate >= 0 && strDate <= 9) {\r\n        strDate = \"0\" + strDate;\r\n    }\r\n    return \"[\" + date.getFullYear() + ___ + month\r\n        + ___ + strDate + \" \" + date.getHours() + __\r\n        + date.getMinutes() + __ + date.getSeconds() + \".\"\r\n        + date.getMilliseconds() + \"]\";\r\n}\r\nMatchvsLog.openLog = function () {\r\n    console.log(\"---- open log ----\");\r\n    if (typeof (wx) === \"undefined\") {\r\n        MatchvsLog.logI = console.log.bind(console, \"[INFO][Matchvs] \" + \" \");\r\n        MatchvsLog.logE = console.error.bind(console, \"[ERROR][Matchvs] \" + \" \");\r\n    }\r\n    else {\r\n        MatchvsLog.logI = function () {\r\n            var loc = \"\";\r\n            try {\r\n                throw new Error();\r\n            }\r\n            catch (e) {\r\n                var line = e.stack.split(/\\n/)[1];\r\n                loc = line.slice(line.lastIndexOf(\"/\") + 1, line.lastIndexOf(\")\"));\r\n            }\r\n            console.log(\"[INFO][Matchvs] \" + getNowFormatDate() + \" \" + this.toArray(arguments) + \" \" + loc);\r\n        };\r\n        MatchvsLog.logE = function () {\r\n            var loc = \"\";\r\n            try {\r\n                throw new Error();\r\n            }\r\n            catch (e) {\r\n                var line = e.stack.split(/\\n/)[1];\r\n                loc = line.slice(line.lastIndexOf(\"/\") + 1, line.lastIndexOf(\")\"));\r\n            }\r\n            console.error(\"[ERROR][Matchvs] \" + getNowFormatDate() + \" \" + this.toArray(arguments) + \" \" + loc);\r\n        };\r\n    }\r\n};\r\nMatchvsLog.closeLog = function () {\r\n    console.log(\"---- close log ----\");\r\n    MatchvsLog.logI = function () {\r\n    };\r\n    MatchvsLog.logE = function () {\r\n    };\r\n};\r\nMatchvsLog.openLog(); //default, the log is opening\r\n/* ================ mvsconfig.js ================= */\r\nvar HEART_BEAT_INTERVAL = 3000; //心跳间隔时间\r\nvar ENGE_STATE = {\r\n    NONE: 0x0000,\r\n    INITING: 0x0001,\r\n    HAVE_INIT: 0x0002,\r\n    LOGINING: 0x0004,\r\n    HAVE_LOGIN: 0x0008,\r\n    IN_ROOM: 0x0010,\r\n    CREATEROOM: 0x0020,\r\n    JOIN_ROOMING: 0x0040,\r\n    LEAVE_ROOMING: 0x0080,\r\n    LOGOUTING: 0x0100,\r\n    RECONNECTING: 0x0200 //正在重新连接\r\n};\r\n/**\r\n * 平台配置值\r\n * @type {{MVS_COMMON: number, MVS_EGRET: number, MVS_WX: number}}\r\n */\r\nvar ENMU_MVS_PTF = {\r\n    MVS_COMMON: 0,\r\n    MVS_EGRET: 1,\r\n    MVS_WX: 2\r\n};\r\nvar MVSCONFIG = {\r\n    MAXPLAYER_LIMIT: 100,\r\n    MINPLAYER_LIMIT: 2,\r\n    MVS_PTF_ADATPER: ENMU_MVS_PTF.MVS_COMMON //如果是白鹭适配就需要填 1\r\n};\r\nvar HttpConf = {\r\n    HOST_GATWAY_ADDR: \"\",\r\n    HOST_HOTEL_ADDR: \"\",\r\n    GETHOSTLIST_URL: \"http://sdk.matchvs.com\",\r\n    REGISTER_USER_URL: \"\",\r\n    CMSNS_URL: \"\",\r\n    VS_OPEN_URL: \"\",\r\n    VS_PAY_URL: \"\",\r\n    VS_PRODUCT_URL: \"\"\r\n};\r\n/* ================ msutil.js ================= */\r\nif (typeof String.prototype.startsWith !== \"function\") {\r\n    String.prototype.startsWith = function (prefix) {\r\n        return this.slice(0, prefix.length) === prefix;\r\n    };\r\n}\r\nif (typeof String.prototype.endsWith !== \"function\") {\r\n    String.prototype.endsWith = function (suffix) {\r\n        return this.indexOf(suffix, this.length - suffix.length) !== -1;\r\n    };\r\n}\r\nfunction IncludeJS(fileName) {\r\n    new_element = document.createElement(\"script\");\r\n    new_element.setAttribute(\"type\", \"text/javascript\");\r\n    new_element.setAttribute(\"src\", fileName); // 在这里引入了a.js\r\n    document.body.appendChild(new_element);\r\n}\r\n// IncludeJS(\"msutil.js\");\r\nfunction MSExtend(Child, Parent) {\r\n    var p = Parent.prototype;\r\n    var c = Child.prototype;\r\n    for (var i in p) {\r\n        c[i] = p[i];\r\n    }\r\n}\r\nfunction stringToUtf8ByteArray(a) {\r\n    if (!(a && (typeof a === \"string\"))) {\r\n        return new Uint8Array(0);\r\n    }\r\n    for (var b = [], c = 0, d = 0; d < a.length; d++) {\r\n        var e = a.charCodeAt(d);\r\n        128 > e ? b[c++] = e : (2048 > e ? b[c++] = e >> 6 | 192 : (55296 == (e & 64512) && d + 1 < a.length && 56320 == (a.charCodeAt(d + 1) & 64512) ? (e = 65536 + ((e & 1023) << 10) + (a.charCodeAt(++d) & 1023), b[c++] = e >> 18 | 240, b[c++] = e >> 12 & 63 | 128) : b[c++] = e >> 12 | 224, b[c++] = e >> 6 & 63 | 128), b[c++] = e & 63 | 128);\r\n    }\r\n    var buf = new Uint8Array(b.length);\r\n    for (var i = 0; i < buf.length; i++) {\r\n        buf[i] = b[i];\r\n    }\r\n    return buf;\r\n}\r\nfunction utf8ByteArrayToString(a) {\r\n    for (var b = [], c = 0, d = 0; c < a.length;) {\r\n        var e = a[c++];\r\n        if (128 > e)\r\n            b[d++] = String.fromCharCode(e);\r\n        else if (191 < e && 224 > e) {\r\n            var f = a[c++];\r\n            b[d++] = String.fromCharCode((e & 31) << 6 | f & 63);\r\n        }\r\n        else if (239 < e && 365 > e) {\r\n            var f = a[c++], g = a[c++], h = a[c++], e = ((e & 7) << 18 | (f & 63) << 12 | (g & 63) << 6 | h & 63) - 65536;\r\n            b[d++] = String.fromCharCode(55296 + (e >> 10));\r\n            b[d++] = String.fromCharCode(56320 + (e & 1023));\r\n        }\r\n        else\r\n            f = a[c++], g = a[c++], b[d++] = String.fromCharCode((e & 15) << 12 | (f & 63) << 6 | g & 63);\r\n    }\r\n    return b.join(\"\");\r\n}\r\nfunction str2u8array(str) {\r\n    if (!(str && (typeof str === \"string\"))) {\r\n        return str;\r\n    }\r\n    var out = new Uint8Array(str.length * 2);\r\n    for (var i = 0; i < str.length; i++) {\r\n        out[i * 2] = str.charCodeAt(i) >> 8;\r\n        out[i * 2 + 1] = str.charCodeAt(i);\r\n    }\r\n    return out;\r\n}\r\nfunction u8array2str(u8array) {\r\n    var buf = new Uint16Array(u8array.length / 2);\r\n    for (var i = 0; i < buf.length; i++) {\r\n        buf[i] = u8array[i * 2] << 8 | u8array[i * 2 + 1];\r\n    }\r\n    return String.fromCharCode.apply(null, buf);\r\n}\r\n/**\r\n * @return {boolean}\r\n */\r\nfunction LocalStore_Save(key, value) {\r\n    //存储，IE6~7 cookie 其他浏览器HTML5本地存储\r\n    if (window.localStorage) {\r\n        localStorage.setItem(key, value);\r\n        return true;\r\n    }\r\n    if (MVSCONFIG.MVS_PTF_ADATPER === ENMU_MVS_PTF.MVS_EGRET) {\r\n        return false;\r\n    }\r\n    if (typeof (wx) !== \"undefined\") {\r\n        wx.setStorageSync(key, value);\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n        // document.cookie+=(key+\"=\"+value);\r\n    }\r\n}\r\n/**\r\n * @return {boolean}\r\n */\r\nfunction LocalStore_Clear() {\r\n    //存储，IE6~7 cookie 其他浏览器HTML5本地存储\r\n    if (window.localStorage) {\r\n        localStorage.clear();\r\n        return true;\r\n    }\r\n    if (MVSCONFIG.MVS_PTF_ADATPER === ENMU_MVS_PTF.MVS_EGRET) {\r\n        return false;\r\n    }\r\n    if (typeof (wx) !== \"undefined\") {\r\n        wx.clearStorageSync();\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * @return {null}\r\n */\r\nfunction LocalStore_Load(key) {\r\n    if (window.localStorage) {\r\n        return localStorage.getItem(key);\r\n    }\r\n    if (MVSCONFIG.MVS_PTF_ADATPER === ENMU_MVS_PTF.MVS_EGRET) {\r\n        return null;\r\n    }\r\n    if (typeof (wx) !== \"undefined\") {\r\n        return wx.getStorageSync(key);\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\nfunction isIE() {\r\n    return !!window.ActiveXObject || \"ActiveXObject\" in window;\r\n}\r\nfunction isNeedUseWSS() {\r\n    return typeof wx !== \"undefined\";\r\n}\r\n/**\r\n * 同时在SDK加入房间时mvs在bookInfo中会返回hotel的wssProxy\r\n * 建立连接时用 wss://proxyAddress/proxy?hotel=hotelAddress\r\n * @param bookInfo\r\n * @returns {string} url\r\n */\r\nfunction getHotelUrl(bookInfo) {\r\n    //TODO isNeedUseWSS;\r\n    return isNeedUseWSS() ? (\"wss://\" + bookInfo.getWssproxy() + \"/proxy?hotel=\" + bookInfo.getHoteladdr()) : (\"ws://\" + bookInfo.getHoteladdr());\r\n}\r\n/**\r\n * 检测engine状态\r\n * @param engineState\r\n * @param roomLoock\r\n * @param type\r\n * @returns {number}\r\n */\r\nfunction commEngineStateCheck(engineState, roomLoock, type) {\r\n    var resNo = 0;\r\n    if ((engineState & ENGE_STATE.HAVE_INIT) !== ENGE_STATE.HAVE_INIT)\r\n        resNo = -2; //未初始化\r\n    if ((engineState & ENGE_STATE.INITING) === ENGE_STATE.INITING)\r\n        resNo = -3; //正在初始化\r\n    if ((engineState & ENGE_STATE.HAVE_LOGIN) !== ENGE_STATE.HAVE_LOGIN)\r\n        resNo = -4; //未登录\r\n    if ((engineState & ENGE_STATE.LOGINING) === ENGE_STATE.LOGINING)\r\n        resNo = -5; //正在登录\r\n    if ((engineState & ENGE_STATE.CREATEROOM) === ENGE_STATE.CREATEROOM)\r\n        resNo = -7; //在创建房间\r\n    if ((engineState & ENGE_STATE.JOIN_ROOMING) === ENGE_STATE.JOIN_ROOMING)\r\n        resNo = -7; //正在加入房间\r\n    if ((engineState & ENGE_STATE.LOGOUTING) === ENGE_STATE.LOGOUTING)\r\n        resNo = -11; // 正在登出\r\n    if (type === 1) {\r\n        if ((engineState & ENGE_STATE.IN_ROOM) !== ENGE_STATE.IN_ROOM)\r\n            resNo = -6; //没有进入房间\r\n        if ((engineState & ENGE_STATE.LEAVE_ROOMING) === ENGE_STATE.LEAVE_ROOMING)\r\n            resNo = -10; //正在离开房间\r\n    }\r\n    else if (type === 2) {\r\n        if ((engineState & ENGE_STATE.IN_ROOM) === ENGE_STATE.IN_ROOM)\r\n            resNo = -8; //已经在房间\r\n        if ((engineState & ENGE_STATE.LEAVE_ROOMING) === ENGE_STATE.LEAVE_ROOMING)\r\n            resNo = -10; //正在离开房间\r\n    }\r\n    else if (type === 3) {\r\n        if ((engineState & ENGE_STATE.LEAVE_ROOMING) === ENGE_STATE.LEAVE_ROOMING)\r\n            resNo = -10; //正在离开房间\r\n    }\r\n    if (resNo !== 0) {\r\n        MatchvsLog.logI(\"error code:\" + resNo + \" see the error documentation : http://www.matchvs.com/service?page=js\");\r\n    }\r\n    return resNo;\r\n}\r\nvar MvsTicker = (function (obj) {\r\n    var _tickMap = {};\r\n    var _count = 0;\r\n    function MvsTicker() {\r\n    }\r\n    if (\"undefined\" !== typeof (BK)) {\r\n        MvsTicker.prototype.setInterval = function (callback, interval) {\r\n            var t = new BK.Ticker();\r\n            t.interval = interval * 6 / 100;\r\n            t.setTickerCallBack(callback);\r\n            var flag = ++_count;\r\n            _tickMap[flag] = t;\r\n            return flag;\r\n        };\r\n        MvsTicker.prototype.clearInterval = function (flag) {\r\n            var ti = _tickMap[flag];\r\n            if (ti) {\r\n                ti.dispose();\r\n                delete _tickMap[flag];\r\n            }\r\n        };\r\n    }\r\n    else {\r\n        MvsTicker.prototype.setInterval = function (callback, interval) {\r\n            return setInterval(callback, interval);\r\n        };\r\n        MvsTicker.prototype.clearInterval = function (flag) {\r\n            clearInterval(flag);\r\n        };\r\n    }\r\n    return MvsTicker;\r\n})(MvsTicker);\r\nvar MVS = (function (_obj) {\r\n    _obj.ticker = new MvsTicker();\r\n    return _obj;\r\n})(MVS || {});\r\n/* ================ DefaultAppKeyCheck.js ================= */\r\n/**\r\n * DefaultAppKeyCheck.js\r\n * 默认 appkey 合法性检测\r\n */\r\nvar MVS = (function (_super) {\r\n    var AppKeyCheck = (function (_obj) {\r\n        var _tags = [\"\", \"E\", \"C\", \"M\"];\r\n        /**\r\n         * 获取 appkey 里的渠道标记\r\n         * @param appkey\r\n         * @returns {string}\r\n         */\r\n        var getTag = function (appkey) {\r\n            var len = appkey.length;\r\n            // if(len !== 35){\r\n            //     return \"\";\r\n            // }\r\n            var tags = appkey.split('#');\r\n            if (tags.length !== 2) {\r\n                return \"\";\r\n            }\r\n            return tags[1];\r\n        };\r\n        var AppkeyCheck = (function () {\r\n        });\r\n        AppkeyCheck.prototype.isInvailed = function (appkey) {\r\n            var tag = getTag(appkey);\r\n            for (var i = 0; i < _tags.length; i++) {\r\n                if (tag === _tags[i]) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        _obj = AppkeyCheck;\r\n        return _obj;\r\n    })(AppKeyCheck || {});\r\n    _super.AppKeyCheck = AppKeyCheck;\r\n    return _super;\r\n})(MVS || {}); /* ================ mspb.js ================= */\r\n(function e(t, n, r) {\r\n    function s(o, u) {\r\n        if (!n[o]) {\r\n            if (!t[o]) {\r\n                var a = typeof _require == \"function\" && _require;\r\n                if (!u && a)\r\n                    return a(o, !0);\r\n                if (i)\r\n                    return i(o, !0);\r\n                var f = new Error(\"Cannot find module '\" + o + \"'\");\r\n                throw f.code = \"MODULE_NOT_FOUND\", f;\r\n            }\r\n            var l = n[o] = { exports: {} };\r\n            t[o][0].call(l.exports, function (e) {\r\n                var n = t[o][1][e];\r\n                return s(n ? n : e);\r\n            }, l, l.exports, e, t, n, r);\r\n        }\r\n        return n[o].exports;\r\n    }\r\n    var i = typeof _require == \"function\" && _require;\r\n    for (var o = 0; o < r.length; o++)\r\n        s(r[o]);\r\n    return s;\r\n})({\r\n    1: [function (_require, module, exports) {\r\n            (function (global) {\r\n                var $jscomp = {\r\n                    scope: {}, getGlobal: function (a) {\r\n                        return \"undefined\" != typeof window && window === a ? a : \"undefined\" != typeof global ? global : a;\r\n                    }\r\n                };\r\n                $jscomp.global = $jscomp.getGlobal(this);\r\n                $jscomp.initSymbol = function () {\r\n                    $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol);\r\n                    $jscomp.initSymbol = function () {\r\n                    };\r\n                };\r\n                $jscomp.symbolCounter_ = 0;\r\n                $jscomp.Symbol = function (a) {\r\n                    return \"jscomp_symbol_\" + a + $jscomp.symbolCounter_++;\r\n                };\r\n                $jscomp.initSymbolIterator = function () {\r\n                    $jscomp.initSymbol();\r\n                    $jscomp.global.Symbol.iterator || ($jscomp.global.Symbol.iterator = $jscomp.global.Symbol(\"iterator\"));\r\n                    $jscomp.initSymbolIterator = function () {\r\n                    };\r\n                };\r\n                $jscomp.makeIterator = function (a) {\r\n                    $jscomp.initSymbolIterator();\r\n                    $jscomp.initSymbol();\r\n                    $jscomp.initSymbolIterator();\r\n                    var b = a[Symbol.iterator];\r\n                    if (b)\r\n                        return b.call(a);\r\n                    var c = 0;\r\n                    return {\r\n                        next: function () {\r\n                            return c < a.length ? { done: !1, value: a[c++] } : { done: !0 };\r\n                        }\r\n                    };\r\n                };\r\n                $jscomp.arrayFromIterator = function (a) {\r\n                    for (var b, c = []; !(b = a.next()).done;)\r\n                        c.push(b.value);\r\n                    return c;\r\n                };\r\n                $jscomp.arrayFromIterable = function (a) {\r\n                    return a instanceof Array ? a : $jscomp.arrayFromIterator($jscomp.makeIterator(a));\r\n                };\r\n                $jscomp.inherits = function (a, b) {\r\n                    function c() {\r\n                    }\r\n                    c.prototype = b.prototype;\r\n                    a.prototype = new c;\r\n                    a.prototype.constructor = a;\r\n                    for (var d in b)\r\n                        if (Object.defineProperties) {\r\n                            var e = Object.getOwnPropertyDescriptor(b, d);\r\n                            e && Object.defineProperty(a, d, e);\r\n                        }\r\n                        else\r\n                            a[d] = b[d];\r\n                };\r\n                $jscomp.array = $jscomp.array || {};\r\n                $jscomp.iteratorFromArray = function (a, b) {\r\n                    $jscomp.initSymbolIterator();\r\n                    a instanceof String && (a += \"\");\r\n                    var c = 0, d = {\r\n                        next: function () {\r\n                            if (c < a.length) {\r\n                                var e = c++;\r\n                                return { value: b(e, a[e]), done: !1 };\r\n                            }\r\n                            d.next = function () {\r\n                                return { done: !0, value: void 0 };\r\n                            };\r\n                            return d.next();\r\n                        }\r\n                    };\r\n                    $jscomp.initSymbol();\r\n                    $jscomp.initSymbolIterator();\r\n                    d[Symbol.iterator] = function () {\r\n                        return d;\r\n                    };\r\n                    return d;\r\n                };\r\n                $jscomp.findInternal = function (a, b, c) {\r\n                    a instanceof String && (a = String(a));\r\n                    for (var d = a.length, e = 0; e < d; e++) {\r\n                        var f = a[e];\r\n                        if (b.call(c, f, e, a))\r\n                            return { i: e, v: f };\r\n                    }\r\n                    return { i: -1, v: void 0 };\r\n                };\r\n                $jscomp.array.from = function (a, b, c) {\r\n                    $jscomp.initSymbolIterator();\r\n                    b = null != b ? b : function (a) {\r\n                        return a;\r\n                    };\r\n                    var d = [];\r\n                    $jscomp.initSymbol();\r\n                    $jscomp.initSymbolIterator();\r\n                    var e = a[Symbol.iterator];\r\n                    \"function\" == typeof e && (a = e.call(a));\r\n                    if (\"function\" == typeof a.next)\r\n                        for (; !(e = a.next()).done;)\r\n                            d.push(b.call(c, e.value));\r\n                    else\r\n                        for (var e = a.length, f = 0; f < e; f++)\r\n                            d.push(b.call(c, a[f]));\r\n                    return d;\r\n                };\r\n                $jscomp.array.of = function (a) {\r\n                    return $jscomp.array.from(arguments);\r\n                };\r\n                $jscomp.array.entries = function () {\r\n                    return $jscomp.iteratorFromArray(this, function (a, b) {\r\n                        return [a, b];\r\n                    });\r\n                };\r\n                $jscomp.array.installHelper_ = function (a, b) {\r\n                    !Array.prototype[a] && Object.defineProperties && Object.defineProperty && Object.defineProperty(Array.prototype, a, {\r\n                        configurable: !0,\r\n                        enumerable: !1,\r\n                        writable: !0,\r\n                        value: b\r\n                    });\r\n                };\r\n                $jscomp.array.entries$install = function () {\r\n                    $jscomp.array.installHelper_(\"entries\", $jscomp.array.entries);\r\n                };\r\n                $jscomp.array.keys = function () {\r\n                    return $jscomp.iteratorFromArray(this, function (a) {\r\n                        return a;\r\n                    });\r\n                };\r\n                $jscomp.array.keys$install = function () {\r\n                    $jscomp.array.installHelper_(\"keys\", $jscomp.array.keys);\r\n                };\r\n                $jscomp.array.values = function () {\r\n                    return $jscomp.iteratorFromArray(this, function (a, b) {\r\n                        return b;\r\n                    });\r\n                };\r\n                $jscomp.array.values$install = function () {\r\n                    $jscomp.array.installHelper_(\"values\", $jscomp.array.values);\r\n                };\r\n                $jscomp.array.copyWithin = function (a, b, c) {\r\n                    var d = this.length;\r\n                    a = Number(a);\r\n                    b = Number(b);\r\n                    c = Number(null != c ? c : d);\r\n                    if (a < b)\r\n                        for (c = Math.min(c, d); b < c;)\r\n                            b in this ? this[a++] = this[b++] : (delete this[a++], b++);\r\n                    else\r\n                        for (c = Math.min(c, d + b - a), a += c - b; c > b;)\r\n                            --c in this ? this[--a] = this[c] : delete this[a];\r\n                    return this;\r\n                };\r\n                $jscomp.array.copyWithin$install = function () {\r\n                    $jscomp.array.installHelper_(\"copyWithin\", $jscomp.array.copyWithin);\r\n                };\r\n                $jscomp.array.fill = function (a, b, c) {\r\n                    var d = this.length || 0;\r\n                    0 > b && (b = Math.max(0, d + b));\r\n                    if (null == c || c > d)\r\n                        c = d;\r\n                    c = Number(c);\r\n                    0 > c && (c = Math.max(0, d + c));\r\n                    for (b = Number(b || 0); b < c; b++)\r\n                        this[b] = a;\r\n                    return this;\r\n                };\r\n                $jscomp.array.fill$install = function () {\r\n                    $jscomp.array.installHelper_(\"fill\", $jscomp.array.fill);\r\n                };\r\n                $jscomp.array.find = function (a, b) {\r\n                    return $jscomp.findInternal(this, a, b).v;\r\n                };\r\n                $jscomp.array.find$install = function () {\r\n                    $jscomp.array.installHelper_(\"find\", $jscomp.array.find);\r\n                };\r\n                $jscomp.array.findIndex = function (a, b) {\r\n                    return $jscomp.findInternal(this, a, b).i;\r\n                };\r\n                $jscomp.array.findIndex$install = function () {\r\n                    $jscomp.array.installHelper_(\"findIndex\", $jscomp.array.findIndex);\r\n                };\r\n                $jscomp.ASSUME_NO_NATIVE_MAP = !1;\r\n                $jscomp.Map$isConformant = function () {\r\n                    if ($jscomp.ASSUME_NO_NATIVE_MAP)\r\n                        return !1;\r\n                    var a = $jscomp.global.Map;\r\n                    if (!a || !a.prototype.entries || \"function\" != typeof Object.seal)\r\n                        return !1;\r\n                    try {\r\n                        var b = Object.seal({ x: 4 }), c = new a($jscomp.makeIterator([[b, \"s\"]]));\r\n                        if (\"s\" != c.get(b) || 1 != c.size || c.get({ x: 4 }) || c.set({ x: 4 }, \"t\") != c || 2 != c.size)\r\n                            return !1;\r\n                        var d = c.entries(), e = d.next();\r\n                        if (e.done || e.value[0] != b || \"s\" != e.value[1])\r\n                            return !1;\r\n                        e = d.next();\r\n                        return e.done || 4 != e.value[0].x || \"t\" != e.value[1] || !d.next().done ? !1 : !0;\r\n                    }\r\n                    catch (f) {\r\n                        return !1;\r\n                    }\r\n                };\r\n                $jscomp.Map = function (a) {\r\n                    this.data_ = {};\r\n                    this.head_ = $jscomp.Map.createHead();\r\n                    this.size = 0;\r\n                    if (a) {\r\n                        a = $jscomp.makeIterator(a);\r\n                        for (var b; !(b = a.next()).done;)\r\n                            b = b.value, this.set(b[0], b[1]);\r\n                    }\r\n                };\r\n                $jscomp.Map.prototype.set = function (a, b) {\r\n                    var c = $jscomp.Map.maybeGetEntry(this, a);\r\n                    c.list || (c.list = this.data_[c.id] = []);\r\n                    c.entry ? c.entry.value = b : (c.entry = {\r\n                        next: this.head_,\r\n                        previous: this.head_.previous,\r\n                        head: this.head_,\r\n                        key: a,\r\n                        value: b\r\n                    }, c.list.push(c.entry), this.head_.previous.next = c.entry, this.head_.previous = c.entry, this.size++);\r\n                    return this;\r\n                };\r\n                $jscomp.Map.prototype[\"delete\"] = function (a) {\r\n                    a = $jscomp.Map.maybeGetEntry(this, a);\r\n                    return a.entry && a.list ? (a.list.splice(a.index, 1), a.list.length || delete this.data_[a.id], a.entry.previous.next = a.entry.next, a.entry.next.previous = a.entry.previous, a.entry.head = null, this.size--, !0) : !1;\r\n                };\r\n                $jscomp.Map.prototype.clear = function () {\r\n                    this.data_ = {};\r\n                    this.head_ = this.head_.previous = $jscomp.Map.createHead();\r\n                    this.size = 0;\r\n                };\r\n                $jscomp.Map.prototype.has = function (a) {\r\n                    return !!$jscomp.Map.maybeGetEntry(this, a).entry;\r\n                };\r\n                $jscomp.Map.prototype.get = function (a) {\r\n                    return (a = $jscomp.Map.maybeGetEntry(this, a).entry) && a.value;\r\n                };\r\n                $jscomp.Map.prototype.entries = function () {\r\n                    return $jscomp.Map.makeIterator_(this, function (a) {\r\n                        return [a.key, a.value];\r\n                    });\r\n                };\r\n                $jscomp.Map.prototype.keys = function () {\r\n                    return $jscomp.Map.makeIterator_(this, function (a) {\r\n                        return a.key;\r\n                    });\r\n                };\r\n                $jscomp.Map.prototype.values = function () {\r\n                    return $jscomp.Map.makeIterator_(this, function (a) {\r\n                        return a.value;\r\n                    });\r\n                };\r\n                $jscomp.Map.prototype.forEach = function (a, b) {\r\n                    for (var c = this.entries(), d; !(d = c.next()).done;)\r\n                        d = d.value, a.call(b, d[1], d[0], this);\r\n                };\r\n                $jscomp.Map.maybeGetEntry = function (a, b) {\r\n                    var c = $jscomp.Map.getId(b), d = a.data_[c];\r\n                    if (d && Object.prototype.hasOwnProperty.call(a.data_, c))\r\n                        for (var e = 0; e < d.length; e++) {\r\n                            var f = d[e];\r\n                            if (b !== b && f.key !== f.key || b === f.key)\r\n                                return { id: c, list: d, index: e, entry: f };\r\n                        }\r\n                    return { id: c, list: d, index: -1, entry: void 0 };\r\n                };\r\n                $jscomp.Map.makeIterator_ = function (a, b) {\r\n                    var c = a.head_, d = {\r\n                        next: function () {\r\n                            if (c) {\r\n                                for (; c.head != a.head_;)\r\n                                    c = c.previous;\r\n                                for (; c.next != c.head;)\r\n                                    return c = c.next, { done: !1, value: b(c) };\r\n                                c = null;\r\n                            }\r\n                            return { done: !0, value: void 0 };\r\n                        }\r\n                    };\r\n                    $jscomp.initSymbol();\r\n                    $jscomp.initSymbolIterator();\r\n                    d[Symbol.iterator] = function () {\r\n                        return d;\r\n                    };\r\n                    return d;\r\n                };\r\n                $jscomp.Map.mapIndex_ = 0;\r\n                $jscomp.Map.createHead = function () {\r\n                    var a = {};\r\n                    return a.previous = a.next = a.head = a;\r\n                };\r\n                $jscomp.Map.getId = function (a) {\r\n                    if (!(a instanceof Object))\r\n                        return \"p_\" + a;\r\n                    if (!($jscomp.Map.idKey in a))\r\n                        try {\r\n                            $jscomp.Map.defineProperty(a, $jscomp.Map.idKey, { value: ++$jscomp.Map.mapIndex_ });\r\n                        }\r\n                        catch (b) {\r\n                        }\r\n                    return $jscomp.Map.idKey in a ? a[$jscomp.Map.idKey] : \"o_ \" + a;\r\n                };\r\n                $jscomp.Map.defineProperty = Object.defineProperty ? function (a, b, c) {\r\n                    Object.defineProperty(a, b, { value: String(c) });\r\n                } : function (a, b, c) {\r\n                    a[b] = String(c);\r\n                };\r\n                $jscomp.Map.Entry = function () {\r\n                };\r\n                $jscomp.Map$install = function () {\r\n                    $jscomp.initSymbol();\r\n                    $jscomp.initSymbolIterator();\r\n                    $jscomp.Map$isConformant() ? $jscomp.Map = $jscomp.global.Map : ($jscomp.initSymbol(), $jscomp.initSymbolIterator(), $jscomp.Map.prototype[Symbol.iterator] = $jscomp.Map.prototype.entries, $jscomp.initSymbol(), $jscomp.Map.idKey = Symbol(\"map-id-key\"), $jscomp.Map$install = function () {\r\n                    });\r\n                };\r\n                $jscomp.math = $jscomp.math || {};\r\n                $jscomp.math.clz32 = function (a) {\r\n                    a = Number(a) >>> 0;\r\n                    if (0 === a)\r\n                        return 32;\r\n                    var b = 0;\r\n                    0 === (a & 4294901760) && (a <<= 16, b += 16);\r\n                    0 === (a & 4278190080) && (a <<= 8, b += 8);\r\n                    0 === (a & 4026531840) && (a <<= 4, b += 4);\r\n                    0 === (a & 3221225472) && (a <<= 2, b += 2);\r\n                    0 === (a & 2147483648) && b++;\r\n                    return b;\r\n                };\r\n                $jscomp.math.imul = function (a, b) {\r\n                    a = Number(a);\r\n                    b = Number(b);\r\n                    var c = a & 65535, d = b & 65535;\r\n                    return c * d + ((a >>> 16 & 65535) * d + c * (b >>> 16 & 65535) << 16 >>> 0) | 0;\r\n                };\r\n                $jscomp.math.sign = function (a) {\r\n                    a = Number(a);\r\n                    return 0 === a || isNaN(a) ? a : 0 < a ? 1 : -1;\r\n                };\r\n                $jscomp.math.log10 = function (a) {\r\n                    return Math.log(a) / Math.LN10;\r\n                };\r\n                $jscomp.math.log2 = function (a) {\r\n                    return Math.log(a) / Math.LN2;\r\n                };\r\n                $jscomp.math.log1p = function (a) {\r\n                    a = Number(a);\r\n                    if (.25 > a && -.25 < a) {\r\n                        for (var b = a, c = 1, d = a, e = 0, f = 1; e != d;)\r\n                            b *= a, f *= -1, d = (e = d) + f * b / ++c;\r\n                        return d;\r\n                    }\r\n                    return Math.log(1 + a);\r\n                };\r\n                $jscomp.math.expm1 = function (a) {\r\n                    a = Number(a);\r\n                    if (.25 > a && -.25 < a) {\r\n                        for (var b = a, c = 1, d = a, e = 0; e != d;)\r\n                            b *= a / ++c, d = (e = d) + b;\r\n                        return d;\r\n                    }\r\n                    return Math.exp(a) - 1;\r\n                };\r\n                $jscomp.math.cosh = function (a) {\r\n                    a = Number(a);\r\n                    return (Math.exp(a) + Math.exp(-a)) / 2;\r\n                };\r\n                $jscomp.math.sinh = function (a) {\r\n                    a = Number(a);\r\n                    return 0 === a ? a : (Math.exp(a) - Math.exp(-a)) / 2;\r\n                };\r\n                $jscomp.math.tanh = function (a) {\r\n                    a = Number(a);\r\n                    if (0 === a)\r\n                        return a;\r\n                    var b = Math.exp(-2 * Math.abs(a)), b = (1 - b) / (1 + b);\r\n                    return 0 > a ? -b : b;\r\n                };\r\n                $jscomp.math.acosh = function (a) {\r\n                    a = Number(a);\r\n                    return Math.log(a + Math.sqrt(a * a - 1));\r\n                };\r\n                $jscomp.math.asinh = function (a) {\r\n                    a = Number(a);\r\n                    if (0 === a)\r\n                        return a;\r\n                    var b = Math.log(Math.abs(a) + Math.sqrt(a * a + 1));\r\n                    return 0 > a ? -b : b;\r\n                };\r\n                $jscomp.math.atanh = function (a) {\r\n                    a = Number(a);\r\n                    return ($jscomp.math.log1p(a) - $jscomp.math.log1p(-a)) / 2;\r\n                };\r\n                $jscomp.math.hypot = function (a, b, c) {\r\n                    a = Number(a);\r\n                    b = Number(b);\r\n                    var d, e, f, g = Math.max(Math.abs(a), Math.abs(b));\r\n                    for (d = 2; d < arguments.length; d++)\r\n                        g = Math.max(g, Math.abs(arguments[d]));\r\n                    if (1E100 < g || 1E-100 > g) {\r\n                        a /= g;\r\n                        b /= g;\r\n                        f = a * a + b * b;\r\n                        for (d = 2; d < arguments.length; d++)\r\n                            e = Number(arguments[d]) / g, f += e * e;\r\n                        return Math.sqrt(f) * g;\r\n                    }\r\n                    f = a * a + b * b;\r\n                    for (d = 2; d < arguments.length; d++)\r\n                        e = Number(arguments[d]), f += e * e;\r\n                    return Math.sqrt(f);\r\n                };\r\n                $jscomp.math.trunc = function (a) {\r\n                    a = Number(a);\r\n                    if (isNaN(a) || Infinity === a || -Infinity === a || 0 === a)\r\n                        return a;\r\n                    var b = Math.floor(Math.abs(a));\r\n                    return 0 > a ? -b : b;\r\n                };\r\n                $jscomp.math.cbrt = function (a) {\r\n                    if (0 === a)\r\n                        return a;\r\n                    a = Number(a);\r\n                    var b = Math.pow(Math.abs(a), 1 / 3);\r\n                    return 0 > a ? -b : b;\r\n                };\r\n                $jscomp.number = $jscomp.number || {};\r\n                $jscomp.number.isFinite = function (a) {\r\n                    return \"number\" !== typeof a ? !1 : !isNaN(a) && Infinity !== a && -Infinity !== a;\r\n                };\r\n                $jscomp.number.isInteger = function (a) {\r\n                    return $jscomp.number.isFinite(a) ? a === Math.floor(a) : !1;\r\n                };\r\n                $jscomp.number.isNaN = function (a) {\r\n                    return \"number\" === typeof a && isNaN(a);\r\n                };\r\n                $jscomp.number.isSafeInteger = function (a) {\r\n                    return $jscomp.number.isInteger(a) && Math.abs(a) <= $jscomp.number.MAX_SAFE_INTEGER;\r\n                };\r\n                $jscomp.number.EPSILON = function () {\r\n                    return Math.pow(2, -52);\r\n                }();\r\n                $jscomp.number.MAX_SAFE_INTEGER = function () {\r\n                    return 9007199254740991;\r\n                }();\r\n                $jscomp.number.MIN_SAFE_INTEGER = function () {\r\n                    return -9007199254740991;\r\n                }();\r\n                $jscomp.object = $jscomp.object || {};\r\n                $jscomp.object.assign = function (a, b) {\r\n                    for (var c = 1; c < arguments.length; c++) {\r\n                        var d = arguments[c];\r\n                        if (d)\r\n                            for (var e in d)\r\n                                Object.prototype.hasOwnProperty.call(d, e) && (a[e] = d[e]);\r\n                    }\r\n                    return a;\r\n                };\r\n                $jscomp.object.is = function (a, b) {\r\n                    return a === b ? 0 !== a || 1 / a === 1 / b : a !== a && b !== b;\r\n                };\r\n                $jscomp.ASSUME_NO_NATIVE_SET = !1;\r\n                $jscomp.Set$isConformant = function () {\r\n                    if ($jscomp.ASSUME_NO_NATIVE_SET)\r\n                        return !1;\r\n                    var a = $jscomp.global.Set;\r\n                    if (!a || !a.prototype.entries || \"function\" != typeof Object.seal)\r\n                        return !1;\r\n                    try {\r\n                        var b = Object.seal({ x: 4 }), c = new a($jscomp.makeIterator([b]));\r\n                        if (!c.has(b) || 1 != c.size || c.add(b) != c || 1 != c.size || c.add({ x: 4 }) != c || 2 != c.size)\r\n                            return !1;\r\n                        var d = c.entries(), e = d.next();\r\n                        if (e.done || e.value[0] != b || e.value[1] != b)\r\n                            return !1;\r\n                        e = d.next();\r\n                        return e.done || e.value[0] == b || 4 != e.value[0].x || e.value[1] != e.value[0] ? !1 : d.next().done;\r\n                    }\r\n                    catch (f) {\r\n                        return !1;\r\n                    }\r\n                };\r\n                $jscomp.Set = function (a) {\r\n                    this.map_ = new $jscomp.Map;\r\n                    if (a) {\r\n                        a = $jscomp.makeIterator(a);\r\n                        for (var b; !(b = a.next()).done;)\r\n                            this.add(b.value);\r\n                    }\r\n                    this.size = this.map_.size;\r\n                };\r\n                $jscomp.Set.prototype.add = function (a) {\r\n                    this.map_.set(a, a);\r\n                    this.size = this.map_.size;\r\n                    return this;\r\n                };\r\n                $jscomp.Set.prototype[\"delete\"] = function (a) {\r\n                    a = this.map_[\"delete\"](a);\r\n                    this.size = this.map_.size;\r\n                    return a;\r\n                };\r\n                $jscomp.Set.prototype.clear = function () {\r\n                    this.map_.clear();\r\n                    this.size = 0;\r\n                };\r\n                $jscomp.Set.prototype.has = function (a) {\r\n                    return this.map_.has(a);\r\n                };\r\n                $jscomp.Set.prototype.entries = function () {\r\n                    return this.map_.entries();\r\n                };\r\n                $jscomp.Set.prototype.values = function () {\r\n                    return this.map_.values();\r\n                };\r\n                $jscomp.Set.prototype.forEach = function (a, b) {\r\n                    var c = this;\r\n                    this.map_.forEach(function (d) {\r\n                        return a.call(b, d, d, c);\r\n                    });\r\n                };\r\n                $jscomp.Set$install = function () {\r\n                    $jscomp.Map$install();\r\n                    $jscomp.Set$isConformant() ? $jscomp.Set = $jscomp.global.Set : ($jscomp.initSymbol(), $jscomp.initSymbolIterator(), $jscomp.Set.prototype[Symbol.iterator] = $jscomp.Set.prototype.values, $jscomp.Set$install = function () {\r\n                    });\r\n                };\r\n                $jscomp.string = $jscomp.string || {};\r\n                $jscomp.checkStringArgs = function (a, b, c) {\r\n                    if (null == a)\r\n                        throw new TypeError(\"The 'this' value for String.prototype.\" + c + \" must not be null or undefined\");\r\n                    if (b instanceof RegExp)\r\n                        throw new TypeError(\"First argument to String.prototype.\" + c + \" must not be a regular expression\");\r\n                    return a + \"\";\r\n                };\r\n                $jscomp.string.fromCodePoint = function (a) {\r\n                    for (var b = \"\", c = 0; c < arguments.length; c++) {\r\n                        var d = Number(arguments[c]);\r\n                        if (0 > d || 1114111 < d || d !== Math.floor(d))\r\n                            throw new RangeError(\"invalid_code_point \" + d);\r\n                        65535 >= d ? b += String.fromCharCode(d) : (d -= 65536, b += String.fromCharCode(d >>> 10 & 1023 | 55296), b += String.fromCharCode(d & 1023 | 56320));\r\n                    }\r\n                    return b;\r\n                };\r\n                $jscomp.string.repeat = function (a) {\r\n                    var b = $jscomp.checkStringArgs(this, null, \"repeat\");\r\n                    if (0 > a || 1342177279 < a)\r\n                        throw new RangeError(\"Invalid count value\");\r\n                    a |= 0;\r\n                    for (var c = \"\"; a;)\r\n                        if (a & 1 && (c += b), a >>>= 1)\r\n                            b += b;\r\n                    return c;\r\n                };\r\n                $jscomp.string.repeat$install = function () {\r\n                    String.prototype.repeat || (String.prototype.repeat = $jscomp.string.repeat);\r\n                };\r\n                $jscomp.string.codePointAt = function (a) {\r\n                    var b = $jscomp.checkStringArgs(this, null, \"codePointAt\"), c = b.length;\r\n                    a = Number(a) || 0;\r\n                    if (0 <= a && a < c) {\r\n                        a |= 0;\r\n                        var d = b.charCodeAt(a);\r\n                        if (55296 > d || 56319 < d || a + 1 === c)\r\n                            return d;\r\n                        a = b.charCodeAt(a + 1);\r\n                        return 56320 > a || 57343 < a ? d : 1024 * (d - 55296) + a + 9216;\r\n                    }\r\n                };\r\n                $jscomp.string.codePointAt$install = function () {\r\n                    String.prototype.codePointAt || (String.prototype.codePointAt = $jscomp.string.codePointAt);\r\n                };\r\n                $jscomp.string.includes = function (a, b) {\r\n                    return -1 !== $jscomp.checkStringArgs(this, a, \"includes\").indexOf(a, b || 0);\r\n                };\r\n                $jscomp.string.includes$install = function () {\r\n                    String.prototype.includes || (String.prototype.includes = $jscomp.string.includes);\r\n                };\r\n                $jscomp.string.startsWith = function (a, b) {\r\n                    var c = $jscomp.checkStringArgs(this, a, \"startsWith\");\r\n                    a += \"\";\r\n                    for (var d = c.length, e = a.length, f = Math.max(0, Math.min(b | 0, c.length)), g = 0; g < e && f < d;)\r\n                        if (c[f++] != a[g++])\r\n                            return !1;\r\n                    return g >= e;\r\n                };\r\n                $jscomp.string.startsWith$install = function () {\r\n                    String.prototype.startsWith || (String.prototype.startsWith = $jscomp.string.startsWith);\r\n                };\r\n                $jscomp.string.endsWith = function (a, b) {\r\n                    var c = $jscomp.checkStringArgs(this, a, \"endsWith\");\r\n                    a += \"\";\r\n                    void 0 === b && (b = c.length);\r\n                    for (var d = Math.max(0, Math.min(b | 0, c.length)), e = a.length; 0 < e && 0 < d;)\r\n                        if (c[--d] != a[--e])\r\n                            return !1;\r\n                    return 0 >= e;\r\n                };\r\n                $jscomp.string.endsWith$install = function () {\r\n                    String.prototype.endsWith || (String.prototype.endsWith = $jscomp.string.endsWith);\r\n                };\r\n                var COMPILED = !0, goog = goog || {};\r\n                goog.global = this;\r\n                goog.isDef = function (a) {\r\n                    return void 0 !== a;\r\n                };\r\n                goog.exportPath_ = function (a, b, c) {\r\n                    a = a.split(\".\");\r\n                    c = c || goog.global;\r\n                    a[0] in c || !c.execScript || c.execScript(\"var \" + a[0]);\r\n                    for (var d; a.length && (d = a.shift());)\r\n                        !a.length && goog.isDef(b) ? c[d] = b : c = c[d] ? c[d] : c[d] = {};\r\n                };\r\n                goog.define = function (a, b) {\r\n                    var c = b;\r\n                    COMPILED || (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, a) ? c = goog.global.CLOSURE_UNCOMPILED_DEFINES[a] : goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, a) && (c = goog.global.CLOSURE_DEFINES[a]));\r\n                    goog.exportPath_(a, c);\r\n                };\r\n                goog.DEBUG = !0;\r\n                goog.LOCALE = \"en\";\r\n                goog.TRUSTED_SITE = !0;\r\n                goog.STRICT_MODE_COMPATIBLE = !1;\r\n                goog.DISALLOW_TEST_ONLY_CODE = COMPILED && !goog.DEBUG;\r\n                goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = !1;\r\n                goog.provide = function (a) {\r\n                    if (!COMPILED && goog.isProvided_(a))\r\n                        throw Error(\"Namespace \\\"\" + a + \"\\\" already declared.\");\r\n                    goog.constructNamespace_(a);\r\n                };\r\n                goog.constructNamespace_ = function (a, b) {\r\n                    if (!COMPILED) {\r\n                        delete goog.implicitNamespaces_[a];\r\n                        for (var c = a; (c = c.substring(0, c.lastIndexOf(\".\"))) && !goog.getObjectByName(c);)\r\n                            goog.implicitNamespaces_[c] = !0;\r\n                    }\r\n                    goog.exportPath_(a, b);\r\n                };\r\n                goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\r\n                goog.module = function (a) {\r\n                    if (!goog.isString(a) || !a || -1 == a.search(goog.VALID_MODULE_RE_))\r\n                        throw Error(\"Invalid module identifier\");\r\n                    if (!goog.isInModuleLoader_())\r\n                        throw Error(\"Module \" + a + \" has been loaded incorrectly.\");\r\n                    if (goog.moduleLoaderState_.moduleName)\r\n                        throw Error(\"goog.module may only be called once per module.\");\r\n                    goog.moduleLoaderState_.moduleName = a;\r\n                    if (!COMPILED) {\r\n                        if (goog.isProvided_(a))\r\n                            throw Error(\"Namespace \\\"\" + a + \"\\\" already declared.\");\r\n                        delete goog.implicitNamespaces_[a];\r\n                    }\r\n                };\r\n                goog.module.get = function (a) {\r\n                    return goog.module.getInternal_(a);\r\n                };\r\n                goog.module.getInternal_ = function (a) {\r\n                    if (!COMPILED)\r\n                        return goog.isProvided_(a) ? a in goog.loadedModules_ ? goog.loadedModules_[a] : goog.getObjectByName(a) : null;\r\n                };\r\n                goog.moduleLoaderState_ = null;\r\n                goog.isInModuleLoader_ = function () {\r\n                    return null != goog.moduleLoaderState_;\r\n                };\r\n                goog.module.declareLegacyNamespace = function () {\r\n                    if (!COMPILED && !goog.isInModuleLoader_())\r\n                        throw Error(\"goog.module.declareLegacyNamespace must be called from within a goog.module\");\r\n                    if (!COMPILED && !goog.moduleLoaderState_.moduleName)\r\n                        throw Error(\"goog.module must be called prior to goog.module.declareLegacyNamespace.\");\r\n                    goog.moduleLoaderState_.declareLegacyNamespace = !0;\r\n                };\r\n                goog.setTestOnly = function (a) {\r\n                    if (goog.DISALLOW_TEST_ONLY_CODE)\r\n                        throw a = a || \"\", Error(\"Importing test-only code into non-debug environment\" + (a ? \": \" + a : \".\"));\r\n                };\r\n                goog.forwardDeclare = function (a) {\r\n                };\r\n                COMPILED || (goog.isProvided_ = function (a) {\r\n                    return a in goog.loadedModules_ || !goog.implicitNamespaces_[a] && goog.isDefAndNotNull(goog.getObjectByName(a));\r\n                }, goog.implicitNamespaces_ = { \"goog.module\": !0 });\r\n                goog.getObjectByName = function (a, b) {\r\n                    for (var c = a.split(\".\"), d = b || goog.global, e; e = c.shift();)\r\n                        if (goog.isDefAndNotNull(d[e]))\r\n                            d = d[e];\r\n                        else\r\n                            return null;\r\n                    return d;\r\n                };\r\n                goog.globalize = function (a, b) {\r\n                    var c = b || goog.global, d;\r\n                    for (d in a)\r\n                        c[d] = a[d];\r\n                };\r\n                goog.addDependency = function (a, b, c, d) {\r\n                    if (goog.DEPENDENCIES_ENABLED) {\r\n                        var e;\r\n                        a = a.replace(/\\\\/g, \"/\");\r\n                        for (var f = goog.dependencies_, g = 0; e = b[g]; g++)\r\n                            f.nameToPath[e] = a, f.pathIsModule[a] = !!d;\r\n                        for (d = 0; b = c[d]; d++)\r\n                            a in f._requires || (f._requires[a] = {}), f._requires[a][b] = !0;\r\n                    }\r\n                };\r\n                goog.ENABLE_DEBUG_LOADER = !0;\r\n                goog.logToConsole_ = function (a) {\r\n                    goog.global.console && goog.global.console.error(a);\r\n                };\r\n                goog._require = function (a) {\r\n                    if (!COMPILED) {\r\n                        goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_ && goog.maybeProcessDeferredDep_(a);\r\n                        if (goog.isProvided_(a))\r\n                            return goog.isInModuleLoader_() ? goog.module.getInternal_(a) : null;\r\n                        if (goog.ENABLE_DEBUG_LOADER) {\r\n                            var b = goog.getPathFromDeps_(a);\r\n                            if (b)\r\n                                return goog.writeScripts_(b), null;\r\n                        }\r\n                        a = \"goog._require could not find: \" + a;\r\n                        goog.logToConsole_(a);\r\n                        throw Error(a);\r\n                    }\r\n                };\r\n                goog.basePath = \"\";\r\n                goog.nullFunction = function () {\r\n                };\r\n                goog.abstractMethod = function () {\r\n                    throw Error(\"unimplemented abstract method\");\r\n                };\r\n                goog.addSingletonGetter = function (a) {\r\n                    a.getInstance = function () {\r\n                        if (a.instance_)\r\n                            return a.instance_;\r\n                        goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = a);\r\n                        return a.instance_ = new a;\r\n                    };\r\n                };\r\n                goog.instantiatedSingletons_ = [];\r\n                goog.LOAD_MODULE_USING_EVAL = !0;\r\n                goog.SEAL_MODULE_EXPORTS = goog.DEBUG;\r\n                goog.loadedModules_ = {};\r\n                goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;\r\n                goog.DEPENDENCIES_ENABLED && (goog.dependencies_ = {\r\n                    pathIsModule: {},\r\n                    nameToPath: {},\r\n                    _requires: {},\r\n                    visited: {},\r\n                    written: {},\r\n                    deferred: {}\r\n                }, goog.inHtmlDocument_ = function () {\r\n                    var a = goog.global.document;\r\n                    return null != a && \"write\" in a;\r\n                }, goog.findBasePath_ = function () {\r\n                    if (goog.isDef(goog.global.CLOSURE_BASE_PATH))\r\n                        goog.basePath = goog.global.CLOSURE_BASE_PATH;\r\n                    else if (goog.inHtmlDocument_())\r\n                        for (var a = goog.global.document.getElementsByTagName(\"SCRIPT\"), b = a.length - 1; 0 <= b; --b) {\r\n                            var c = a[b].src, d = c.lastIndexOf(\"?\"), d = -1 == d ? c.length :\r\n                                d;\r\n                            if (\"base.js\" == c.substr(d - 7, 7)) {\r\n                                goog.basePath = c.substr(0, d - 7);\r\n                                break;\r\n                            }\r\n                        }\r\n                }, goog.importScript_ = function (a, b) {\r\n                    (goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_)(a, b) && (goog.dependencies_.written[a] = !0);\r\n                }, goog.IS_OLD_IE_ = !(goog.global.atob || !goog.global.document || !goog.global.document.all), goog.importModule_ = function (a) {\r\n                    goog.importScript_(\"\", \"goog.retrieveAndExecModule_(\\\"\" + a + \"\\\");\") && (goog.dependencies_.written[a] = !0);\r\n                }, goog.queuedModules_ = [], goog.wrapModule_ = function (a, b) {\r\n                    return goog.LOAD_MODULE_USING_EVAL &&\r\n                        goog.isDef(goog.global.JSON) ? \"goog.loadModule(\" + goog.global.JSON.stringify(b + \"\\n//# sourceURL=\" + a + \"\\n\") + \");\" : \"goog.loadModule(function(exports) {\\\"use strict\\\";\" + b + \"\\n;return exports});\\n//# sourceURL=\" + a + \"\\n\";\r\n                }, goog.loadQueuedModules_ = function () {\r\n                    var a = goog.queuedModules_.length;\r\n                    if (0 < a) {\r\n                        var b = goog.queuedModules_;\r\n                        goog.queuedModules_ = [];\r\n                        for (var c = 0; c < a; c++)\r\n                            goog.maybeProcessDeferredPath_(b[c]);\r\n                    }\r\n                }, goog.maybeProcessDeferredDep_ = function (a) {\r\n                    goog.isDeferredModule_(a) && goog.allDepsAreAvailable_(a) && (a = goog.getPathFromDeps_(a),\r\n                        goog.maybeProcessDeferredPath_(goog.basePath + a));\r\n                }, goog.isDeferredModule_ = function (a) {\r\n                    return (a = goog.getPathFromDeps_(a)) && goog.dependencies_.pathIsModule[a] ? goog.basePath + a in goog.dependencies_.deferred : !1;\r\n                }, goog.allDepsAreAvailable_ = function (a) {\r\n                    if ((a = goog.getPathFromDeps_(a)) && a in goog.dependencies_._requires)\r\n                        for (var b in goog.dependencies_._requires[a])\r\n                            if (!goog.isProvided_(b) && !goog.isDeferredModule_(b))\r\n                                return !1;\r\n                    return !0;\r\n                }, goog.maybeProcessDeferredPath_ = function (a) {\r\n                    if (a in goog.dependencies_.deferred) {\r\n                        var b = goog.dependencies_.deferred[a];\r\n                        delete goog.dependencies_.deferred[a];\r\n                        goog.globalEval(b);\r\n                    }\r\n                }, goog.loadModuleFromUrl = function (a) {\r\n                    goog.retrieveAndExecModule_(a);\r\n                }, goog.loadModule = function (a) {\r\n                    var b = goog.moduleLoaderState_;\r\n                    try {\r\n                        goog.moduleLoaderState_ = { moduleName: void 0, declareLegacyNamespace: !1 };\r\n                        var c;\r\n                        if (goog.isFunction(a))\r\n                            c = a.call(goog.global, {});\r\n                        else if (goog.isString(a))\r\n                            c = goog.loadModuleFromSource_.call(goog.global, a);\r\n                        else\r\n                            throw Error(\"Invalid module definition\");\r\n                        var d = goog.moduleLoaderState_.moduleName;\r\n                        if (!goog.isString(d) || !d)\r\n                            throw Error(\"Invalid module name \\\"\" + d + \"\\\"\");\r\n                        goog.moduleLoaderState_.declareLegacyNamespace ? goog.constructNamespace_(d, c) : goog.SEAL_MODULE_EXPORTS && Object.seal && Object.seal(c);\r\n                        goog.loadedModules_[d] = c;\r\n                    }\r\n                    finally {\r\n                        goog.moduleLoaderState_ = b;\r\n                    }\r\n                }, goog.loadModuleFromSource_ = function (a) {\r\n                    //eval(a);\r\n                    console.log(\"eval(a) need open\");\r\n                    return {};\r\n                }, goog.writeScriptSrcNode_ = function (a) {\r\n                    goog.global.document.write(\"<script type=\\\"text/javascript\\\" src=\\\"\" + a + \"\\\">\\x3c/script>\");\r\n                }, goog.appendScriptSrcNode_ = function (a) {\r\n                    var b = goog.global.document, c = b.createElement(\"script\");\r\n                    c.type = \"text/javascript\";\r\n                    c.src = a;\r\n                    c.defer = !1;\r\n                    c.async = !1;\r\n                    b.head.appendChild(c);\r\n                }, goog.writeScriptTag_ = function (a, b) {\r\n                    if (goog.inHtmlDocument_()) {\r\n                        var c = goog.global.document;\r\n                        if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && \"complete\" == c.readyState) {\r\n                            if (/\\bdeps.js$/.test(a))\r\n                                return !1;\r\n                            throw Error(\"Cannot write \\\"\" + a + \"\\\" after document load\");\r\n                        }\r\n                        var d = goog.IS_OLD_IE_;\r\n                        void 0 === b ? d ? (d = \" onreadystatechange='goog.onScriptLoad_(this, \" + ++goog.lastNonModuleScriptIndex_ + \")' \", c.write(\"<script type=\\\"text/javascript\\\" src=\\\"\" +\r\n                            a + \"\\\"\" + d + \">\\x3c/script>\")) : goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING ? goog.appendScriptSrcNode_(a) : goog.writeScriptSrcNode_(a) : c.write(\"<script type=\\\"text/javascript\\\">\" + b + \"\\x3c/script>\");\r\n                        return !0;\r\n                    }\r\n                    return !1;\r\n                }, goog.lastNonModuleScriptIndex_ = 0, goog.onScriptLoad_ = function (a, b) {\r\n                    \"complete\" == a.readyState && goog.lastNonModuleScriptIndex_ == b && goog.loadQueuedModules_();\r\n                    return !0;\r\n                }, goog.writeScripts_ = function (a) {\r\n                    function b(a) {\r\n                        if (!(a in e.written || a in e.visited)) {\r\n                            e.visited[a] = !0;\r\n                            if (a in e._requires)\r\n                                for (var f in e._requires[a])\r\n                                    if (!goog.isProvided_(f))\r\n                                        if (f in\r\n                                            e.nameToPath)\r\n                                            b(e.nameToPath[f]);\r\n                                        else\r\n                                            throw Error(\"Undefined nameToPath for \" + f);\r\n                            a in d || (d[a] = !0, c.push(a));\r\n                        }\r\n                    }\r\n                    var c = [], d = {}, e = goog.dependencies_;\r\n                    b(a);\r\n                    for (a = 0; a < c.length; a++) {\r\n                        var f = c[a];\r\n                        goog.dependencies_.written[f] = !0;\r\n                    }\r\n                    var g = goog.moduleLoaderState_;\r\n                    goog.moduleLoaderState_ = null;\r\n                    for (a = 0; a < c.length; a++)\r\n                        if (f = c[a])\r\n                            e.pathIsModule[f] ? goog.importModule_(goog.basePath + f) : goog.importScript_(goog.basePath + f);\r\n                        else\r\n                            throw goog.moduleLoaderState_ = g, Error(\"Undefined script input\");\r\n                    goog.moduleLoaderState_ = g;\r\n                }, goog.getPathFromDeps_ =\r\n                    function (a) {\r\n                        return a in goog.dependencies_.nameToPath ? goog.dependencies_.nameToPath[a] : null;\r\n                    }, goog.findBasePath_(), goog.global.CLOSURE_NO_DEPS || goog.importScript_(goog.basePath + \"deps.js\"));\r\n                goog.normalizePath_ = function (a) {\r\n                    a = a.split(\"/\");\r\n                    for (var b = 0; b < a.length;)\r\n                        \".\" == a[b] ? a.splice(b, 1) : b && \"..\" == a[b] && a[b - 1] && \"..\" != a[b - 1] ? a.splice(--b, 2) : b++;\r\n                    return a.join(\"/\");\r\n                };\r\n                goog.loadFileSync_ = function (a) {\r\n                    if (goog.global.CLOSURE_LOAD_FILE_SYNC)\r\n                        return goog.global.CLOSURE_LOAD_FILE_SYNC(a);\r\n                    var b = new goog.global.XMLHttpRequest;\r\n                    b.open(\"get\", a, !1);\r\n                    b.send();\r\n                    return b.responseText;\r\n                };\r\n                goog.retrieveAndExecModule_ = function (a) {\r\n                    if (!COMPILED) {\r\n                        var b = a;\r\n                        a = goog.normalizePath_(a);\r\n                        var c = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_, d = goog.loadFileSync_(a);\r\n                        if (null != d)\r\n                            d = goog.wrapModule_(a, d), goog.IS_OLD_IE_ ? (goog.dependencies_.deferred[b] = d, goog.queuedModules_.push(b)) : c(a, d);\r\n                        else\r\n                            throw Error(\"load of \" + a + \"failed\");\r\n                    }\r\n                };\r\n                goog.typeOf = function (a) {\r\n                    var b = typeof a;\r\n                    if (\"object\" == b)\r\n                        if (a) {\r\n                            if (a instanceof Array)\r\n                                return \"array\";\r\n                            if (a instanceof Object)\r\n                                return b;\r\n                            var c = Object.prototype.toString.call(a);\r\n                            if (\"[object Window]\" == c)\r\n                                return \"object\";\r\n                            if (\"[object Array]\" == c || \"number\" == typeof a.length && \"undefined\" != typeof a.splice && \"undefined\" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable(\"splice\"))\r\n                                return \"array\";\r\n                            if (\"[object Function]\" == c || \"undefined\" != typeof a.call && \"undefined\" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable(\"call\"))\r\n                                return \"function\";\r\n                        }\r\n                        else\r\n                            return \"null\";\r\n                    else if (\"function\" == b && \"undefined\" == typeof a.call)\r\n                        return \"object\";\r\n                    return b;\r\n                };\r\n                goog.isNull = function (a) {\r\n                    return null === a;\r\n                };\r\n                goog.isDefAndNotNull = function (a) {\r\n                    return null != a;\r\n                };\r\n                goog.isArray = function (a) {\r\n                    return \"array\" == goog.typeOf(a);\r\n                };\r\n                goog.isArrayLike = function (a) {\r\n                    var b = goog.typeOf(a);\r\n                    return \"array\" == b || \"object\" == b && \"number\" == typeof a.length;\r\n                };\r\n                goog.isDateLike = function (a) {\r\n                    return goog.isObject(a) && \"function\" == typeof a.getFullYear;\r\n                };\r\n                goog.isString = function (a) {\r\n                    return \"string\" == typeof a;\r\n                };\r\n                goog.isBoolean = function (a) {\r\n                    return \"boolean\" == typeof a;\r\n                };\r\n                goog.isNumber = function (a) {\r\n                    return \"number\" == typeof a;\r\n                };\r\n                goog.isFunction = function (a) {\r\n                    return \"function\" == goog.typeOf(a);\r\n                };\r\n                goog.isObject = function (a) {\r\n                    var b = typeof a;\r\n                    return \"object\" == b && null != a || \"function\" == b;\r\n                };\r\n                goog.getUid = function (a) {\r\n                    return a[goog.UID_PROPERTY_] || (a[goog.UID_PROPERTY_] = ++goog.uidCounter_);\r\n                };\r\n                goog.hasUid = function (a) {\r\n                    return !!a[goog.UID_PROPERTY_];\r\n                };\r\n                goog.removeUid = function (a) {\r\n                    null !== a && \"removeAttribute\" in a && a.removeAttribute(goog.UID_PROPERTY_);\r\n                    try {\r\n                        delete a[goog.UID_PROPERTY_];\r\n                    }\r\n                    catch (b) {\r\n                    }\r\n                };\r\n                goog.UID_PROPERTY_ = \"closure_uid_\" + (1E9 * Math.random() >>> 0);\r\n                goog.uidCounter_ = 0;\r\n                goog.getHashCode = goog.getUid;\r\n                goog.removeHashCode = goog.removeUid;\r\n                goog.cloneObject = function (a) {\r\n                    var b = goog.typeOf(a);\r\n                    if (\"object\" == b || \"array\" == b) {\r\n                        if (a.clone)\r\n                            return a.clone();\r\n                        var b = \"array\" == b ? [] : {}, c;\r\n                        for (c in a)\r\n                            b[c] = goog.cloneObject(a[c]);\r\n                        return b;\r\n                    }\r\n                    return a;\r\n                };\r\n                goog.bindNative_ = function (a, b, c) {\r\n                    return a.call.apply(a.bind, arguments);\r\n                };\r\n                goog.bindJs_ = function (a, b, c) {\r\n                    if (!a)\r\n                        throw Error();\r\n                    if (2 < arguments.length) {\r\n                        var d = Array.prototype.slice.call(arguments, 2);\r\n                        return function () {\r\n                            var c = Array.prototype.slice.call(arguments);\r\n                            Array.prototype.unshift.apply(c, d);\r\n                            return a.apply(b, c);\r\n                        };\r\n                    }\r\n                    return function () {\r\n                        return a.apply(b, arguments);\r\n                    };\r\n                };\r\n                goog.bind = function (a, b, c) {\r\n                    Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf(\"native code\") ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_;\r\n                    return goog.bind.apply(null, arguments);\r\n                };\r\n                goog.partial = function (a, b) {\r\n                    var c = Array.prototype.slice.call(arguments, 1);\r\n                    return function () {\r\n                        var b = c.slice();\r\n                        b.push.apply(b, arguments);\r\n                        return a.apply(this, b);\r\n                    };\r\n                };\r\n                goog.mixin = function (a, b) {\r\n                    for (var c in b)\r\n                        a[c] = b[c];\r\n                };\r\n                goog.now = goog.TRUSTED_SITE && Date.now || function () {\r\n                    return +new Date;\r\n                };\r\n                goog.globalEval = function (a) {\r\n                    if (goog.global.execScript)\r\n                        goog.global.execScript(a, \"JavaScript\");\r\n                    else if (goog.global.eval) {\r\n                        if (null == goog.evalWorksForGlobals_)\r\n                            if (goog.global.eval(\"var _evalTest_ = 1;\"), \"undefined\" != typeof goog.global._evalTest_) {\r\n                                try {\r\n                                    delete goog.global._evalTest_;\r\n                                }\r\n                                catch (d) {\r\n                                }\r\n                                goog.evalWorksForGlobals_ = !0;\r\n                            }\r\n                            else\r\n                                goog.evalWorksForGlobals_ = !1;\r\n                        if (goog.evalWorksForGlobals_)\r\n                            goog.global.eval(a);\r\n                        else {\r\n                            var b = goog.global.document, c = b.createElement(\"SCRIPT\");\r\n                            c.type = \"text/javascript\";\r\n                            c.defer = !1;\r\n                            c.appendChild(b.createTextNode(a));\r\n                            b.body.appendChild(c);\r\n                            b.body.removeChild(c);\r\n                        }\r\n                    }\r\n                    else\r\n                        throw Error(\"goog.globalEval not available\");\r\n                };\r\n                goog.evalWorksForGlobals_ = null;\r\n                goog.getCssName = function (a, b) {\r\n                    var c = function (a) {\r\n                        return goog.cssNameMapping_[a] || a;\r\n                    }, d = function (a) {\r\n                        a = a.split(\"-\");\r\n                        for (var b = [], d = 0; d < a.length; d++)\r\n                            b.push(c(a[d]));\r\n                        return b.join(\"-\");\r\n                    }, d = goog.cssNameMapping_ ? \"BY_WHOLE\" == goog.cssNameMappingStyle_ ? c : d : function (a) {\r\n                        return a;\r\n                    };\r\n                    return b ? a + \"-\" + d(b) : d(a);\r\n                };\r\n                goog.setCssNameMapping = function (a, b) {\r\n                    goog.cssNameMapping_ = a;\r\n                    goog.cssNameMappingStyle_ = b;\r\n                };\r\n                !COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING && (goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING);\r\n                goog.getMsg = function (a, b) {\r\n                    b && (a = a.replace(/\\{\\$([^}]+)}/g, function (a, d) {\r\n                        return null != b && d in b ? b[d] : a;\r\n                    }));\r\n                    return a;\r\n                };\r\n                goog.getMsgWithFallback = function (a, b) {\r\n                    return a;\r\n                };\r\n                goog.exportSymbol = function (a, b, c) {\r\n                    goog.exportPath_(a, b, c);\r\n                };\r\n                goog.exportProperty = function (a, b, c) {\r\n                    a[b] = c;\r\n                };\r\n                goog.inherits = function (a, b) {\r\n                    function c() {\r\n                    }\r\n                    c.prototype = b.prototype;\r\n                    a.superClass_ = b.prototype;\r\n                    a.prototype = new c;\r\n                    a.prototype.constructor = a;\r\n                    a.base = function (a, c, f) {\r\n                        for (var g = Array(arguments.length - 2), h = 2; h < arguments.length; h++)\r\n                            g[h - 2] = arguments[h];\r\n                        return b.prototype[c].apply(a, g);\r\n                    };\r\n                };\r\n                goog.base = function (a, b, c) {\r\n                    var d = arguments.callee.caller;\r\n                    if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !d)\r\n                        throw Error(\"arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C\");\r\n                    if (d.superClass_) {\r\n                        for (var e = Array(arguments.length - 1), f = 1; f < arguments.length; f++)\r\n                            e[f - 1] = arguments[f];\r\n                        return d.superClass_.constructor.apply(a, e);\r\n                    }\r\n                    e = Array(arguments.length - 2);\r\n                    for (f = 2; f < arguments.length; f++)\r\n                        e[f - 2] = arguments[f];\r\n                    for (var f = !1, g = a.constructor; g; g =\r\n                        g.superClass_ && g.superClass_.constructor)\r\n                        if (g.prototype[b] === d)\r\n                            f = !0;\r\n                        else if (f)\r\n                            return g.prototype[b].apply(a, e);\r\n                    if (a[b] === d)\r\n                        return a.constructor.prototype[b].apply(a, e);\r\n                    throw Error(\"goog.base called from a method of one name to a method of a different name\");\r\n                };\r\n                goog.scope = function (a) {\r\n                    a.call(goog.global);\r\n                };\r\n                COMPILED || (goog.global.COMPILED = COMPILED);\r\n                goog.defineClass = function (a, b) {\r\n                    var c = b.constructor, d = b.statics;\r\n                    c && c != Object.prototype.constructor || (c = function () {\r\n                        throw Error(\"cannot instantiate an interface (no constructor defined).\");\r\n                    });\r\n                    c = goog.defineClass.createSealingConstructor_(c, a);\r\n                    a && goog.inherits(c, a);\r\n                    delete b.constructor;\r\n                    delete b.statics;\r\n                    goog.defineClass.applyProperties_(c.prototype, b);\r\n                    null != d && (d instanceof Function ? d(c) : goog.defineClass.applyProperties_(c, d));\r\n                    return c;\r\n                };\r\n                goog.defineClass.SEAL_CLASS_INSTANCES = goog.DEBUG;\r\n                goog.defineClass.createSealingConstructor_ = function (a, b) {\r\n                    if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {\r\n                        if (b && b.prototype && b.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_])\r\n                            return a;\r\n                        var c = function () {\r\n                            var b = a.apply(this, arguments) || this;\r\n                            b[goog.UID_PROPERTY_] = b[goog.UID_PROPERTY_];\r\n                            this.constructor === c && Object.seal(b);\r\n                            return b;\r\n                        };\r\n                        return c;\r\n                    }\r\n                    return a;\r\n                };\r\n                goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = \"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\r\n                goog.defineClass.applyProperties_ = function (a, b) {\r\n                    for (var c in b)\r\n                        Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);\r\n                    for (var d = 0; d < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; d++)\r\n                        c = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d], Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);\r\n                };\r\n                goog.tagUnsealableClass = function (a) {\r\n                    !COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES && (a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = !0);\r\n                };\r\n                goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = \"goog_defineClass_legacy_unsealable\";\r\n                goog.dom = {};\r\n                goog.dom.NodeType = {\r\n                    ELEMENT: 1,\r\n                    ATTRIBUTE: 2,\r\n                    TEXT: 3,\r\n                    CDATA_SECTION: 4,\r\n                    ENTITY_REFERENCE: 5,\r\n                    ENTITY: 6,\r\n                    PROCESSING_INSTRUCTION: 7,\r\n                    COMMENT: 8,\r\n                    DOCUMENT: 9,\r\n                    DOCUMENT_TYPE: 10,\r\n                    DOCUMENT_FRAGMENT: 11,\r\n                    NOTATION: 12\r\n                };\r\n                goog.debug = {};\r\n                goog.debug.Error = function (a) {\r\n                    if (Error.captureStackTrace)\r\n                        Error.captureStackTrace(this, goog.debug.Error);\r\n                    else {\r\n                        var b = Error().stack;\r\n                        b && (this.stack = b);\r\n                    }\r\n                    a && (this.message = String(a));\r\n                    this.reportErrorToServer = !0;\r\n                };\r\n                goog.inherits(goog.debug.Error, Error);\r\n                goog.debug.Error.prototype.name = \"CustomError\";\r\n                goog.string = {};\r\n                goog.string.DETECT_DOUBLE_ESCAPING = !1;\r\n                goog.string.FORCE_NON_DOM_HTML_UNESCAPING = !1;\r\n                goog.string.Unicode = { NBSP: \"\\u00a0\" };\r\n                goog.string.startsWith = function (a, b) {\r\n                    return 0 == a.lastIndexOf(b, 0);\r\n                };\r\n                goog.string.endsWith = function (a, b) {\r\n                    var c = a.length - b.length;\r\n                    return 0 <= c && a.indexOf(b, c) == c;\r\n                };\r\n                goog.string.caseInsensitiveStartsWith = function (a, b) {\r\n                    return 0 == goog.string.caseInsensitiveCompare(b, a.substr(0, b.length));\r\n                };\r\n                goog.string.caseInsensitiveEndsWith = function (a, b) {\r\n                    return 0 == goog.string.caseInsensitiveCompare(b, a.substr(a.length - b.length, b.length));\r\n                };\r\n                goog.string.caseInsensitiveEquals = function (a, b) {\r\n                    return a.toLowerCase() == b.toLowerCase();\r\n                };\r\n                goog.string.subs = function (a, b) {\r\n                    for (var c = a.split(\"%s\"), d = \"\", e = Array.prototype.slice.call(arguments, 1); e.length && 1 < c.length;)\r\n                        d += c.shift() + e.shift();\r\n                    return d + c.join(\"%s\");\r\n                };\r\n                goog.string.collapseWhitespace = function (a) {\r\n                    return a.replace(/[\\s\\xa0]+/g, \" \").replace(/^\\s+|\\s+$/g, \"\");\r\n                };\r\n                goog.string.isEmptyOrWhitespace = function (a) {\r\n                    return /^[\\s\\xa0]*$/.test(a);\r\n                };\r\n                goog.string.isEmptyString = function (a) {\r\n                    return 0 == a.length;\r\n                };\r\n                goog.string.isEmpty = goog.string.isEmptyOrWhitespace;\r\n                goog.string.isEmptyOrWhitespaceSafe = function (a) {\r\n                    return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a));\r\n                };\r\n                goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;\r\n                goog.string.isBreakingWhitespace = function (a) {\r\n                    return !/[^\\t\\n\\r ]/.test(a);\r\n                };\r\n                goog.string.isAlpha = function (a) {\r\n                    return !/[^a-zA-Z]/.test(a);\r\n                };\r\n                goog.string.isNumeric = function (a) {\r\n                    return !/[^0-9]/.test(a);\r\n                };\r\n                goog.string.isAlphaNumeric = function (a) {\r\n                    return !/[^a-zA-Z0-9]/.test(a);\r\n                };\r\n                goog.string.isSpace = function (a) {\r\n                    return \" \" == a;\r\n                };\r\n                goog.string.isUnicodeChar = function (a) {\r\n                    return 1 == a.length && \" \" <= a && \"~\" >= a || \"\\u0080\" <= a && \"\\ufffd\" >= a;\r\n                };\r\n                goog.string.stripNewlines = function (a) {\r\n                    return a.replace(/(\\r\\n|\\r|\\n)+/g, \" \");\r\n                };\r\n                goog.string.canonicalizeNewlines = function (a) {\r\n                    return a.replace(/(\\r\\n|\\r|\\n)/g, \"\\n\");\r\n                };\r\n                goog.string.normalizeWhitespace = function (a) {\r\n                    return a.replace(/\\xa0|\\s/g, \" \");\r\n                };\r\n                goog.string.normalizeSpaces = function (a) {\r\n                    return a.replace(/\\xa0|[ \\t]+/g, \" \");\r\n                };\r\n                goog.string.collapseBreakingSpaces = function (a) {\r\n                    return a.replace(/[\\t\\r\\n ]+/g, \" \").replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, \"\");\r\n                };\r\n                goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function (a) {\r\n                    return a.trim();\r\n                } : function (a) {\r\n                    return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, \"\");\r\n                };\r\n                goog.string.trimLeft = function (a) {\r\n                    return a.replace(/^[\\s\\xa0]+/, \"\");\r\n                };\r\n                goog.string.trimRight = function (a) {\r\n                    return a.replace(/[\\s\\xa0]+$/, \"\");\r\n                };\r\n                goog.string.caseInsensitiveCompare = function (a, b) {\r\n                    var c = String(a).toLowerCase(), d = String(b).toLowerCase();\r\n                    return c < d ? -1 : c == d ? 0 : 1;\r\n                };\r\n                goog.string.numberAwareCompare_ = function (a, b, c) {\r\n                    if (a == b)\r\n                        return 0;\r\n                    if (!a)\r\n                        return -1;\r\n                    if (!b)\r\n                        return 1;\r\n                    for (var d = a.toLowerCase().match(c), e = b.toLowerCase().match(c), f = Math.min(d.length, e.length), g = 0; g < f; g++) {\r\n                        c = d[g];\r\n                        var h = e[g];\r\n                        if (c != h)\r\n                            return a = parseInt(c, 10), !isNaN(a) && (b = parseInt(h, 10), !isNaN(b) && a - b) ? a - b : c < h ? -1 : 1;\r\n                    }\r\n                    return d.length != e.length ? d.length - e.length : a < b ? -1 : 1;\r\n                };\r\n                goog.string.intAwareCompare = function (a, b) {\r\n                    return goog.string.numberAwareCompare_(a, b, /\\d+|\\D+/g);\r\n                };\r\n                goog.string.floatAwareCompare = function (a, b) {\r\n                    return goog.string.numberAwareCompare_(a, b, /\\d+|\\.\\d+|\\D+/g);\r\n                };\r\n                goog.string.numerateCompare = goog.string.floatAwareCompare;\r\n                goog.string.urlEncode = function (a) {\r\n                    return encodeURIComponent(String(a));\r\n                };\r\n                goog.string.urlDecode = function (a) {\r\n                    return decodeURIComponent(a.replace(/\\+/g, \" \"));\r\n                };\r\n                goog.string.newLineToBr = function (a, b) {\r\n                    return a.replace(/(\\r\\n|\\r|\\n)/g, b ? \"<br />\" : \"<br>\");\r\n                };\r\n                goog.string.htmlEscape = function (a, b) {\r\n                    if (b)\r\n                        a = a.replace(goog.string.AMP_RE_, \"&amp;\").replace(goog.string.LT_RE_, \"&lt;\").replace(goog.string.GT_RE_, \"&gt;\").replace(goog.string.QUOT_RE_, \"&quot;\").replace(goog.string.SINGLE_QUOTE_RE_, \"&#39;\").replace(goog.string.NULL_RE_, \"&#0;\"), goog.string.DETECT_DOUBLE_ESCAPING && (a = a.replace(goog.string.E_RE_, \"&#101;\"));\r\n                    else {\r\n                        if (!goog.string.ALL_RE_.test(a))\r\n                            return a;\r\n                        -1 != a.indexOf(\"&\") && (a = a.replace(goog.string.AMP_RE_, \"&amp;\"));\r\n                        -1 != a.indexOf(\"<\") && (a = a.replace(goog.string.LT_RE_, \"&lt;\"));\r\n                        -1 != a.indexOf(\">\") && (a = a.replace(goog.string.GT_RE_, \"&gt;\"));\r\n                        -1 != a.indexOf(\"\\\"\") && (a = a.replace(goog.string.QUOT_RE_, \"&quot;\"));\r\n                        -1 != a.indexOf(\"'\") && (a = a.replace(goog.string.SINGLE_QUOTE_RE_, \"&#39;\"));\r\n                        -1 != a.indexOf(\"\\x00\") && (a = a.replace(goog.string.NULL_RE_, \"&#0;\"));\r\n                        goog.string.DETECT_DOUBLE_ESCAPING && -1 != a.indexOf(\"e\") && (a = a.replace(goog.string.E_RE_, \"&#101;\"));\r\n                    }\r\n                    return a;\r\n                };\r\n                goog.string.AMP_RE_ = /&/g;\r\n                goog.string.LT_RE_ = /</g;\r\n                goog.string.GT_RE_ = />/g;\r\n                goog.string.QUOT_RE_ = /\"/g;\r\n                goog.string.SINGLE_QUOTE_RE_ = /'/g;\r\n                goog.string.NULL_RE_ = /\\x00/g;\r\n                goog.string.E_RE_ = /e/g;\r\n                goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\\x00&<>\"'e]/ : /[\\x00&<>\"']/;\r\n                goog.string.unescapeEntities = function (a) {\r\n                    return goog.string.contains(a, \"&\") ? !goog.string.FORCE_NON_DOM_HTML_UNESCAPING && \"document\" in goog.global ? goog.string.unescapeEntitiesUsingDom_(a) : goog.string.unescapePureXmlEntities_(a) : a;\r\n                };\r\n                goog.string.unescapeEntitiesWithDocument = function (a, b) {\r\n                    return goog.string.contains(a, \"&\") ? goog.string.unescapeEntitiesUsingDom_(a, b) : a;\r\n                };\r\n                goog.string.unescapeEntitiesUsingDom_ = function (a, b) {\r\n                    var c = { \"&amp;\": \"&\", \"&lt;\": \"<\", \"&gt;\": \">\", \"&quot;\": \"\\\"\" }, d;\r\n                    d = b ? b.createElement(\"div\") : goog.global.document.createElement(\"div\");\r\n                    return a.replace(goog.string.HTML_ENTITY_PATTERN_, function (a, b) {\r\n                        var g = c[a];\r\n                        if (g)\r\n                            return g;\r\n                        if (\"#\" == b.charAt(0)) {\r\n                            var h = Number(\"0\" + b.substr(1));\r\n                            isNaN(h) || (g = String.fromCharCode(h));\r\n                        }\r\n                        g || (d.innerHTML = a + \" \", g = d.firstChild.nodeValue.slice(0, -1));\r\n                        return c[a] = g;\r\n                    });\r\n                };\r\n                goog.string.unescapePureXmlEntities_ = function (a) {\r\n                    return a.replace(/&([^;]+);/g, function (a, c) {\r\n                        switch (c) {\r\n                            case \"amp\":\r\n                                return \"&\";\r\n                            case \"lt\":\r\n                                return \"<\";\r\n                            case \"gt\":\r\n                                return \">\";\r\n                            case \"quot\":\r\n                                return \"\\\"\";\r\n                            default:\r\n                                if (\"#\" == c.charAt(0)) {\r\n                                    var d = Number(\"0\" + c.substr(1));\r\n                                    if (!isNaN(d))\r\n                                        return String.fromCharCode(d);\r\n                                }\r\n                                return a;\r\n                        }\r\n                    });\r\n                };\r\n                goog.string.HTML_ENTITY_PATTERN_ = /&([^;\\s<&]+);?/g;\r\n                goog.string.whitespaceEscape = function (a, b) {\r\n                    return goog.string.newLineToBr(a.replace(/ {2}/g, \" &#160;\"), b);\r\n                };\r\n                goog.string.preserveSpaces = function (a) {\r\n                    return a.replace(/(^|[\\n ]) /g, \"$1\" + goog.string.Unicode.NBSP);\r\n                };\r\n                goog.string.stripQuotes = function (a, b) {\r\n                    for (var c = b.length, d = 0; d < c; d++) {\r\n                        var e = 1 == c ? b : b.charAt(d);\r\n                        if (a.charAt(0) == e && a.charAt(a.length - 1) == e)\r\n                            return a.substring(1, a.length - 1);\r\n                    }\r\n                    return a;\r\n                };\r\n                goog.string.truncate = function (a, b, c) {\r\n                    c && (a = goog.string.unescapeEntities(a));\r\n                    a.length > b && (a = a.substring(0, b - 3) + \"...\");\r\n                    c && (a = goog.string.htmlEscape(a));\r\n                    return a;\r\n                };\r\n                goog.string.truncateMiddle = function (a, b, c, d) {\r\n                    c && (a = goog.string.unescapeEntities(a));\r\n                    if (d && a.length > b) {\r\n                        d > b && (d = b);\r\n                        var e = a.length - d;\r\n                        a = a.substring(0, b - d) + \"...\" + a.substring(e);\r\n                    }\r\n                    else\r\n                        a.length > b && (d = Math.floor(b / 2), e = a.length - d, a = a.substring(0, d + b % 2) + \"...\" + a.substring(e));\r\n                    c && (a = goog.string.htmlEscape(a));\r\n                    return a;\r\n                };\r\n                goog.string.specialEscapeChars_ = {\r\n                    \"\\x00\": \"\\\\0\",\r\n                    \"\\b\": \"\\\\b\",\r\n                    \"\\f\": \"\\\\f\",\r\n                    \"\\n\": \"\\\\n\",\r\n                    \"\\r\": \"\\\\r\",\r\n                    \"\\t\": \"\\\\t\",\r\n                    \"\\x0B\": \"\\\\x0B\",\r\n                    \"\\\"\": \"\\\\\\\"\",\r\n                    \"\\\\\": \"\\\\\\\\\",\r\n                    \"<\": \"<\"\r\n                };\r\n                goog.string.jsEscapeCache_ = { \"'\": \"\\\\'\" };\r\n                goog.string.quote = function (a) {\r\n                    a = String(a);\r\n                    for (var b = [\"\\\"\"], c = 0; c < a.length; c++) {\r\n                        var d = a.charAt(c), e = d.charCodeAt(0);\r\n                        b[c + 1] = goog.string.specialEscapeChars_[d] || (31 < e && 127 > e ? d : goog.string.escapeChar(d));\r\n                    }\r\n                    b.push(\"\\\"\");\r\n                    return b.join(\"\");\r\n                };\r\n                goog.string.escapeString = function (a) {\r\n                    for (var b = [], c = 0; c < a.length; c++)\r\n                        b[c] = goog.string.escapeChar(a.charAt(c));\r\n                    return b.join(\"\");\r\n                };\r\n                goog.string.escapeChar = function (a) {\r\n                    if (a in goog.string.jsEscapeCache_)\r\n                        return goog.string.jsEscapeCache_[a];\r\n                    if (a in goog.string.specialEscapeChars_)\r\n                        return goog.string.jsEscapeCache_[a] = goog.string.specialEscapeChars_[a];\r\n                    var b, c = a.charCodeAt(0);\r\n                    if (31 < c && 127 > c)\r\n                        b = a;\r\n                    else {\r\n                        if (256 > c) {\r\n                            if (b = \"\\\\x\", 16 > c || 256 < c)\r\n                                b += \"0\";\r\n                        }\r\n                        else\r\n                            b = \"\\\\u\", 4096 > c && (b += \"0\");\r\n                        b += c.toString(16).toUpperCase();\r\n                    }\r\n                    return goog.string.jsEscapeCache_[a] = b;\r\n                };\r\n                goog.string.contains = function (a, b) {\r\n                    return -1 != a.indexOf(b);\r\n                };\r\n                goog.string.caseInsensitiveContains = function (a, b) {\r\n                    return goog.string.contains(a.toLowerCase(), b.toLowerCase());\r\n                };\r\n                goog.string.countOf = function (a, b) {\r\n                    return a && b ? a.split(b).length - 1 : 0;\r\n                };\r\n                goog.string.removeAt = function (a, b, c) {\r\n                    var d = a;\r\n                    0 <= b && b < a.length && 0 < c && (d = a.substr(0, b) + a.substr(b + c, a.length - b - c));\r\n                    return d;\r\n                };\r\n                goog.string.remove = function (a, b) {\r\n                    var c = new RegExp(goog.string.regExpEscape(b), \"\");\r\n                    return a.replace(c, \"\");\r\n                };\r\n                goog.string.removeAll = function (a, b) {\r\n                    var c = new RegExp(goog.string.regExpEscape(b), \"g\");\r\n                    return a.replace(c, \"\");\r\n                };\r\n                goog.string.regExpEscape = function (a) {\r\n                    return String(a).replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, \"\\\\$1\").replace(/\\x08/g, \"\\\\x08\");\r\n                };\r\n                goog.string.repeat = String.prototype.repeat ? function (a, b) {\r\n                    return a.repeat(b);\r\n                } : function (a, b) {\r\n                    return Array(b + 1).join(a);\r\n                };\r\n                goog.string.padNumber = function (a, b, c) {\r\n                    a = goog.isDef(c) ? a.toFixed(c) : String(a);\r\n                    c = a.indexOf(\".\");\r\n                    -1 == c && (c = a.length);\r\n                    return goog.string.repeat(\"0\", Math.max(0, b - c)) + a;\r\n                };\r\n                goog.string.makeSafe = function (a) {\r\n                    return null == a ? \"\" : String(a);\r\n                };\r\n                goog.string.buildString = function (a) {\r\n                    return Array.prototype.join.call(arguments, \"\");\r\n                };\r\n                goog.string.getRandomString = function () {\r\n                    return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ goog.now()).toString(36);\r\n                };\r\n                goog.string.compareVersions = function (a, b) {\r\n                    for (var c = 0, d = goog.string.trim(String(a)).split(\".\"), e = goog.string.trim(String(b)).split(\".\"), f = Math.max(d.length, e.length), g = 0; 0 == c && g < f; g++) {\r\n                        var h = d[g] || \"\", k = e[g] || \"\", l = RegExp(\"(\\\\d*)(\\\\D*)\", \"g\"), p = RegExp(\"(\\\\d*)(\\\\D*)\", \"g\");\r\n                        do {\r\n                            var m = l.exec(h) || [\"\", \"\", \"\"], n = p.exec(k) || [\"\", \"\", \"\"];\r\n                            if (0 == m[0].length && 0 == n[0].length)\r\n                                break;\r\n                            var c = 0 == m[1].length ? 0 : parseInt(m[1], 10), q = 0 == n[1].length ? 0 : parseInt(n[1], 10), c = goog.string.compareElements_(c, q) || goog.string.compareElements_(0 ==\r\n                                m[2].length, 0 == n[2].length) || goog.string.compareElements_(m[2], n[2]);\r\n                        } while (0 == c);\r\n                    }\r\n                    return c;\r\n                };\r\n                goog.string.compareElements_ = function (a, b) {\r\n                    return a < b ? -1 : a > b ? 1 : 0;\r\n                };\r\n                goog.string.hashCode = function (a) {\r\n                    for (var b = 0, c = 0; c < a.length; ++c)\r\n                        b = 31 * b + a.charCodeAt(c) >>> 0;\r\n                    return b;\r\n                };\r\n                goog.string.uniqueStringCounter_ = 2147483648 * Math.random() | 0;\r\n                goog.string.createUniqueString = function () {\r\n                    return \"goog_\" + goog.string.uniqueStringCounter_++;\r\n                };\r\n                goog.string.toNumber = function (a) {\r\n                    var b = Number(a);\r\n                    return 0 == b && goog.string.isEmptyOrWhitespace(a) ? NaN : b;\r\n                };\r\n                goog.string.isLowerCamelCase = function (a) {\r\n                    return /^[a-z]+([A-Z][a-z]*)*$/.test(a);\r\n                };\r\n                goog.string.isUpperCamelCase = function (a) {\r\n                    return /^([A-Z][a-z]*)+$/.test(a);\r\n                };\r\n                goog.string.toCamelCase = function (a) {\r\n                    return String(a).replace(/\\-([a-z])/g, function (a, c) {\r\n                        return c.toUpperCase();\r\n                    });\r\n                };\r\n                goog.string.toSelectorCase = function (a) {\r\n                    return String(a).replace(/([A-Z])/g, \"-$1\").toLowerCase();\r\n                };\r\n                goog.string.toTitleCase = function (a, b) {\r\n                    var c = goog.isString(b) ? goog.string.regExpEscape(b) : \"\\\\s\";\r\n                    return a.replace(new RegExp(\"(^\" + (c ? \"|[\" + c + \"]+\" : \"\") + \")([a-z])\", \"g\"), function (a, b, c) {\r\n                        return b + c.toUpperCase();\r\n                    });\r\n                };\r\n                goog.string.capitalize = function (a) {\r\n                    return String(a.charAt(0)).toUpperCase() + String(a.substr(1)).toLowerCase();\r\n                };\r\n                goog.string.parseInt = function (a) {\r\n                    isFinite(a) && (a = String(a));\r\n                    return goog.isString(a) ? /^\\s*-?0x/i.test(a) ? parseInt(a, 16) : parseInt(a, 10) : NaN;\r\n                };\r\n                goog.string.splitLimit = function (a, b, c) {\r\n                    a = a.split(b);\r\n                    for (var d = []; 0 < c && a.length;)\r\n                        d.push(a.shift()), c--;\r\n                    a.length && d.push(a.join(b));\r\n                    return d;\r\n                };\r\n                goog.string.editDistance = function (a, b) {\r\n                    var c = [], d = [];\r\n                    if (a == b)\r\n                        return 0;\r\n                    if (!a.length || !b.length)\r\n                        return Math.max(a.length, b.length);\r\n                    for (var e = 0; e < b.length + 1; e++)\r\n                        c[e] = e;\r\n                    for (e = 0; e < a.length; e++) {\r\n                        d[0] = e + 1;\r\n                        for (var f = 0; f < b.length; f++)\r\n                            d[f + 1] = Math.min(d[f] + 1, c[f + 1] + 1, c[f] + Number(a[e] != b[f]));\r\n                        for (f = 0; f < c.length; f++)\r\n                            c[f] = d[f];\r\n                    }\r\n                    return d[b.length];\r\n                };\r\n                goog.asserts = {};\r\n                goog.asserts.ENABLE_ASSERTS = goog.DEBUG;\r\n                goog.asserts.AssertionError = function (a, b) {\r\n                    b.unshift(a);\r\n                    goog.debug.Error.call(this, goog.string.subs.apply(null, b));\r\n                    b.shift();\r\n                    this.messagePattern = a;\r\n                };\r\n                goog.inherits(goog.asserts.AssertionError, goog.debug.Error);\r\n                goog.asserts.AssertionError.prototype.name = \"AssertionError\";\r\n                goog.asserts.DEFAULT_ERROR_HANDLER = function (a) {\r\n                    throw a;\r\n                };\r\n                goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;\r\n                goog.asserts.doAssertFailure_ = function (a, b, c, d) {\r\n                    var e = \"Assertion failed\";\r\n                    if (c)\r\n                        var e = e + (\": \" + c), f = d;\r\n                    else\r\n                        a && (e += \": \" + a, f = b);\r\n                    a = new goog.asserts.AssertionError(\"\" + e, f || []);\r\n                    goog.asserts.errorHandler_(a);\r\n                };\r\n                goog.asserts.setErrorHandler = function (a) {\r\n                    goog.asserts.ENABLE_ASSERTS && (goog.asserts.errorHandler_ = a);\r\n                };\r\n                goog.asserts.assert = function (a, b, c) {\r\n                    goog.asserts.ENABLE_ASSERTS && !a && goog.asserts.doAssertFailure_(\"\", null, b, Array.prototype.slice.call(arguments, 2));\r\n                    return a;\r\n                };\r\n                goog.asserts.fail = function (a, b) {\r\n                    goog.asserts.ENABLE_ASSERTS && goog.asserts.errorHandler_(new goog.asserts.AssertionError(\"Failure\" + (a ? \": \" + a : \"\"), Array.prototype.slice.call(arguments, 1)));\r\n                };\r\n                goog.asserts.assertNumber = function (a, b, c) {\r\n                    goog.asserts.ENABLE_ASSERTS && !goog.isNumber(a) && goog.asserts.doAssertFailure_(\"Expected number but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n                    return a;\r\n                };\r\n                goog.asserts.assertString = function (a, b, c) {\r\n                    goog.asserts.ENABLE_ASSERTS && !goog.isString(a) && goog.asserts.doAssertFailure_(\"Expected string but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n                    return a;\r\n                };\r\n                goog.asserts.assertFunction = function (a, b, c) {\r\n                    goog.asserts.ENABLE_ASSERTS && !goog.isFunction(a) && goog.asserts.doAssertFailure_(\"Expected function but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n                    return a;\r\n                };\r\n                goog.asserts.assertObject = function (a, b, c) {\r\n                    goog.asserts.ENABLE_ASSERTS && !goog.isObject(a) && goog.asserts.doAssertFailure_(\"Expected object but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n                    return a;\r\n                };\r\n                goog.asserts.assertArray = function (a, b, c) {\r\n                    goog.asserts.ENABLE_ASSERTS && !goog.isArray(a) && goog.asserts.doAssertFailure_(\"Expected array but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n                    return a;\r\n                };\r\n                goog.asserts.assertBoolean = function (a, b, c) {\r\n                    goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(a) && goog.asserts.doAssertFailure_(\"Expected boolean but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n                    return a;\r\n                };\r\n                goog.asserts.assertElement = function (a, b, c) {\r\n                    !goog.asserts.ENABLE_ASSERTS || goog.isObject(a) && a.nodeType == goog.dom.NodeType.ELEMENT || goog.asserts.doAssertFailure_(\"Expected Element but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n                    return a;\r\n                };\r\n                goog.asserts.assertInstanceof = function (a, b, c, d) {\r\n                    !goog.asserts.ENABLE_ASSERTS || a instanceof b || goog.asserts.doAssertFailure_(\"Expected instanceof %s but got %s.\", [goog.asserts.getType_(b), goog.asserts.getType_(a)], c, Array.prototype.slice.call(arguments, 3));\r\n                    return a;\r\n                };\r\n                goog.asserts.assertObjectPrototypeIsIntact = function () {\r\n                    for (var a in Object.prototype)\r\n                        goog.asserts.fail(a + \" should not be enumerable in Object.prototype.\");\r\n                };\r\n                goog.asserts.getType_ = function (a) {\r\n                    return a instanceof Function ? a.displayName || a.name || \"unknown type name\" : a instanceof Object ? a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a) : null === a ? \"null\" : typeof a;\r\n                };\r\n                var jspb = {\r\n                    Map: function (a, b) {\r\n                        this.arr_ = a;\r\n                        this.valueCtor_ = b;\r\n                        this.map_ = {};\r\n                        this.arrClean = !0;\r\n                        0 < this.arr_.length && this.loadFromArray_();\r\n                    }\r\n                };\r\n                jspb.Map.prototype.loadFromArray_ = function () {\r\n                    for (var a = 0; a < this.arr_.length; a++) {\r\n                        var b = this.arr_[a], c = b[0];\r\n                        this.map_[c.toString()] = new jspb.Map.Entry_(c, b[1]);\r\n                    }\r\n                    this.arrClean = !0;\r\n                };\r\n                jspb.Map.prototype.toArray = function () {\r\n                    if (this.arrClean) {\r\n                        if (this.valueCtor_) {\r\n                            var a = this.map_, b;\r\n                            for (b in a)\r\n                                if (Object.prototype.hasOwnProperty.call(a, b)) {\r\n                                    var c = a[b].valueWrapper;\r\n                                    c && c.toArray();\r\n                                }\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.arr_.length = 0;\r\n                        a = this.stringKeys_();\r\n                        a.sort();\r\n                        for (b = 0; b < a.length; b++) {\r\n                            var d = this.map_[a[b]];\r\n                            (c = d.valueWrapper) && c.toArray();\r\n                            this.arr_.push([d.key, d.value]);\r\n                        }\r\n                        this.arrClean = !0;\r\n                    }\r\n                    return this.arr_;\r\n                };\r\n                jspb.Map.prototype.toObject = function (a, b) {\r\n                    for (var c = this.toArray(), d = [], e = 0; e < c.length; e++) {\r\n                        var f = this.map_[c[e][0].toString()];\r\n                        this.wrapEntry_(f);\r\n                        var g = f.valueWrapper;\r\n                        g ? (goog.asserts.assert(b), d.push([f.key, b(a, g)])) : d.push([f.key, f.value]);\r\n                    }\r\n                    return d;\r\n                };\r\n                jspb.Map.fromObject = function (a, b, c) {\r\n                    b = new jspb.Map([], b);\r\n                    for (var d = 0; d < a.length; d++) {\r\n                        var e = a[d][0], f = c(a[d][1]);\r\n                        b.set(e, f);\r\n                    }\r\n                    return b;\r\n                };\r\n                jspb.Map.ArrayIteratorIterable_ = function (a) {\r\n                    this.idx_ = 0;\r\n                    this.arr_ = a;\r\n                };\r\n                jspb.Map.ArrayIteratorIterable_.prototype.next = function () {\r\n                    return this.idx_ < this.arr_.length ? { done: !1, value: this.arr_[this.idx_++] } : {\r\n                        done: !0,\r\n                        value: void 0\r\n                    };\r\n                };\r\n                $jscomp.initSymbol();\r\n                \"undefined\" != typeof Symbol && ($jscomp.initSymbol(), $jscomp.initSymbolIterator(), jspb.Map.ArrayIteratorIterable_.prototype[Symbol.iterator] = function () {\r\n                    return this;\r\n                });\r\n                jspb.Map.prototype.getLength = function () {\r\n                    return this.stringKeys_().length;\r\n                };\r\n                jspb.Map.prototype.clear = function () {\r\n                    this.map_ = {};\r\n                    this.arrClean = !1;\r\n                };\r\n                jspb.Map.prototype.del = function (a) {\r\n                    a = a.toString();\r\n                    var b = this.map_.hasOwnProperty(a);\r\n                    delete this.map_[a];\r\n                    this.arrClean = !1;\r\n                    return b;\r\n                };\r\n                jspb.Map.prototype.getEntryList = function () {\r\n                    var a = [], b = this.stringKeys_();\r\n                    b.sort();\r\n                    for (var c = 0; c < b.length; c++) {\r\n                        var d = this.map_[b[c]];\r\n                        a.push([d.key, d.value]);\r\n                    }\r\n                    return a;\r\n                };\r\n                jspb.Map.prototype.entries = function () {\r\n                    var a = [], b = this.stringKeys_();\r\n                    b.sort();\r\n                    for (var c = 0; c < b.length; c++) {\r\n                        var d = this.map_[b[c]];\r\n                        a.push([d.key, this.wrapEntry_(d)]);\r\n                    }\r\n                    return new jspb.Map.ArrayIteratorIterable_(a);\r\n                };\r\n                jspb.Map.prototype.keys = function () {\r\n                    var a = [], b = this.stringKeys_();\r\n                    b.sort();\r\n                    for (var c = 0; c < b.length; c++)\r\n                        a.push(this.map_[b[c]].key);\r\n                    return new jspb.Map.ArrayIteratorIterable_(a);\r\n                };\r\n                jspb.Map.prototype.values = function () {\r\n                    var a = [], b = this.stringKeys_();\r\n                    b.sort();\r\n                    for (var c = 0; c < b.length; c++)\r\n                        a.push(this.wrapEntry_(this.map_[b[c]]));\r\n                    return new jspb.Map.ArrayIteratorIterable_(a);\r\n                };\r\n                jspb.Map.prototype.forEach = function (a, b) {\r\n                    var c = this.stringKeys_();\r\n                    c.sort();\r\n                    for (var d = 0; d < c.length; d++) {\r\n                        var e = this.map_[c[d]];\r\n                        a.call(b, this.wrapEntry_(e), e.key, this);\r\n                    }\r\n                };\r\n                jspb.Map.prototype.set = function (a, b) {\r\n                    var c = new jspb.Map.Entry_(a);\r\n                    this.valueCtor_ ? (c.valueWrapper = b, c.value = b.toArray()) : c.value = b;\r\n                    this.map_[a.toString()] = c;\r\n                    this.arrClean = !1;\r\n                    return this;\r\n                };\r\n                jspb.Map.prototype.wrapEntry_ = function (a) {\r\n                    return this.valueCtor_ ? (a.valueWrapper || (a.valueWrapper = new this.valueCtor_(a.value)), a.valueWrapper) : a.value;\r\n                };\r\n                jspb.Map.prototype.get = function (a) {\r\n                    if (a = this.map_[a.toString()])\r\n                        return this.wrapEntry_(a);\r\n                };\r\n                jspb.Map.prototype.has = function (a) {\r\n                    return a.toString() in this.map_;\r\n                };\r\n                jspb.Map.prototype.serializeBinary = function (a, b, c, d, e) {\r\n                    var f = this.stringKeys_();\r\n                    f.sort();\r\n                    for (var g = 0; g < f.length; g++) {\r\n                        var h = this.map_[f[g]];\r\n                        b.beginSubMessage(a);\r\n                        c.call(b, 1, h.key);\r\n                        this.valueCtor_ ? d.call(b, 2, this.wrapEntry_(h), e) : d.call(b, 2, h.value);\r\n                        b.endSubMessage();\r\n                    }\r\n                };\r\n                jspb.Map.deserializeBinary = function (a, b, c, d, e) {\r\n                    for (var f = void 0, g = void 0; b.nextField() && !b.isEndGroup();) {\r\n                        var h = b.getFieldNumber();\r\n                        1 == h ? f = c.call(b) : 2 == h && (a.valueCtor_ ? (g = new a.valueCtor_, d.call(b, g, e)) : g = d.call(b));\r\n                    }\r\n                    goog.asserts.assert(void 0 != f);\r\n                    goog.asserts.assert(void 0 != g);\r\n                    a.set(f, g);\r\n                };\r\n                jspb.Map.prototype.stringKeys_ = function () {\r\n                    var a = this.map_, b = [], c;\r\n                    for (c in a)\r\n                        Object.prototype.hasOwnProperty.call(a, c) && b.push(c);\r\n                    return b;\r\n                };\r\n                jspb.Map.Entry_ = function (a, b) {\r\n                    this.key = a;\r\n                    this.value = b;\r\n                    this.valueWrapper = void 0;\r\n                };\r\n                goog.array = {};\r\n                goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;\r\n                goog.array.ASSUME_NATIVE_FUNCTIONS = !1;\r\n                goog.array.peek = function (a) {\r\n                    return a[a.length - 1];\r\n                };\r\n                goog.array.last = goog.array.peek;\r\n                goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function (a, b, c) {\r\n                    goog.asserts.assert(null != a.length);\r\n                    return Array.prototype.indexOf.call(a, b, c);\r\n                } : function (a, b, c) {\r\n                    c = null == c ? 0 : 0 > c ? Math.max(0, a.length + c) : c;\r\n                    if (goog.isString(a))\r\n                        return goog.isString(b) && 1 == b.length ? a.indexOf(b, c) : -1;\r\n                    for (; c < a.length; c++)\r\n                        if (c in a && a[c] === b)\r\n                            return c;\r\n                    return -1;\r\n                };\r\n                goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function (a, b, c) {\r\n                    goog.asserts.assert(null != a.length);\r\n                    return Array.prototype.lastIndexOf.call(a, b, null == c ? a.length - 1 : c);\r\n                } : function (a, b, c) {\r\n                    c = null == c ? a.length - 1 : c;\r\n                    0 > c && (c = Math.max(0, a.length + c));\r\n                    if (goog.isString(a))\r\n                        return goog.isString(b) && 1 == b.length ? a.lastIndexOf(b, c) : -1;\r\n                    for (; 0 <= c; c--)\r\n                        if (c in a && a[c] === b)\r\n                            return c;\r\n                    return -1;\r\n                };\r\n                goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function (a, b, c) {\r\n                    goog.asserts.assert(null != a.length);\r\n                    Array.prototype.forEach.call(a, b, c);\r\n                } : function (a, b, c) {\r\n                    for (var d = a.length, e = goog.isString(a) ? a.split(\"\") : a, f = 0; f < d; f++)\r\n                        f in e && b.call(c, e[f], f, a);\r\n                };\r\n                goog.array.forEachRight = function (a, b, c) {\r\n                    for (var d = a.length, e = goog.isString(a) ? a.split(\"\") : a, d = d - 1; 0 <= d; --d)\r\n                        d in e && b.call(c, e[d], d, a);\r\n                };\r\n                goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function (a, b, c) {\r\n                    goog.asserts.assert(null != a.length);\r\n                    return Array.prototype.filter.call(a, b, c);\r\n                } : function (a, b, c) {\r\n                    for (var d = a.length, e = [], f = 0, g = goog.isString(a) ? a.split(\"\") : a, h = 0; h < d; h++)\r\n                        if (h in g) {\r\n                            var k = g[h];\r\n                            b.call(c, k, h, a) && (e[f++] = k);\r\n                        }\r\n                    return e;\r\n                };\r\n                goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function (a, b, c) {\r\n                    goog.asserts.assert(null != a.length);\r\n                    return Array.prototype.map.call(a, b, c);\r\n                } : function (a, b, c) {\r\n                    for (var d = a.length, e = Array(d), f = goog.isString(a) ? a.split(\"\") : a, g = 0; g < d; g++)\r\n                        g in f && (e[g] = b.call(c, f[g], g, a));\r\n                    return e;\r\n                };\r\n                goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function (a, b, c, d) {\r\n                    goog.asserts.assert(null != a.length);\r\n                    d && (b = goog.bind(b, d));\r\n                    return Array.prototype.reduce.call(a, b, c);\r\n                } : function (a, b, c, d) {\r\n                    var e = c;\r\n                    goog.array.forEach(a, function (c, g) {\r\n                        e = b.call(d, e, c, g, a);\r\n                    });\r\n                    return e;\r\n                };\r\n                goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function (a, b, c, d) {\r\n                    goog.asserts.assert(null != a.length);\r\n                    goog.asserts.assert(null != b);\r\n                    d && (b = goog.bind(b, d));\r\n                    return Array.prototype.reduceRight.call(a, b, c);\r\n                } : function (a, b, c, d) {\r\n                    var e = c;\r\n                    goog.array.forEachRight(a, function (c, g) {\r\n                        e = b.call(d, e, c, g, a);\r\n                    });\r\n                    return e;\r\n                };\r\n                goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function (a, b, c) {\r\n                    goog.asserts.assert(null != a.length);\r\n                    return Array.prototype.some.call(a, b, c);\r\n                } : function (a, b, c) {\r\n                    for (var d = a.length, e = goog.isString(a) ? a.split(\"\") : a, f = 0; f < d; f++)\r\n                        if (f in e && b.call(c, e[f], f, a))\r\n                            return !0;\r\n                    return !1;\r\n                };\r\n                goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function (a, b, c) {\r\n                    goog.asserts.assert(null != a.length);\r\n                    return Array.prototype.every.call(a, b, c);\r\n                } : function (a, b, c) {\r\n                    for (var d = a.length, e = goog.isString(a) ? a.split(\"\") : a, f = 0; f < d; f++)\r\n                        if (f in e && !b.call(c, e[f], f, a))\r\n                            return !1;\r\n                    return !0;\r\n                };\r\n                goog.array.count = function (a, b, c) {\r\n                    var d = 0;\r\n                    goog.array.forEach(a, function (a, f, g) {\r\n                        b.call(c, a, f, g) && ++d;\r\n                    }, c);\r\n                    return d;\r\n                };\r\n                goog.array.find = function (a, b, c) {\r\n                    b = goog.array.findIndex(a, b, c);\r\n                    return 0 > b ? null : goog.isString(a) ? a.charAt(b) : a[b];\r\n                };\r\n                goog.array.findIndex = function (a, b, c) {\r\n                    for (var d = a.length, e = goog.isString(a) ? a.split(\"\") : a, f = 0; f < d; f++)\r\n                        if (f in e && b.call(c, e[f], f, a))\r\n                            return f;\r\n                    return -1;\r\n                };\r\n                goog.array.findRight = function (a, b, c) {\r\n                    b = goog.array.findIndexRight(a, b, c);\r\n                    return 0 > b ? null : goog.isString(a) ? a.charAt(b) : a[b];\r\n                };\r\n                goog.array.findIndexRight = function (a, b, c) {\r\n                    for (var d = a.length, e = goog.isString(a) ? a.split(\"\") : a, d = d - 1; 0 <= d; d--)\r\n                        if (d in e && b.call(c, e[d], d, a))\r\n                            return d;\r\n                    return -1;\r\n                };\r\n                goog.array.contains = function (a, b) {\r\n                    return 0 <= goog.array.indexOf(a, b);\r\n                };\r\n                goog.array.isEmpty = function (a) {\r\n                    return 0 == a.length;\r\n                };\r\n                goog.array.clear = function (a) {\r\n                    if (!goog.isArray(a))\r\n                        for (var b = a.length - 1; 0 <= b; b--)\r\n                            delete a[b];\r\n                    a.length = 0;\r\n                };\r\n                goog.array.insert = function (a, b) {\r\n                    goog.array.contains(a, b) || a.push(b);\r\n                };\r\n                goog.array.insertAt = function (a, b, c) {\r\n                    goog.array.splice(a, c, 0, b);\r\n                };\r\n                goog.array.insertArrayAt = function (a, b, c) {\r\n                    goog.partial(goog.array.splice, a, c, 0).apply(null, b);\r\n                };\r\n                goog.array.insertBefore = function (a, b, c) {\r\n                    var d;\r\n                    2 == arguments.length || 0 > (d = goog.array.indexOf(a, c)) ? a.push(b) : goog.array.insertAt(a, b, d);\r\n                };\r\n                goog.array.remove = function (a, b) {\r\n                    var c = goog.array.indexOf(a, b), d;\r\n                    (d = 0 <= c) && goog.array.removeAt(a, c);\r\n                    return d;\r\n                };\r\n                goog.array.removeAt = function (a, b) {\r\n                    goog.asserts.assert(null != a.length);\r\n                    return 1 == Array.prototype.splice.call(a, b, 1).length;\r\n                };\r\n                goog.array.removeIf = function (a, b, c) {\r\n                    b = goog.array.findIndex(a, b, c);\r\n                    return 0 <= b ? (goog.array.removeAt(a, b), !0) : !1;\r\n                };\r\n                goog.array.removeAllIf = function (a, b, c) {\r\n                    var d = 0;\r\n                    goog.array.forEachRight(a, function (e, f) {\r\n                        b.call(c, e, f, a) && goog.array.removeAt(a, f) && d++;\r\n                    });\r\n                    return d;\r\n                };\r\n                goog.array.concat = function (a) {\r\n                    return Array.prototype.concat.apply(Array.prototype, arguments);\r\n                };\r\n                goog.array.join = function (a) {\r\n                    return Array.prototype.concat.apply(Array.prototype, arguments);\r\n                };\r\n                goog.array.toArray = function (a) {\r\n                    var b = a.length;\r\n                    if (0 < b) {\r\n                        for (var c = Array(b), d = 0; d < b; d++)\r\n                            c[d] = a[d];\r\n                        return c;\r\n                    }\r\n                    return [];\r\n                };\r\n                goog.array.clone = goog.array.toArray;\r\n                goog.array.extend = function (a, b) {\r\n                    for (var c = 1; c < arguments.length; c++) {\r\n                        var d = arguments[c];\r\n                        if (goog.isArrayLike(d)) {\r\n                            var e = a.length || 0, f = d.length || 0;\r\n                            a.length = e + f;\r\n                            for (var g = 0; g < f; g++)\r\n                                a[e + g] = d[g];\r\n                        }\r\n                        else\r\n                            a.push(d);\r\n                    }\r\n                };\r\n                goog.array.splice = function (a, b, c, d) {\r\n                    goog.asserts.assert(null != a.length);\r\n                    return Array.prototype.splice.apply(a, goog.array.slice(arguments, 1));\r\n                };\r\n                goog.array.slice = function (a, b, c) {\r\n                    goog.asserts.assert(null != a.length);\r\n                    return 2 >= arguments.length ? Array.prototype.slice.call(a, b) : Array.prototype.slice.call(a, b, c);\r\n                };\r\n                goog.array.removeDuplicates = function (a, b, c) {\r\n                    b = b || a;\r\n                    var d = function (a) {\r\n                        return goog.isObject(a) ? \"o\" + goog.getUid(a) : (typeof a).charAt(0) + a;\r\n                    };\r\n                    c = c || d;\r\n                    for (var d = {}, e = 0, f = 0; f < a.length;) {\r\n                        var g = a[f++], h = c(g);\r\n                        Object.prototype.hasOwnProperty.call(d, h) || (d[h] = !0, b[e++] = g);\r\n                    }\r\n                    b.length = e;\r\n                };\r\n                goog.array.binarySearch = function (a, b, c) {\r\n                    return goog.array.binarySearch_(a, c || goog.array.defaultCompare, !1, b);\r\n                };\r\n                goog.array.binarySelect = function (a, b, c) {\r\n                    return goog.array.binarySearch_(a, b, !0, void 0, c);\r\n                };\r\n                goog.array.binarySearch_ = function (a, b, c, d, e) {\r\n                    for (var f = 0, g = a.length, h; f < g;) {\r\n                        var k = f + g >> 1, l;\r\n                        l = c ? b.call(e, a[k], k, a) : b(d, a[k]);\r\n                        0 < l ? f = k + 1 : (g = k, h = !l);\r\n                    }\r\n                    return h ? f : ~f;\r\n                };\r\n                goog.array.sort = function (a, b) {\r\n                    a.sort(b || goog.array.defaultCompare);\r\n                };\r\n                goog.array.stableSort = function (a, b) {\r\n                    for (var c = 0; c < a.length; c++)\r\n                        a[c] = { index: c, value: a[c] };\r\n                    var d = b || goog.array.defaultCompare;\r\n                    goog.array.sort(a, function (a, b) {\r\n                        return d(a.value, b.value) || a.index - b.index;\r\n                    });\r\n                    for (c = 0; c < a.length; c++)\r\n                        a[c] = a[c].value;\r\n                };\r\n                goog.array.sortByKey = function (a, b, c) {\r\n                    var d = c || goog.array.defaultCompare;\r\n                    goog.array.sort(a, function (a, c) {\r\n                        return d(b(a), b(c));\r\n                    });\r\n                };\r\n                goog.array.sortObjectsByKey = function (a, b, c) {\r\n                    goog.array.sortByKey(a, function (a) {\r\n                        return a[b];\r\n                    }, c);\r\n                };\r\n                goog.array.isSorted = function (a, b, c) {\r\n                    b = b || goog.array.defaultCompare;\r\n                    for (var d = 1; d < a.length; d++) {\r\n                        var e = b(a[d - 1], a[d]);\r\n                        if (0 < e || 0 == e && c)\r\n                            return !1;\r\n                    }\r\n                    return !0;\r\n                };\r\n                goog.array.equals = function (a, b, c) {\r\n                    if (!goog.isArrayLike(a) || !goog.isArrayLike(b) || a.length != b.length)\r\n                        return !1;\r\n                    var d = a.length;\r\n                    c = c || goog.array.defaultCompareEquality;\r\n                    for (var e = 0; e < d; e++)\r\n                        if (!c(a[e], b[e]))\r\n                            return !1;\r\n                    return !0;\r\n                };\r\n                goog.array.compare3 = function (a, b, c) {\r\n                    c = c || goog.array.defaultCompare;\r\n                    for (var d = Math.min(a.length, b.length), e = 0; e < d; e++) {\r\n                        var f = c(a[e], b[e]);\r\n                        if (0 != f)\r\n                            return f;\r\n                    }\r\n                    return goog.array.defaultCompare(a.length, b.length);\r\n                };\r\n                goog.array.defaultCompare = function (a, b) {\r\n                    return a > b ? 1 : a < b ? -1 : 0;\r\n                };\r\n                goog.array.inverseDefaultCompare = function (a, b) {\r\n                    return -goog.array.defaultCompare(a, b);\r\n                };\r\n                goog.array.defaultCompareEquality = function (a, b) {\r\n                    return a === b;\r\n                };\r\n                goog.array.binaryInsert = function (a, b, c) {\r\n                    c = goog.array.binarySearch(a, b, c);\r\n                    return 0 > c ? (goog.array.insertAt(a, b, -(c + 1)), !0) : !1;\r\n                };\r\n                goog.array.binaryRemove = function (a, b, c) {\r\n                    b = goog.array.binarySearch(a, b, c);\r\n                    return 0 <= b ? goog.array.removeAt(a, b) : !1;\r\n                };\r\n                goog.array.bucket = function (a, b, c) {\r\n                    for (var d = {}, e = 0; e < a.length; e++) {\r\n                        var f = a[e], g = b.call(c, f, e, a);\r\n                        goog.isDef(g) && (d[g] || (d[g] = [])).push(f);\r\n                    }\r\n                    return d;\r\n                };\r\n                goog.array.toObject = function (a, b, c) {\r\n                    var d = {};\r\n                    goog.array.forEach(a, function (e, f) {\r\n                        d[b.call(c, e, f, a)] = e;\r\n                    });\r\n                    return d;\r\n                };\r\n                goog.array.range = function (a, b, c) {\r\n                    var d = [], e = 0, f = a;\r\n                    c = c || 1;\r\n                    void 0 !== b && (e = a, f = b);\r\n                    if (0 > c * (f - e))\r\n                        return [];\r\n                    if (0 < c)\r\n                        for (a = e; a < f; a += c)\r\n                            d.push(a);\r\n                    else\r\n                        for (a = e; a > f; a += c)\r\n                            d.push(a);\r\n                    return d;\r\n                };\r\n                goog.array.repeat = function (a, b) {\r\n                    for (var c = [], d = 0; d < b; d++)\r\n                        c[d] = a;\r\n                    return c;\r\n                };\r\n                goog.array.flatten = function (a) {\r\n                    for (var b = [], c = 0; c < arguments.length; c++) {\r\n                        var d = arguments[c];\r\n                        if (goog.isArray(d))\r\n                            for (var e = 0; e < d.length; e += 8192)\r\n                                for (var f = goog.array.slice(d, e, e + 8192), f = goog.array.flatten.apply(null, f), g = 0; g < f.length; g++)\r\n                                    b.push(f[g]);\r\n                        else\r\n                            b.push(d);\r\n                    }\r\n                    return b;\r\n                };\r\n                goog.array.rotate = function (a, b) {\r\n                    goog.asserts.assert(null != a.length);\r\n                    a.length && (b %= a.length, 0 < b ? Array.prototype.unshift.apply(a, a.splice(-b, b)) : 0 > b && Array.prototype.push.apply(a, a.splice(0, -b)));\r\n                    return a;\r\n                };\r\n                goog.array.moveItem = function (a, b, c) {\r\n                    goog.asserts.assert(0 <= b && b < a.length);\r\n                    goog.asserts.assert(0 <= c && c < a.length);\r\n                    b = Array.prototype.splice.call(a, b, 1);\r\n                    Array.prototype.splice.call(a, c, 0, b[0]);\r\n                };\r\n                goog.array.zip = function (a) {\r\n                    if (!arguments.length)\r\n                        return [];\r\n                    for (var b = [], c = arguments[0].length, d = 1; d < arguments.length; d++)\r\n                        arguments[d].length < c && (c = arguments[d].length);\r\n                    for (d = 0; d < c; d++) {\r\n                        for (var e = [], f = 0; f < arguments.length; f++)\r\n                            e.push(arguments[f][d]);\r\n                        b.push(e);\r\n                    }\r\n                    return b;\r\n                };\r\n                goog.array.shuffle = function (a, b) {\r\n                    for (var c = b || Math.random, d = a.length - 1; 0 < d; d--) {\r\n                        var e = Math.floor(c() * (d + 1)), f = a[d];\r\n                        a[d] = a[e];\r\n                        a[e] = f;\r\n                    }\r\n                };\r\n                goog.array.copyByIndex = function (a, b) {\r\n                    var c = [];\r\n                    goog.array.forEach(b, function (b) {\r\n                        c.push(a[b]);\r\n                    });\r\n                    return c;\r\n                };\r\n                goog.crypt = {};\r\n                goog.crypt.stringToByteArray = function (a) {\r\n                    for (var b = [], c = 0, d = 0; d < a.length; d++) {\r\n                        for (var e = a.charCodeAt(d); 255 < e;)\r\n                            b[c++] = e & 255, e >>= 8;\r\n                        b[c++] = e;\r\n                    }\r\n                    return b;\r\n                };\r\n                goog.crypt.byteArrayToString = function (a) {\r\n                    if (8192 >= a.length)\r\n                        return String.fromCharCode.apply(null, a);\r\n                    for (var b = \"\", c = 0; c < a.length; c += 8192)\r\n                        var d = goog.array.slice(a, c, c + 8192), b = b + String.fromCharCode.apply(null, d);\r\n                    return b;\r\n                };\r\n                goog.crypt.byteArrayToHex = function (a) {\r\n                    return goog.array.map(a, function (a) {\r\n                        a = a.toString(16);\r\n                        return 1 < a.length ? a : \"0\" + a;\r\n                    }).join(\"\");\r\n                };\r\n                goog.crypt.hexToByteArray = function (a) {\r\n                    goog.asserts.assert(0 == a.length % 2, \"Key string length must be multiple of 2\");\r\n                    for (var b = [], c = 0; c < a.length; c += 2)\r\n                        b.push(parseInt(a.substring(c, c + 2), 16));\r\n                    return b;\r\n                };\r\n                goog.crypt.stringToUtf8ByteArray = function (a) {\r\n                    for (var b = [], c = 0, d = 0; d < a.length; d++) {\r\n                        var e = a.charCodeAt(d);\r\n                        128 > e ? b[c++] = e : (2048 > e ? b[c++] = e >> 6 | 192 : (55296 == (e & 64512) && d + 1 < a.length && 56320 == (a.charCodeAt(d + 1) & 64512) ? (e = 65536 + ((e & 1023) << 10) + (a.charCodeAt(++d) & 1023), b[c++] = e >> 18 | 240, b[c++] = e >> 12 & 63 | 128) : b[c++] = e >> 12 | 224, b[c++] = e >> 6 & 63 | 128), b[c++] = e & 63 | 128);\r\n                    }\r\n                    return b;\r\n                };\r\n                goog.crypt.utf8ByteArrayToString = function (a) {\r\n                    for (var b = [], c = 0, d = 0; c < a.length;) {\r\n                        var e = a[c++];\r\n                        if (128 > e)\r\n                            b[d++] = String.fromCharCode(e);\r\n                        else if (191 < e && 224 > e) {\r\n                            var f = a[c++];\r\n                            b[d++] = String.fromCharCode((e & 31) << 6 | f & 63);\r\n                        }\r\n                        else if (239 < e && 365 > e) {\r\n                            var f = a[c++], g = a[c++], h = a[c++], e = ((e & 7) << 18 | (f & 63) << 12 | (g & 63) << 6 | h & 63) - 65536;\r\n                            b[d++] = String.fromCharCode(55296 + (e >> 10));\r\n                            b[d++] = String.fromCharCode(56320 + (e & 1023));\r\n                        }\r\n                        else\r\n                            f = a[c++], g = a[c++], b[d++] = String.fromCharCode((e & 15) << 12 | (f & 63) << 6 | g & 63);\r\n                    }\r\n                    return b.join(\"\");\r\n                };\r\n                goog.crypt.xorByteArray = function (a, b) {\r\n                    goog.asserts.assert(a.length == b.length, \"XOR array lengths must match\");\r\n                    for (var c = [], d = 0; d < a.length; d++)\r\n                        c.push(a[d] ^ b[d]);\r\n                    return c;\r\n                };\r\n                goog.labs = {};\r\n                goog.labs.userAgent = {};\r\n                goog.labs.userAgent.util = {};\r\n                goog.labs.userAgent.util.getNativeUserAgentString_ = function () {\r\n                    var a = goog.labs.userAgent.util.getNavigator_();\r\n                    return a && (a = a.userAgent) ? a : \"\";\r\n                };\r\n                goog.labs.userAgent.util.getNavigator_ = function () {\r\n                    return goog.global.navigator;\r\n                };\r\n                goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();\r\n                goog.labs.userAgent.util.setUserAgent = function (a) {\r\n                    goog.labs.userAgent.util.userAgent_ = a || goog.labs.userAgent.util.getNativeUserAgentString_();\r\n                };\r\n                goog.labs.userAgent.util.getUserAgent = function () {\r\n                    return goog.labs.userAgent.util.userAgent_;\r\n                };\r\n                goog.labs.userAgent.util.matchUserAgent = function (a) {\r\n                    var b = goog.labs.userAgent.util.getUserAgent();\r\n                    return goog.string.contains(b, a);\r\n                };\r\n                goog.labs.userAgent.util.matchUserAgentIgnoreCase = function (a) {\r\n                    var b = goog.labs.userAgent.util.getUserAgent();\r\n                    return goog.string.caseInsensitiveContains(b, a);\r\n                };\r\n                goog.labs.userAgent.util.extractVersionTuples = function (a) {\r\n                    for (var b = RegExp(\"(\\\\w[\\\\w ]+)/([^\\\\s]+)\\\\s*(?:\\\\((.*?)\\\\))?\", \"g\"), c = [], d; d = b.exec(a);)\r\n                        c.push([d[1], d[2], d[3] || void 0]);\r\n                    return c;\r\n                };\r\n                goog.labs.userAgent.platform = {};\r\n                goog.labs.userAgent.platform.isAndroid = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgent(\"Android\");\r\n                };\r\n                goog.labs.userAgent.platform.isIpod = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgent(\"iPod\");\r\n                };\r\n                goog.labs.userAgent.platform.isIphone = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgent(\"iPhone\") && !goog.labs.userAgent.util.matchUserAgent(\"iPod\") && !goog.labs.userAgent.util.matchUserAgent(\"iPad\");\r\n                };\r\n                goog.labs.userAgent.platform.isIpad = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgent(\"iPad\");\r\n                };\r\n                goog.labs.userAgent.platform.isIos = function () {\r\n                    return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();\r\n                };\r\n                goog.labs.userAgent.platform.isMacintosh = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgent(\"Macintosh\");\r\n                };\r\n                goog.labs.userAgent.platform.isLinux = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgent(\"Linux\");\r\n                };\r\n                goog.labs.userAgent.platform.isWindows = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgent(\"Windows\");\r\n                };\r\n                goog.labs.userAgent.platform.isChromeOS = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgent(\"CrOS\");\r\n                };\r\n                goog.labs.userAgent.platform.getVersion = function () {\r\n                    var a = goog.labs.userAgent.util.getUserAgent(), b = \"\";\r\n                    goog.labs.userAgent.platform.isWindows() ? (b = /Windows (?:NT|Phone) ([0-9.]+)/, b = (a = b.exec(a)) ? a[1] : \"0.0\") : goog.labs.userAgent.platform.isIos() ? (b = /(?:iPhone|iPod|iPad|CPU)\\s+OS\\s+(\\S+)/, b = (a = b.exec(a)) && a[1].replace(/_/g, \".\")) : goog.labs.userAgent.platform.isMacintosh() ? (b = /Mac OS X ([0-9_.]+)/, b = (a = b.exec(a)) ? a[1].replace(/_/g, \".\") : \"10\") : goog.labs.userAgent.platform.isAndroid() ? (b = /Android\\s+([^\\);]+)(\\)|;)/,\r\n                        b = (a = b.exec(a)) && a[1]) : goog.labs.userAgent.platform.isChromeOS() && (b = /(?:CrOS\\s+(?:i686|x86_64)\\s+([0-9.]+))/, b = (a = b.exec(a)) && a[1]);\r\n                    return b || \"\";\r\n                };\r\n                goog.labs.userAgent.platform.isVersionOrHigher = function (a) {\r\n                    return 0 <= goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), a);\r\n                };\r\n                goog.object = {};\r\n                goog.object.forEach = function (a, b, c) {\r\n                    for (var d in a)\r\n                        b.call(c, a[d], d, a);\r\n                };\r\n                goog.object.filter = function (a, b, c) {\r\n                    var d = {}, e;\r\n                    for (e in a)\r\n                        b.call(c, a[e], e, a) && (d[e] = a[e]);\r\n                    return d;\r\n                };\r\n                goog.object.map = function (a, b, c) {\r\n                    var d = {}, e;\r\n                    for (e in a)\r\n                        d[e] = b.call(c, a[e], e, a);\r\n                    return d;\r\n                };\r\n                goog.object.some = function (a, b, c) {\r\n                    for (var d in a)\r\n                        if (b.call(c, a[d], d, a))\r\n                            return !0;\r\n                    return !1;\r\n                };\r\n                goog.object.every = function (a, b, c) {\r\n                    for (var d in a)\r\n                        if (!b.call(c, a[d], d, a))\r\n                            return !1;\r\n                    return !0;\r\n                };\r\n                goog.object.getCount = function (a) {\r\n                    var b = 0, c;\r\n                    for (c in a)\r\n                        b++;\r\n                    return b;\r\n                };\r\n                goog.object.getAnyKey = function (a) {\r\n                    for (var b in a)\r\n                        return b;\r\n                };\r\n                goog.object.getAnyValue = function (a) {\r\n                    for (var b in a)\r\n                        return a[b];\r\n                };\r\n                goog.object.contains = function (a, b) {\r\n                    return goog.object.containsValue(a, b);\r\n                };\r\n                goog.object.getValues = function (a) {\r\n                    var b = [], c = 0, d;\r\n                    for (d in a)\r\n                        b[c++] = a[d];\r\n                    return b;\r\n                };\r\n                goog.object.getKeys = function (a) {\r\n                    var b = [], c = 0, d;\r\n                    for (d in a)\r\n                        b[c++] = d;\r\n                    return b;\r\n                };\r\n                goog.object.getValueByKeys = function (a, b) {\r\n                    for (var c = goog.isArrayLike(b), d = c ? b : arguments, c = c ? 0 : 1; c < d.length && (a = a[d[c]], goog.isDef(a)); c++)\r\n                        ;\r\n                    return a;\r\n                };\r\n                goog.object.containsKey = function (a, b) {\r\n                    return null !== a && b in a;\r\n                };\r\n                goog.object.containsValue = function (a, b) {\r\n                    for (var c in a)\r\n                        if (a[c] == b)\r\n                            return !0;\r\n                    return !1;\r\n                };\r\n                goog.object.findKey = function (a, b, c) {\r\n                    for (var d in a)\r\n                        if (b.call(c, a[d], d, a))\r\n                            return d;\r\n                };\r\n                goog.object.findValue = function (a, b, c) {\r\n                    return (b = goog.object.findKey(a, b, c)) && a[b];\r\n                };\r\n                goog.object.isEmpty = function (a) {\r\n                    for (var b in a)\r\n                        return !1;\r\n                    return !0;\r\n                };\r\n                goog.object.clear = function (a) {\r\n                    for (var b in a)\r\n                        delete a[b];\r\n                };\r\n                goog.object.remove = function (a, b) {\r\n                    var c;\r\n                    (c = b in a) && delete a[b];\r\n                    return c;\r\n                };\r\n                goog.object.add = function (a, b, c) {\r\n                    if (null !== a && b in a)\r\n                        throw Error(\"The object already contains the key \\\"\" + b + \"\\\"\");\r\n                    goog.object.set(a, b, c);\r\n                };\r\n                goog.object.get = function (a, b, c) {\r\n                    return null !== a && b in a ? a[b] : c;\r\n                };\r\n                goog.object.set = function (a, b, c) {\r\n                    a[b] = c;\r\n                };\r\n                goog.object.setIfUndefined = function (a, b, c) {\r\n                    return b in a ? a[b] : a[b] = c;\r\n                };\r\n                goog.object.setWithReturnValueIfNotSet = function (a, b, c) {\r\n                    if (b in a)\r\n                        return a[b];\r\n                    c = c();\r\n                    return a[b] = c;\r\n                };\r\n                goog.object.equals = function (a, b) {\r\n                    for (var c in a)\r\n                        if (!(c in b) || a[c] !== b[c])\r\n                            return !1;\r\n                    for (c in b)\r\n                        if (!(c in a))\r\n                            return !1;\r\n                    return !0;\r\n                };\r\n                goog.object.clone = function (a) {\r\n                    var b = {}, c;\r\n                    for (c in a)\r\n                        b[c] = a[c];\r\n                    return b;\r\n                };\r\n                goog.object.unsafeClone = function (a) {\r\n                    var b = goog.typeOf(a);\r\n                    if (\"object\" == b || \"array\" == b) {\r\n                        if (goog.isFunction(a.clone))\r\n                            return a.clone();\r\n                        var b = \"array\" == b ? [] : {}, c;\r\n                        for (c in a)\r\n                            b[c] = goog.object.unsafeClone(a[c]);\r\n                        return b;\r\n                    }\r\n                    return a;\r\n                };\r\n                goog.object.transpose = function (a) {\r\n                    var b = {}, c;\r\n                    for (c in a)\r\n                        b[a[c]] = c;\r\n                    return b;\r\n                };\r\n                goog.object.PROTOTYPE_FIELDS_ = \"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\r\n                goog.object.extend = function (a, b) {\r\n                    for (var c, d, e = 1; e < arguments.length; e++) {\r\n                        d = arguments[e];\r\n                        for (c in d)\r\n                            a[c] = d[c];\r\n                        for (var f = 0; f < goog.object.PROTOTYPE_FIELDS_.length; f++)\r\n                            c = goog.object.PROTOTYPE_FIELDS_[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);\r\n                    }\r\n                };\r\n                goog.object.create = function (a) {\r\n                    var b = arguments.length;\r\n                    if (1 == b && goog.isArray(arguments[0]))\r\n                        return goog.object.create.apply(null, arguments[0]);\r\n                    if (b % 2)\r\n                        throw Error(\"Uneven number of arguments\");\r\n                    for (var c = {}, d = 0; d < b; d += 2)\r\n                        c[arguments[d]] = arguments[d + 1];\r\n                    return c;\r\n                };\r\n                goog.object.createSet = function (a) {\r\n                    var b = arguments.length;\r\n                    if (1 == b && goog.isArray(arguments[0]))\r\n                        return goog.object.createSet.apply(null, arguments[0]);\r\n                    for (var c = {}, d = 0; d < b; d++)\r\n                        c[arguments[d]] = !0;\r\n                    return c;\r\n                };\r\n                goog.object.createImmutableView = function (a) {\r\n                    var b = a;\r\n                    Object.isFrozen && !Object.isFrozen(a) && (b = Object.create(a), Object.freeze(b));\r\n                    return b;\r\n                };\r\n                goog.object.isImmutableView = function (a) {\r\n                    return !!Object.isFrozen && Object.isFrozen(a);\r\n                };\r\n                goog.labs.userAgent.browser = {};\r\n                goog.labs.userAgent.browser.matchOpera_ = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgent(\"Opera\") || goog.labs.userAgent.util.matchUserAgent(\"OPR\");\r\n                };\r\n                goog.labs.userAgent.browser.matchIE_ = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgent(\"Trident\") || goog.labs.userAgent.util.matchUserAgent(\"MSIE\");\r\n                };\r\n                goog.labs.userAgent.browser.matchEdge_ = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgent(\"Edge\");\r\n                };\r\n                goog.labs.userAgent.browser.matchFirefox_ = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgent(\"Firefox\");\r\n                };\r\n                goog.labs.userAgent.browser.matchSafari_ = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgent(\"Safari\") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdge_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent(\"Android\"));\r\n                };\r\n                goog.labs.userAgent.browser.matchCoast_ = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgent(\"Coast\");\r\n                };\r\n                goog.labs.userAgent.browser.matchIosWebview_ = function () {\r\n                    return (goog.labs.userAgent.util.matchUserAgent(\"iPad\") || goog.labs.userAgent.util.matchUserAgent(\"iPhone\")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent(\"AppleWebKit\");\r\n                };\r\n                goog.labs.userAgent.browser.matchChrome_ = function () {\r\n                    return (goog.labs.userAgent.util.matchUserAgent(\"Chrome\") || goog.labs.userAgent.util.matchUserAgent(\"CriOS\")) && !goog.labs.userAgent.browser.matchOpera_() && !goog.labs.userAgent.browser.matchEdge_();\r\n                };\r\n                goog.labs.userAgent.browser.matchAndroidBrowser_ = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgent(\"Android\") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());\r\n                };\r\n                goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;\r\n                goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;\r\n                goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;\r\n                goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;\r\n                goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;\r\n                goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;\r\n                goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;\r\n                goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;\r\n                goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;\r\n                goog.labs.userAgent.browser.isSilk = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgent(\"Silk\");\r\n                };\r\n                goog.labs.userAgent.browser.getVersion = function () {\r\n                    function a(a) {\r\n                        a = goog.array.find(a, d);\r\n                        return c[a] || \"\";\r\n                    }\r\n                    var b = goog.labs.userAgent.util.getUserAgent();\r\n                    if (goog.labs.userAgent.browser.isIE())\r\n                        return goog.labs.userAgent.browser.getIEVersion_(b);\r\n                    var b = goog.labs.userAgent.util.extractVersionTuples(b), c = {};\r\n                    goog.array.forEach(b, function (a) {\r\n                        c[a[0]] = a[1];\r\n                    });\r\n                    var d = goog.partial(goog.object.containsKey, c);\r\n                    return goog.labs.userAgent.browser.isOpera() ? a([\"Version\", \"Opera\", \"OPR\"]) : goog.labs.userAgent.browser.isEdge() ?\r\n                        a([\"Edge\"]) : goog.labs.userAgent.browser.isChrome() ? a([\"Chrome\", \"CriOS\"]) : (b = b[2]) && b[1] || \"\";\r\n                };\r\n                goog.labs.userAgent.browser.isVersionOrHigher = function (a) {\r\n                    return 0 <= goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), a);\r\n                };\r\n                goog.labs.userAgent.browser.getIEVersion_ = function (a) {\r\n                    var b = /rv: *([\\d\\.]*)/.exec(a);\r\n                    if (b && b[1])\r\n                        return b[1];\r\n                    var b = \"\", c = /MSIE +([\\d\\.]+)/.exec(a);\r\n                    if (c && c[1])\r\n                        if (a = /Trident\\/(\\d.\\d)/.exec(a), \"7.0\" == c[1])\r\n                            if (a && a[1])\r\n                                switch (a[1]) {\r\n                                    case \"4.0\":\r\n                                        b = \"8.0\";\r\n                                        break;\r\n                                    case \"5.0\":\r\n                                        b = \"9.0\";\r\n                                        break;\r\n                                    case \"6.0\":\r\n                                        b = \"10.0\";\r\n                                        break;\r\n                                    case \"7.0\":\r\n                                        b = \"11.0\";\r\n                                }\r\n                            else\r\n                                b = \"7.0\";\r\n                        else\r\n                            b = c[1];\r\n                    return b;\r\n                };\r\n                goog.labs.userAgent.engine = {};\r\n                goog.labs.userAgent.engine.isPresto = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgent(\"Presto\");\r\n                };\r\n                goog.labs.userAgent.engine.isTrident = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgent(\"Trident\") || goog.labs.userAgent.util.matchUserAgent(\"MSIE\");\r\n                };\r\n                goog.labs.userAgent.engine.isEdge = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgent(\"Edge\");\r\n                };\r\n                goog.labs.userAgent.engine.isWebKit = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgentIgnoreCase(\"WebKit\") && !goog.labs.userAgent.engine.isEdge();\r\n                };\r\n                goog.labs.userAgent.engine.isGecko = function () {\r\n                    return goog.labs.userAgent.util.matchUserAgent(\"Gecko\") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();\r\n                };\r\n                goog.labs.userAgent.engine.getVersion = function () {\r\n                    var a = goog.labs.userAgent.util.getUserAgent();\r\n                    if (a) {\r\n                        var a = goog.labs.userAgent.util.extractVersionTuples(a), b = goog.labs.userAgent.engine.getEngineTuple_(a);\r\n                        if (b)\r\n                            return \"Gecko\" == b[0] ? goog.labs.userAgent.engine.getVersionForKey_(a, \"Firefox\") : b[1];\r\n                        var a = a[0], c;\r\n                        if (a && (c = a[2]) && (c = /Trident\\/([^\\s;]+)/.exec(c)))\r\n                            return c[1];\r\n                    }\r\n                    return \"\";\r\n                };\r\n                goog.labs.userAgent.engine.getEngineTuple_ = function (a) {\r\n                    if (!goog.labs.userAgent.engine.isEdge())\r\n                        return a[1];\r\n                    for (var b = 0; b < a.length; b++) {\r\n                        var c = a[b];\r\n                        if (\"Edge\" == c[0])\r\n                            return c;\r\n                    }\r\n                };\r\n                goog.labs.userAgent.engine.isVersionOrHigher = function (a) {\r\n                    return 0 <= goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), a);\r\n                };\r\n                goog.labs.userAgent.engine.getVersionForKey_ = function (a, b) {\r\n                    var c = goog.array.find(a, function (a) {\r\n                        return b == a[0];\r\n                    });\r\n                    return c && c[1] || \"\";\r\n                };\r\n                goog.userAgent = {};\r\n                goog.userAgent.ASSUME_IE = !1;\r\n                goog.userAgent.ASSUME_EDGE = !1;\r\n                goog.userAgent.ASSUME_GECKO = !1;\r\n                goog.userAgent.ASSUME_WEBKIT = !1;\r\n                goog.userAgent.ASSUME_MOBILE_WEBKIT = !1;\r\n                goog.userAgent.ASSUME_OPERA = !1;\r\n                goog.userAgent.ASSUME_ANY_VERSION = !1;\r\n                goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;\r\n                goog.userAgent.getUserAgentString = function () {\r\n                    return goog.labs.userAgent.util.getUserAgent();\r\n                };\r\n                goog.userAgent.getNavigator = function () {\r\n                    return goog.global.navigator || null;\r\n                };\r\n                goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();\r\n                goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();\r\n                goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge();\r\n                goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;\r\n                goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();\r\n                goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();\r\n                goog.userAgent.isMobile_ = function () {\r\n                    return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent(\"Mobile\");\r\n                };\r\n                goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();\r\n                goog.userAgent.SAFARI = goog.userAgent.WEBKIT;\r\n                goog.userAgent.determinePlatform_ = function () {\r\n                    var a = goog.userAgent.getNavigator();\r\n                    return a && a.platform || \"\";\r\n                };\r\n                goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();\r\n                goog.userAgent.ASSUME_MAC = !1;\r\n                goog.userAgent.ASSUME_WINDOWS = !1;\r\n                goog.userAgent.ASSUME_LINUX = !1;\r\n                goog.userAgent.ASSUME_X11 = !1;\r\n                goog.userAgent.ASSUME_ANDROID = !1;\r\n                goog.userAgent.ASSUME_IPHONE = !1;\r\n                goog.userAgent.ASSUME_IPAD = !1;\r\n                goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;\r\n                goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();\r\n                goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();\r\n                goog.userAgent.isLegacyLinux_ = function () {\r\n                    return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();\r\n                };\r\n                goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();\r\n                goog.userAgent.isX11_ = function () {\r\n                    var a = goog.userAgent.getNavigator();\r\n                    return !!a && goog.string.contains(a.appVersion || \"\", \"X11\");\r\n                };\r\n                goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();\r\n                goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();\r\n                goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();\r\n                goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();\r\n                goog.userAgent.operaVersion_ = function () {\r\n                    var a = goog.global.opera.version;\r\n                    try {\r\n                        return a();\r\n                    }\r\n                    catch (b) {\r\n                        return a;\r\n                    }\r\n                };\r\n                goog.userAgent.determineVersion_ = function () {\r\n                    if (goog.userAgent.OPERA && goog.global.opera)\r\n                        return goog.userAgent.operaVersion_();\r\n                    var a = \"\", b = goog.userAgent.getVersionRegexResult_();\r\n                    b && (a = b ? b[1] : \"\");\r\n                    return goog.userAgent.IE && (b = goog.userAgent.getDocumentMode_(), b > parseFloat(a)) ? String(b) : a;\r\n                };\r\n                goog.userAgent.getVersionRegexResult_ = function () {\r\n                    var a = goog.userAgent.getUserAgentString();\r\n                    if (goog.userAgent.GECKO)\r\n                        return /rv\\:([^\\);]+)(\\)|;)/.exec(a);\r\n                    if (goog.userAgent.EDGE)\r\n                        return /Edge\\/([\\d\\.]+)/.exec(a);\r\n                    if (goog.userAgent.IE)\r\n                        return /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);\r\n                    if (goog.userAgent.WEBKIT)\r\n                        return /WebKit\\/(\\S+)/.exec(a);\r\n                };\r\n                goog.userAgent.getDocumentMode_ = function () {\r\n                    var a = goog.global.document;\r\n                    return a ? a.documentMode : void 0;\r\n                };\r\n                goog.userAgent.VERSION = goog.userAgent.determineVersion_();\r\n                goog.userAgent.compare = function (a, b) {\r\n                    return goog.string.compareVersions(a, b);\r\n                };\r\n                goog.userAgent.isVersionOrHigherCache_ = {};\r\n                goog.userAgent.isVersionOrHigher = function (a) {\r\n                    return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[a] || (goog.userAgent.isVersionOrHigherCache_[a] = 0 <= goog.string.compareVersions(goog.userAgent.VERSION, a));\r\n                };\r\n                goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;\r\n                goog.userAgent.isDocumentModeOrHigher = function (a) {\r\n                    return Number(goog.userAgent.DOCUMENT_MODE) >= a;\r\n                };\r\n                goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;\r\n                goog.userAgent.DOCUMENT_MODE = function () {\r\n                    var a = goog.global.document, b = goog.userAgent.getDocumentMode_();\r\n                    return a && goog.userAgent.IE ? b || (\"CSS1Compat\" == a.compatMode ? parseInt(goog.userAgent.VERSION, 10) : 5) : void 0;\r\n                }();\r\n                goog.userAgent.product = {};\r\n                goog.userAgent.product.ASSUME_FIREFOX = !1;\r\n                goog.userAgent.product.ASSUME_IPHONE = !1;\r\n                goog.userAgent.product.ASSUME_IPAD = !1;\r\n                goog.userAgent.product.ASSUME_ANDROID = !1;\r\n                goog.userAgent.product.ASSUME_CHROME = !1;\r\n                goog.userAgent.product.ASSUME_SAFARI = !1;\r\n                goog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_OPERA || goog.userAgent.product.ASSUME_FIREFOX || goog.userAgent.product.ASSUME_IPHONE || goog.userAgent.product.ASSUME_IPAD || goog.userAgent.product.ASSUME_ANDROID || goog.userAgent.product.ASSUME_CHROME || goog.userAgent.product.ASSUME_SAFARI;\r\n                goog.userAgent.product.OPERA = goog.userAgent.OPERA;\r\n                goog.userAgent.product.IE = goog.userAgent.IE;\r\n                goog.userAgent.product.EDGE = goog.userAgent.EDGE;\r\n                goog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_FIREFOX : goog.labs.userAgent.browser.isFirefox();\r\n                goog.userAgent.product.isIphoneOrIpod_ = function () {\r\n                    return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpod();\r\n                };\r\n                goog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPHONE : goog.userAgent.product.isIphoneOrIpod_();\r\n                goog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();\r\n                goog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_ANDROID : goog.labs.userAgent.browser.isAndroidBrowser();\r\n                goog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CHROME : goog.labs.userAgent.browser.isChrome();\r\n                goog.userAgent.product.isSafariDesktop_ = function () {\r\n                    return goog.labs.userAgent.browser.isSafari() && !goog.labs.userAgent.platform.isIos();\r\n                };\r\n                goog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_SAFARI : goog.userAgent.product.isSafariDesktop_();\r\n                goog.crypt.base64 = {};\r\n                goog.crypt.base64.byteToCharMap_ = null;\r\n                goog.crypt.base64.charToByteMap_ = null;\r\n                goog.crypt.base64.byteToCharMapWebSafe_ = null;\r\n                goog.crypt.base64.ENCODED_VALS_BASE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n                goog.crypt.base64.ENCODED_VALS = goog.crypt.base64.ENCODED_VALS_BASE + \"+/=\";\r\n                goog.crypt.base64.ENCODED_VALS_WEBSAFE = goog.crypt.base64.ENCODED_VALS_BASE + \"-_.\";\r\n                goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ = goog.userAgent.GECKO || goog.userAgent.WEBKIT && !goog.userAgent.product.SAFARI || goog.userAgent.OPERA;\r\n                goog.crypt.base64.HAS_NATIVE_ENCODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || \"function\" == typeof goog.global.btoa;\r\n                goog.crypt.base64.HAS_NATIVE_DECODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || !goog.userAgent.product.SAFARI && !goog.userAgent.IE && \"function\" == typeof goog.global.atob;\r\n                goog.crypt.base64.encodeByteArray = function (a, b) {\r\n                    goog.asserts.assert(goog.isArrayLike(a), \"encodeByteArray takes an array as a parameter\");\r\n                    goog.crypt.base64.init_();\r\n                    for (var c = b ? goog.crypt.base64.byteToCharMapWebSafe_ : goog.crypt.base64.byteToCharMap_, d = [], e = 0; e < a.length; e += 3) {\r\n                        var f = a[e], g = e + 1 < a.length, h = g ? a[e + 1] : 0, k = e + 2 < a.length, l = k ? a[e + 2] : 0, p = f >> 2, f = (f & 3) << 4 | h >> 4, h = (h & 15) << 2 | l >> 6, l = l & 63;\r\n                        k || (l = 64, g || (h = 64));\r\n                        d.push(c[p], c[f], c[h], c[l]);\r\n                    }\r\n                    return d.join(\"\");\r\n                };\r\n                goog.crypt.base64.encodeString = function (a, b) {\r\n                    return goog.crypt.base64.HAS_NATIVE_ENCODE_ && !b ? goog.global.btoa(a) : goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(a), b);\r\n                };\r\n                goog.crypt.base64.decodeString = function (a, b) {\r\n                    if (goog.crypt.base64.HAS_NATIVE_DECODE_ && !b)\r\n                        return goog.global.atob(a);\r\n                    var c = \"\";\r\n                    goog.crypt.base64.decodeStringInternal_(a, function (a) {\r\n                        c += String.fromCharCode(a);\r\n                    });\r\n                    return c;\r\n                };\r\n                goog.crypt.base64.decodeStringToByteArray = function (a, b) {\r\n                    var c = [];\r\n                    goog.crypt.base64.decodeStringInternal_(a, function (a) {\r\n                        c.push(a);\r\n                    });\r\n                    return c;\r\n                };\r\n                goog.crypt.base64.decodeStringToUint8Array = function (a) {\r\n                    goog.asserts.assert(!goog.userAgent.IE || goog.userAgent.isVersionOrHigher(\"10\"), \"Browser does not support typed arrays\");\r\n                    var b = new Uint8Array(Math.ceil(3 * a.length / 4)), c = 0;\r\n                    goog.crypt.base64.decodeStringInternal_(a, function (a) {\r\n                        b[c++] = a;\r\n                    });\r\n                    return b.subarray(0, c);\r\n                };\r\n                goog.crypt.base64.decodeStringInternal_ = function (a, b) {\r\n                    function c(b) {\r\n                        for (; d < a.length;) {\r\n                            var c = a.charAt(d++), e = goog.crypt.base64.charToByteMap_[c];\r\n                            if (null != e)\r\n                                return e;\r\n                            if (!goog.string.isEmptyOrWhitespace(c))\r\n                                throw Error(\"Unknown base64 encoding at char: \" + c);\r\n                        }\r\n                        return b;\r\n                    }\r\n                    goog.crypt.base64.init_();\r\n                    for (var d = 0;;) {\r\n                        var e = c(-1), f = c(0), g = c(64), h = c(64);\r\n                        if (64 === h && -1 === e)\r\n                            break;\r\n                        b(e << 2 | f >> 4);\r\n                        64 != g && (b(f << 4 & 240 | g >> 2), 64 != h && b(g << 6 & 192 | h));\r\n                    }\r\n                };\r\n                goog.crypt.base64.init_ = function () {\r\n                    if (!goog.crypt.base64.byteToCharMap_) {\r\n                        goog.crypt.base64.byteToCharMap_ = {};\r\n                        goog.crypt.base64.charToByteMap_ = {};\r\n                        goog.crypt.base64.byteToCharMapWebSafe_ = {};\r\n                        for (var a = 0; a < goog.crypt.base64.ENCODED_VALS.length; a++)\r\n                            goog.crypt.base64.byteToCharMap_[a] = goog.crypt.base64.ENCODED_VALS.charAt(a), goog.crypt.base64.charToByteMap_[goog.crypt.base64.byteToCharMap_[a]] = a, goog.crypt.base64.byteToCharMapWebSafe_[a] = goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(a), a >= goog.crypt.base64.ENCODED_VALS_BASE.length &&\r\n                                (goog.crypt.base64.charToByteMap_[goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(a)] = a);\r\n                    }\r\n                };\r\n                jspb.ExtensionFieldInfo = function (a, b, c, d, e) {\r\n                    this.fieldIndex = a;\r\n                    this.fieldName = b;\r\n                    this.ctor = c;\r\n                    this.toObjectFn = d;\r\n                    this.isRepeated = e;\r\n                };\r\n                jspb.ExtensionFieldBinaryInfo = function (a, b, c, d, e, f) {\r\n                    this.fieldInfo = a;\r\n                    this.binaryReaderFn = b;\r\n                    this.binaryWriterFn = c;\r\n                    this.binaryMessageSerializeFn = d;\r\n                    this.binaryMessageDeserializeFn = e;\r\n                    this.isPacked = f;\r\n                };\r\n                jspb.ExtensionFieldInfo.prototype.isMessageType = function () {\r\n                    return !!this.ctor;\r\n                };\r\n                jspb.Message = function () {\r\n                };\r\n                jspb.Message.GENERATE_TO_OBJECT = !0;\r\n                jspb.Message.GENERATE_FROM_OBJECT = !goog.DISALLOW_TEST_ONLY_CODE;\r\n                jspb.Message.GENERATE_TO_STRING = !0;\r\n                jspb.Message.ASSUME_LOCAL_ARRAYS = !1;\r\n                jspb.Message.MINIMIZE_MEMORY_ALLOCATIONS = COMPILED;\r\n                jspb.Message.SUPPORTS_UINT8ARRAY_ = \"function\" == typeof Uint8Array;\r\n                jspb.Message.prototype.getJsPbMessageId = function () {\r\n                    return this.messageId_;\r\n                };\r\n                jspb.Message.getIndex_ = function (a, b) {\r\n                    return b + a.arrayIndexOffset_;\r\n                };\r\n                jspb.Message.initialize = function (a, b, c, d, e, f) {\r\n                    a.wrappers_ = jspb.Message.MINIMIZE_MEMORY_ALLOCATIONS ? null : {};\r\n                    b || (b = c ? [c] : []);\r\n                    a.messageId_ = c ? String(c) : void 0;\r\n                    a.arrayIndexOffset_ = 0 === c ? -1 : 0;\r\n                    a.array = b;\r\n                    jspb.Message.initPivotAndExtensionObject_(a, d);\r\n                    a.convertedFloatingPointFields_ = {};\r\n                    if (e)\r\n                        for (b = 0; b < e.length; b++)\r\n                            c = e[b], c < a.pivot_ ? (c = jspb.Message.getIndex_(a, c), a.array[c] = a.array[c] || (jspb.Message.MINIMIZE_MEMORY_ALLOCATIONS ? jspb.Message.EMPTY_LIST_SENTINEL_ : [])) : (jspb.Message.maybeInitEmptyExtensionObject_(a),\r\n                                a.extensionObject_[c] = a.extensionObject_[c] || (jspb.Message.MINIMIZE_MEMORY_ALLOCATIONS ? jspb.Message.EMPTY_LIST_SENTINEL_ : []));\r\n                    f && f.length && goog.array.forEach(f, goog.partial(jspb.Message.computeOneofCase, a));\r\n                };\r\n                jspb.Message.EMPTY_LIST_SENTINEL_ = goog.DEBUG && Object.freeze ? Object.freeze([]) : [];\r\n                jspb.Message.isArray_ = function (a) {\r\n                    return jspb.Message.ASSUME_LOCAL_ARRAYS ? a instanceof Array : goog.isArray(a);\r\n                };\r\n                jspb.Message.initPivotAndExtensionObject_ = function (a, b) {\r\n                    if (a.array.length) {\r\n                        var c = a.array.length - 1, d = a.array[c];\r\n                        if (d && \"object\" == typeof d && !jspb.Message.isArray_(d) && !(jspb.Message.SUPPORTS_UINT8ARRAY_ && d instanceof Uint8Array)) {\r\n                            a.pivot_ = c - a.arrayIndexOffset_;\r\n                            a.extensionObject_ = d;\r\n                            return;\r\n                        }\r\n                    }\r\n                    -1 < b ? (a.pivot_ = b, a.extensionObject_ = null) : a.pivot_ = Number.MAX_VALUE;\r\n                };\r\n                jspb.Message.maybeInitEmptyExtensionObject_ = function (a) {\r\n                    var b = jspb.Message.getIndex_(a, a.pivot_);\r\n                    a.array[b] || (a.extensionObject_ = a.array[b] = {});\r\n                };\r\n                jspb.Message.toObjectList = function (a, b, c) {\r\n                    for (var d = [], e = 0; e < a.length; e++)\r\n                        d[e] = b.call(a[e], c, a[e]);\r\n                    return d;\r\n                };\r\n                jspb.Message.toObjectExtension = function (a, b, c, d, e) {\r\n                    for (var f in c) {\r\n                        var g = c[f], h = d.call(a, g);\r\n                        if (null != h) {\r\n                            for (var k in g.fieldName)\r\n                                if (g.fieldName.hasOwnProperty(k))\r\n                                    break;\r\n                            b[k] = g.toObjectFn ? g.isRepeated ? jspb.Message.toObjectList(h, g.toObjectFn, e) : g.toObjectFn(e, h) : h;\r\n                        }\r\n                    }\r\n                };\r\n                jspb.Message.serializeBinaryExtensions = function (a, b, c, d) {\r\n                    for (var e in c) {\r\n                        var f = c[e], g = f.fieldInfo;\r\n                        if (!f.binaryWriterFn)\r\n                            throw Error(\"Message extension present that was generated without binary serialization support\");\r\n                        var h = d.call(a, g);\r\n                        if (null != h)\r\n                            if (g.isMessageType())\r\n                                if (f.binaryMessageSerializeFn)\r\n                                    f.binaryWriterFn.call(b, g.fieldIndex, h, f.binaryMessageSerializeFn);\r\n                                else\r\n                                    throw Error(\"Message extension present holding submessage without binary support enabled, and message is being serialized to binary format\");\r\n                            else\r\n                                f.binaryWriterFn.call(b, g.fieldIndex, h);\r\n                    }\r\n                };\r\n                jspb.Message.readBinaryExtension = function (a, b, c, d, e) {\r\n                    var f = c[b.getFieldNumber()];\r\n                    if (f) {\r\n                        c = f.fieldInfo;\r\n                        if (!f.binaryReaderFn)\r\n                            throw Error(\"Deserializing extension whose generated code does not support binary format\");\r\n                        var g;\r\n                        c.isMessageType() ? (g = new c.ctor, f.binaryReaderFn.call(b, g, f.binaryMessageDeserializeFn)) : g = f.binaryReaderFn.call(b);\r\n                        c.isRepeated && !f.isPacked ? (b = d.call(a, c)) ? b.push(g) : e.call(a, c, [g]) : e.call(a, c, g);\r\n                    }\r\n                    else\r\n                        b.skipField();\r\n                };\r\n                jspb.Message.getField = function (a, b) {\r\n                    if (b < a.pivot_) {\r\n                        var c = jspb.Message.getIndex_(a, b), d = a.array[c];\r\n                        return d === jspb.Message.EMPTY_LIST_SENTINEL_ ? a.array[c] = [] : d;\r\n                    }\r\n                    if (a.extensionObject_)\r\n                        return d = a.extensionObject_[b], d === jspb.Message.EMPTY_LIST_SENTINEL_ ? a.extensionObject_[b] = [] : d;\r\n                };\r\n                jspb.Message.getRepeatedField = function (a, b) {\r\n                    if (b < a.pivot_) {\r\n                        var c = jspb.Message.getIndex_(a, b), d = a.array[c];\r\n                        return d === jspb.Message.EMPTY_LIST_SENTINEL_ ? a.array[c] = [] : d;\r\n                    }\r\n                    d = a.extensionObject_[b];\r\n                    return d === jspb.Message.EMPTY_LIST_SENTINEL_ ? a.extensionObject_[b] = [] : d;\r\n                };\r\n                jspb.Message.getOptionalFloatingPointField = function (a, b) {\r\n                    var c = jspb.Message.getField(a, b);\r\n                    return null == c ? c : +c;\r\n                };\r\n                jspb.Message.getRepeatedFloatingPointField = function (a, b) {\r\n                    var c = jspb.Message.getRepeatedField(a, b);\r\n                    a.convertedFloatingPointFields_ || (a.convertedFloatingPointFields_ = {});\r\n                    if (!a.convertedFloatingPointFields_[b]) {\r\n                        for (var d = 0; d < c.length; d++)\r\n                            c[d] = +c[d];\r\n                        a.convertedFloatingPointFields_[b] = !0;\r\n                    }\r\n                    return c;\r\n                };\r\n                jspb.Message.bytesAsB64 = function (a) {\r\n                    if (null == a || goog.isString(a))\r\n                        return a;\r\n                    if (jspb.Message.SUPPORTS_UINT8ARRAY_ && a instanceof Uint8Array)\r\n                        return goog.crypt.base64.encodeByteArray(a);\r\n                    goog.asserts.fail(\"Cannot coerce to b64 string: \" + goog.typeOf(a));\r\n                    return null;\r\n                };\r\n                jspb.Message.bytesAsU8 = function (a) {\r\n                    if (null == a || a instanceof Uint8Array)\r\n                        return a;\r\n                    if (goog.isString(a))\r\n                        return goog.crypt.base64.decodeStringToUint8Array(a);\r\n                    goog.asserts.fail(\"Cannot coerce to Uint8Array: \" + goog.typeOf(a));\r\n                    return null;\r\n                };\r\n                jspb.Message.bytesListAsB64 = function (a) {\r\n                    jspb.Message.assertConsistentTypes_(a);\r\n                    return !a.length || goog.isString(a[0]) ? a : goog.array.map(a, jspb.Message.bytesAsB64);\r\n                };\r\n                jspb.Message.bytesListAsU8 = function (a) {\r\n                    jspb.Message.assertConsistentTypes_(a);\r\n                    return !a.length || a[0] instanceof Uint8Array ? a : goog.array.map(a, jspb.Message.bytesAsU8);\r\n                };\r\n                jspb.Message.assertConsistentTypes_ = function (a) {\r\n                    if (goog.DEBUG && a && 1 < a.length) {\r\n                        var b = goog.typeOf(a[0]);\r\n                        goog.array.forEach(a, function (a) {\r\n                            goog.typeOf(a) != b && goog.asserts.fail(\"Inconsistent type in JSPB repeated field array. Got \" + goog.typeOf(a) + \" expected \" + b);\r\n                        });\r\n                    }\r\n                };\r\n                jspb.Message.getFieldWithDefault = function (a, b, c) {\r\n                    a = jspb.Message.getField(a, b);\r\n                    return null == a ? c : a;\r\n                };\r\n                jspb.Message.getFieldProto3 = jspb.Message.getFieldWithDefault;\r\n                jspb.Message.getMapField = function (a, b, c, d) {\r\n                    a.wrappers_ || (a.wrappers_ = {});\r\n                    if (b in a.wrappers_)\r\n                        return a.wrappers_[b];\r\n                    if (!c)\r\n                        return c = jspb.Message.getField(a, b), c || (c = [], jspb.Message.setField(a, b, c)), a.wrappers_[b] = new jspb.Map(c, d);\r\n                };\r\n                jspb.Message.setField = function (a, b, c) {\r\n                    b < a.pivot_ ? a.array[jspb.Message.getIndex_(a, b)] = c : (jspb.Message.maybeInitEmptyExtensionObject_(a), a.extensionObject_[b] = c);\r\n                };\r\n                jspb.Message.setProto3IntField = function (a, b, c) {\r\n                    jspb.Message.setFieldIgnoringDefault_(a, b, c, 0);\r\n                };\r\n                jspb.Message.setProto3FloatField = function (a, b, c) {\r\n                    jspb.Message.setFieldIgnoringDefault_(a, b, c, 0);\r\n                };\r\n                jspb.Message.setProto3BooleanField = function (a, b, c) {\r\n                    jspb.Message.setFieldIgnoringDefault_(a, b, c, !1);\r\n                };\r\n                jspb.Message.setProto3StringField = function (a, b, c) {\r\n                    jspb.Message.setFieldIgnoringDefault_(a, b, c, \"\");\r\n                };\r\n                jspb.Message.setProto3StringIntField = function (a, b, c) {\r\n                    jspb.Message.setFieldIgnoringDefault_(a, b, c, \"\");\r\n                };\r\n                jspb.Message.setProto3BytesField = function (a, b, c) {\r\n                    jspb.Message.setFieldIgnoringDefault_(a, b, c, \"\");\r\n                };\r\n                jspb.Message.setProto3EnumField = function (a, b, c) {\r\n                    jspb.Message.setFieldIgnoringDefault_(a, b, c, 0);\r\n                };\r\n                jspb.Message.setFieldIgnoringDefault_ = function (a, b, c, d) {\r\n                    c != d ? jspb.Message.setField(a, b, c) : a.array[jspb.Message.getIndex_(a, b)] = null;\r\n                };\r\n                jspb.Message.addToRepeatedField = function (a, b, c, d) {\r\n                    a = jspb.Message.getRepeatedField(a, b);\r\n                    void 0 != d ? a.splice(d, 0, c) : a.push(c);\r\n                };\r\n                jspb.Message.setOneofField = function (a, b, c, d) {\r\n                    (c = jspb.Message.computeOneofCase(a, c)) && c !== b && void 0 !== d && (a.wrappers_ && c in a.wrappers_ && (a.wrappers_[c] = void 0), jspb.Message.setField(a, c, void 0));\r\n                    jspb.Message.setField(a, b, d);\r\n                };\r\n                jspb.Message.computeOneofCase = function (a, b) {\r\n                    var c, d;\r\n                    goog.array.forEach(b, function (b) {\r\n                        var f = jspb.Message.getField(a, b);\r\n                        goog.isDefAndNotNull(f) && (c = b, d = f, jspb.Message.setField(a, b, void 0));\r\n                    });\r\n                    return c ? (jspb.Message.setField(a, c, d), c) : 0;\r\n                };\r\n                jspb.Message.getWrapperField = function (a, b, c, d) {\r\n                    a.wrappers_ || (a.wrappers_ = {});\r\n                    if (!a.wrappers_[c]) {\r\n                        var e = jspb.Message.getField(a, c);\r\n                        if (d || e)\r\n                            a.wrappers_[c] = new b(e);\r\n                    }\r\n                    return a.wrappers_[c];\r\n                };\r\n                jspb.Message.getRepeatedWrapperField = function (a, b, c) {\r\n                    jspb.Message.wrapRepeatedField_(a, b, c);\r\n                    b = a.wrappers_[c];\r\n                    b == jspb.Message.EMPTY_LIST_SENTINEL_ && (b = a.wrappers_[c] = []);\r\n                    return b;\r\n                };\r\n                jspb.Message.wrapRepeatedField_ = function (a, b, c) {\r\n                    a.wrappers_ || (a.wrappers_ = {});\r\n                    if (!a.wrappers_[c]) {\r\n                        for (var d = jspb.Message.getRepeatedField(a, c), e = [], f = 0; f < d.length; f++)\r\n                            e[f] = new b(d[f]);\r\n                        a.wrappers_[c] = e;\r\n                    }\r\n                };\r\n                jspb.Message.setWrapperField = function (a, b, c) {\r\n                    a.wrappers_ || (a.wrappers_ = {});\r\n                    var d = c ? c.toArray() : c;\r\n                    a.wrappers_[b] = c;\r\n                    jspb.Message.setField(a, b, d);\r\n                };\r\n                jspb.Message.setOneofWrapperField = function (a, b, c, d) {\r\n                    a.wrappers_ || (a.wrappers_ = {});\r\n                    var e = d ? d.toArray() : d;\r\n                    a.wrappers_[b] = d;\r\n                    jspb.Message.setOneofField(a, b, c, e);\r\n                };\r\n                jspb.Message.setRepeatedWrapperField = function (a, b, c) {\r\n                    a.wrappers_ || (a.wrappers_ = {});\r\n                    c = c || [];\r\n                    for (var d = [], e = 0; e < c.length; e++)\r\n                        d[e] = c[e].toArray();\r\n                    a.wrappers_[b] = c;\r\n                    jspb.Message.setField(a, b, d);\r\n                };\r\n                jspb.Message.addToRepeatedWrapperField = function (a, b, c, d, e) {\r\n                    jspb.Message.wrapRepeatedField_(a, d, b);\r\n                    var f = a.wrappers_[b];\r\n                    f || (f = a.wrappers_[b] = []);\r\n                    c = c ? c : new d;\r\n                    a = jspb.Message.getRepeatedField(a, b);\r\n                    void 0 != e ? (f.splice(e, 0, c), a.splice(e, 0, c.toArray())) : (f.push(c), a.push(c.toArray()));\r\n                    return c;\r\n                };\r\n                jspb.Message.toMap = function (a, b, c, d) {\r\n                    for (var e = {}, f = 0; f < a.length; f++)\r\n                        e[b.call(a[f])] = c ? c.call(a[f], d, a[f]) : a[f];\r\n                    return e;\r\n                };\r\n                jspb.Message.prototype.syncMapFields_ = function () {\r\n                    if (this.wrappers_)\r\n                        for (var a in this.wrappers_) {\r\n                            var b = this.wrappers_[a];\r\n                            if (goog.isArray(b))\r\n                                for (var c = 0; c < b.length; c++)\r\n                                    b[c] && b[c].toArray();\r\n                            else\r\n                                b && b.toArray();\r\n                        }\r\n                };\r\n                jspb.Message.prototype.toArray = function () {\r\n                    this.syncMapFields_();\r\n                    return this.array;\r\n                };\r\n                jspb.Message.GENERATE_TO_STRING && (jspb.Message.prototype.toString = function () {\r\n                    this.syncMapFields_();\r\n                    return this.array.toString();\r\n                });\r\n                jspb.Message.prototype.getExtension = function (a) {\r\n                    if (this.extensionObject_) {\r\n                        this.wrappers_ || (this.wrappers_ = {});\r\n                        var b = a.fieldIndex;\r\n                        if (a.isRepeated) {\r\n                            if (a.isMessageType())\r\n                                return this.wrappers_[b] || (this.wrappers_[b] = goog.array.map(this.extensionObject_[b] || [], function (b) {\r\n                                    return new a.ctor(b);\r\n                                })), this.wrappers_[b];\r\n                        }\r\n                        else if (a.isMessageType())\r\n                            return !this.wrappers_[b] && this.extensionObject_[b] && (this.wrappers_[b] = new a.ctor(this.extensionObject_[b])), this.wrappers_[b];\r\n                        return this.extensionObject_[b];\r\n                    }\r\n                };\r\n                jspb.Message.prototype.setExtension = function (a, b) {\r\n                    this.wrappers_ || (this.wrappers_ = {});\r\n                    jspb.Message.maybeInitEmptyExtensionObject_(this);\r\n                    var c = a.fieldIndex;\r\n                    a.isRepeated ? (b = b || [], a.isMessageType() ? (this.wrappers_[c] = b, this.extensionObject_[c] = goog.array.map(b, function (a) {\r\n                        return a.toArray();\r\n                    })) : this.extensionObject_[c] = b) : a.isMessageType() ? (this.wrappers_[c] = b, this.extensionObject_[c] = b ? b.toArray() : b) : this.extensionObject_[c] = b;\r\n                    return this;\r\n                };\r\n                jspb.Message.difference = function (a, b) {\r\n                    if (!(a instanceof b.constructor))\r\n                        throw Error(\"Messages have different types.\");\r\n                    var c = a.toArray(), d = b.toArray(), e = [], f = 0, g = c.length > d.length ? c.length : d.length;\r\n                    a.getJsPbMessageId() && (e[0] = a.getJsPbMessageId(), f = 1);\r\n                    for (; f < g; f++)\r\n                        jspb.Message.compareFields(c[f], d[f]) || (e[f] = d[f]);\r\n                    return new a.constructor(e);\r\n                };\r\n                jspb.Message.equals = function (a, b) {\r\n                    return a == b || !(!a || !b) && a instanceof b.constructor && jspb.Message.compareFields(a.toArray(), b.toArray());\r\n                };\r\n                jspb.Message.compareExtensions = function (a, b) {\r\n                    a = a || {};\r\n                    b = b || {};\r\n                    var c = {}, d;\r\n                    for (d in a)\r\n                        c[d] = 0;\r\n                    for (d in b)\r\n                        c[d] = 0;\r\n                    for (d in c)\r\n                        if (!jspb.Message.compareFields(a[d], b[d]))\r\n                            return !1;\r\n                    return !0;\r\n                };\r\n                jspb.Message.compareFields = function (a, b) {\r\n                    if (a == b)\r\n                        return !0;\r\n                    if (!goog.isObject(a) || !goog.isObject(b) || a.constructor != b.constructor)\r\n                        return !1;\r\n                    if (jspb.Message.SUPPORTS_UINT8ARRAY_ && a.constructor === Uint8Array) {\r\n                        if (a.length != b.length)\r\n                            return !1;\r\n                        for (var c = 0; c < a.length; c++)\r\n                            if (a[c] != b[c])\r\n                                return !1;\r\n                        return !0;\r\n                    }\r\n                    if (a.constructor === Array) {\r\n                        for (var d = void 0, e = void 0, f = Math.max(a.length, b.length), c = 0; c < f; c++) {\r\n                            var g = a[c], h = b[c];\r\n                            g && g.constructor == Object && (goog.asserts.assert(void 0 === d), goog.asserts.assert(c === a.length - 1),\r\n                                d = g, g = void 0);\r\n                            h && h.constructor == Object && (goog.asserts.assert(void 0 === e), goog.asserts.assert(c === b.length - 1), e = h, h = void 0);\r\n                            if (!jspb.Message.compareFields(g, h))\r\n                                return !1;\r\n                        }\r\n                        return d || e ? (d = d || {}, e = e || {}, jspb.Message.compareExtensions(d, e)) : !0;\r\n                    }\r\n                    if (a.constructor === Object)\r\n                        return jspb.Message.compareExtensions(a, b);\r\n                    throw Error(\"Invalid type in JSPB array\");\r\n                };\r\n                jspb.Message.prototype.cloneMessage = function () {\r\n                    return jspb.Message.cloneMessage(this);\r\n                };\r\n                jspb.Message.prototype.clone = function () {\r\n                    return jspb.Message.cloneMessage(this);\r\n                };\r\n                jspb.Message.clone = function (a) {\r\n                    return jspb.Message.cloneMessage(a);\r\n                };\r\n                jspb.Message.cloneMessage = function (a) {\r\n                    return new a.constructor(jspb.Message.clone_(a.toArray()));\r\n                };\r\n                jspb.Message.copyInto = function (a, b) {\r\n                    goog.asserts.assertInstanceof(a, jspb.Message);\r\n                    goog.asserts.assertInstanceof(b, jspb.Message);\r\n                    goog.asserts.assert(a.constructor == b.constructor, \"Copy source and target message should have the same type.\");\r\n                    for (var c = jspb.Message.clone(a), d = b.toArray(), e = c.toArray(), f = d.length = 0; f < e.length; f++)\r\n                        d[f] = e[f];\r\n                    b.wrappers_ = c.wrappers_;\r\n                    b.extensionObject_ = c.extensionObject_;\r\n                };\r\n                jspb.Message.clone_ = function (a) {\r\n                    var b;\r\n                    if (goog.isArray(a)) {\r\n                        for (var c = Array(a.length), d = 0; d < a.length; d++)\r\n                            null != (b = a[d]) && (c[d] = \"object\" == typeof b ? jspb.Message.clone_(b) : b);\r\n                        return c;\r\n                    }\r\n                    if (jspb.Message.SUPPORTS_UINT8ARRAY_ && a instanceof Uint8Array)\r\n                        return new Uint8Array(a);\r\n                    c = {};\r\n                    for (d in a)\r\n                        null != (b = a[d]) && (c[d] = \"object\" == typeof b ? jspb.Message.clone_(b) : b);\r\n                    return c;\r\n                };\r\n                jspb.Message.registerMessageType = function (a, b) {\r\n                    jspb.Message.registry_[a] = b;\r\n                    b.messageId = a;\r\n                };\r\n                jspb.Message.registry_ = {};\r\n                jspb.Message.messageSetExtensions = {};\r\n                jspb.Message.messageSetExtensionsBinary = {};\r\n                jspb.arith = {};\r\n                jspb.arith.UInt64 = function (a, b) {\r\n                    this.lo = a;\r\n                    this.hi = b;\r\n                };\r\n                jspb.arith.UInt64.prototype.cmp = function (a) {\r\n                    return this.hi < a.hi || this.hi == a.hi && this.lo < a.lo ? -1 : this.hi == a.hi && this.lo == a.lo ? 0 : 1;\r\n                };\r\n                jspb.arith.UInt64.prototype.rightShift = function () {\r\n                    return new jspb.arith.UInt64((this.lo >>> 1 | (this.hi & 1) << 31) >>> 0, this.hi >>> 1 >>> 0);\r\n                };\r\n                jspb.arith.UInt64.prototype.leftShift = function () {\r\n                    return new jspb.arith.UInt64(this.lo << 1 >>> 0, (this.hi << 1 | this.lo >>> 31) >>> 0);\r\n                };\r\n                jspb.arith.UInt64.prototype.msb = function () {\r\n                    return !!(this.hi & 2147483648);\r\n                };\r\n                jspb.arith.UInt64.prototype.lsb = function () {\r\n                    return !!(this.lo & 1);\r\n                };\r\n                jspb.arith.UInt64.prototype.zero = function () {\r\n                    return 0 == this.lo && 0 == this.hi;\r\n                };\r\n                jspb.arith.UInt64.prototype.add = function (a) {\r\n                    return new jspb.arith.UInt64((this.lo + a.lo & 4294967295) >>> 0 >>> 0, ((this.hi + a.hi & 4294967295) >>> 0) + (4294967296 <= this.lo + a.lo ? 1 : 0) >>> 0);\r\n                };\r\n                jspb.arith.UInt64.prototype.sub = function (a) {\r\n                    return new jspb.arith.UInt64((this.lo - a.lo & 4294967295) >>> 0 >>> 0, ((this.hi - a.hi & 4294967295) >>> 0) - (0 > this.lo - a.lo ? 1 : 0) >>> 0);\r\n                };\r\n                jspb.arith.UInt64.mul32x32 = function (a, b) {\r\n                    for (var c = a & 65535, d = a >>> 16, e = b & 65535, f = b >>> 16, g = c * e + 65536 * (c * f & 65535) + 65536 * (d * e & 65535), c = d * f + (c * f >>> 16) + (d * e >>> 16); 4294967296 <= g;)\r\n                        g -= 4294967296, c += 1;\r\n                    return new jspb.arith.UInt64(g >>> 0, c >>> 0);\r\n                };\r\n                jspb.arith.UInt64.prototype.mul = function (a) {\r\n                    var b = jspb.arith.UInt64.mul32x32(this.lo, a);\r\n                    a = jspb.arith.UInt64.mul32x32(this.hi, a);\r\n                    a.hi = a.lo;\r\n                    a.lo = 0;\r\n                    return b.add(a);\r\n                };\r\n                jspb.arith.UInt64.prototype.div = function (a) {\r\n                    if (0 == a)\r\n                        return [];\r\n                    var b = new jspb.arith.UInt64(0, 0), c = new jspb.arith.UInt64(this.lo, this.hi);\r\n                    a = new jspb.arith.UInt64(a, 0);\r\n                    for (var d = new jspb.arith.UInt64(1, 0); !a.msb();)\r\n                        a = a.leftShift(), d = d.leftShift();\r\n                    for (; !d.zero();)\r\n                        0 >= a.cmp(c) && (b = b.add(d), c = c.sub(a)), a = a.rightShift(), d = d.rightShift();\r\n                    return [b, c];\r\n                };\r\n                jspb.arith.UInt64.prototype.toString = function () {\r\n                    for (var a = \"\", b = this; !b.zero();)\r\n                        var b = b.div(10), c = b[0], a = b[1].lo + a, b = c;\r\n                    \"\" == a && (a = \"0\");\r\n                    return a;\r\n                };\r\n                jspb.arith.UInt64.fromString = function (a) {\r\n                    for (var b = new jspb.arith.UInt64(0, 0), c = new jspb.arith.UInt64(0, 0), d = 0; d < a.length; d++) {\r\n                        if (\"0\" > a[d] || \"9\" < a[d])\r\n                            return null;\r\n                        var e = parseInt(a[d], 10);\r\n                        c.lo = e;\r\n                        b = b.mul(10).add(c);\r\n                    }\r\n                    return b;\r\n                };\r\n                jspb.arith.UInt64.prototype.clone = function () {\r\n                    return new jspb.arith.UInt64(this.lo, this.hi);\r\n                };\r\n                jspb.arith.Int64 = function (a, b) {\r\n                    this.lo = a;\r\n                    this.hi = b;\r\n                };\r\n                jspb.arith.Int64.prototype.add = function (a) {\r\n                    return new jspb.arith.Int64((this.lo + a.lo & 4294967295) >>> 0 >>> 0, ((this.hi + a.hi & 4294967295) >>> 0) + (4294967296 <= this.lo + a.lo ? 1 : 0) >>> 0);\r\n                };\r\n                jspb.arith.Int64.prototype.sub = function (a) {\r\n                    return new jspb.arith.Int64((this.lo - a.lo & 4294967295) >>> 0 >>> 0, ((this.hi - a.hi & 4294967295) >>> 0) - (0 > this.lo - a.lo ? 1 : 0) >>> 0);\r\n                };\r\n                jspb.arith.Int64.prototype.clone = function () {\r\n                    return new jspb.arith.Int64(this.lo, this.hi);\r\n                };\r\n                jspb.arith.Int64.prototype.toString = function () {\r\n                    var a = 0 != (this.hi & 2147483648), b = new jspb.arith.UInt64(this.lo, this.hi);\r\n                    a && (b = (new jspb.arith.UInt64(0, 0)).sub(b));\r\n                    return (a ? \"-\" : \"\") + b.toString();\r\n                };\r\n                jspb.arith.Int64.fromString = function (a) {\r\n                    var b = 0 < a.length && \"-\" == a[0];\r\n                    b && (a = a.substring(1));\r\n                    a = jspb.arith.UInt64.fromString(a);\r\n                    if (null === a)\r\n                        return null;\r\n                    b && (a = (new jspb.arith.UInt64(0, 0)).sub(a));\r\n                    return new jspb.arith.Int64(a.lo, a.hi);\r\n                };\r\n                jspb.BinaryConstants = {};\r\n                jspb.ConstBinaryMessage = function () {\r\n                };\r\n                jspb.BinaryMessage = function () {\r\n                };\r\n                jspb.BinaryConstants.FieldType = {\r\n                    INVALID: -1,\r\n                    DOUBLE: 1,\r\n                    FLOAT: 2,\r\n                    INT64: 3,\r\n                    UINT64: 4,\r\n                    INT32: 5,\r\n                    FIXED64: 6,\r\n                    FIXED32: 7,\r\n                    BOOL: 8,\r\n                    STRING: 9,\r\n                    GROUP: 10,\r\n                    MESSAGE: 11,\r\n                    BYTES: 12,\r\n                    UINT32: 13,\r\n                    ENUM: 14,\r\n                    SFIXED32: 15,\r\n                    SFIXED64: 16,\r\n                    SINT32: 17,\r\n                    SINT64: 18,\r\n                    FHASH64: 30,\r\n                    VHASH64: 31\r\n                };\r\n                jspb.BinaryConstants.WireType = {\r\n                    INVALID: -1,\r\n                    VARINT: 0,\r\n                    FIXED64: 1,\r\n                    DELIMITED: 2,\r\n                    START_GROUP: 3,\r\n                    END_GROUP: 4,\r\n                    FIXED32: 5\r\n                };\r\n                jspb.BinaryConstants.FieldTypeToWireType = function (a) {\r\n                    var b = jspb.BinaryConstants.FieldType, c = jspb.BinaryConstants.WireType;\r\n                    switch (a) {\r\n                        case b.INT32:\r\n                        case b.INT64:\r\n                        case b.UINT32:\r\n                        case b.UINT64:\r\n                        case b.SINT32:\r\n                        case b.SINT64:\r\n                        case b.BOOL:\r\n                        case b.ENUM:\r\n                        case b.VHASH64:\r\n                            return c.VARINT;\r\n                        case b.DOUBLE:\r\n                        case b.FIXED64:\r\n                        case b.SFIXED64:\r\n                        case b.FHASH64:\r\n                            return c.FIXED64;\r\n                        case b.STRING:\r\n                        case b.MESSAGE:\r\n                        case b.BYTES:\r\n                            return c.DELIMITED;\r\n                        case b.FLOAT:\r\n                        case b.FIXED32:\r\n                        case b.SFIXED32:\r\n                            return c.FIXED32;\r\n                        default:\r\n                            return c.INVALID;\r\n                    }\r\n                };\r\n                jspb.BinaryConstants.INVALID_FIELD_NUMBER = -1;\r\n                jspb.BinaryConstants.FLOAT32_EPS = 1.401298464324817E-45;\r\n                jspb.BinaryConstants.FLOAT32_MIN = 1.1754943508222875E-38;\r\n                jspb.BinaryConstants.FLOAT32_MAX = 3.4028234663852886E38;\r\n                jspb.BinaryConstants.FLOAT64_EPS = 4.9E-324;\r\n                jspb.BinaryConstants.FLOAT64_MIN = 2.2250738585072014E-308;\r\n                jspb.BinaryConstants.FLOAT64_MAX = 1.7976931348623157E308;\r\n                jspb.BinaryConstants.TWO_TO_20 = 1048576;\r\n                jspb.BinaryConstants.TWO_TO_23 = 8388608;\r\n                jspb.BinaryConstants.TWO_TO_31 = 2147483648;\r\n                jspb.BinaryConstants.TWO_TO_32 = 4294967296;\r\n                jspb.BinaryConstants.TWO_TO_52 = 4503599627370496;\r\n                jspb.BinaryConstants.TWO_TO_63 = 0x7fffffffffffffff;\r\n                jspb.BinaryConstants.TWO_TO_64 = 1.8446744073709552E19;\r\n                jspb.BinaryConstants.ZERO_HASH = \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\";\r\n                jspb.utils = {};\r\n                jspb.utils.split64Low = 0;\r\n                jspb.utils.split64High = 0;\r\n                jspb.utils.splitUint64 = function (a) {\r\n                    var b = a >>> 0;\r\n                    a = Math.floor((a - b) / jspb.BinaryConstants.TWO_TO_32) >>> 0;\r\n                    jspb.utils.split64Low = b;\r\n                    jspb.utils.split64High = a;\r\n                };\r\n                jspb.utils.splitInt64 = function (a) {\r\n                    var b = 0 > a;\r\n                    a = Math.abs(a);\r\n                    var c = a >>> 0;\r\n                    a = Math.floor((a - c) / jspb.BinaryConstants.TWO_TO_32);\r\n                    a >>>= 0;\r\n                    b && (a = ~a >>> 0, c = (~c >>> 0) + 1, 4294967295 < c && (c = 0, a++, 4294967295 < a && (a = 0)));\r\n                    jspb.utils.split64Low = c;\r\n                    jspb.utils.split64High = a;\r\n                };\r\n                jspb.utils.splitZigzag64 = function (a) {\r\n                    var b = 0 > a;\r\n                    a = 2 * Math.abs(a);\r\n                    jspb.utils.splitUint64(a);\r\n                    a = jspb.utils.split64Low;\r\n                    var c = jspb.utils.split64High;\r\n                    b && (0 == a ? 0 == c ? c = a = 4294967295 : (c--, a = 4294967295) : a--);\r\n                    jspb.utils.split64Low = a;\r\n                    jspb.utils.split64High = c;\r\n                };\r\n                jspb.utils.splitFloat32 = function (a) {\r\n                    var b = 0 > a ? 1 : 0;\r\n                    a = b ? -a : a;\r\n                    var c;\r\n                    0 === a ? 0 < 1 / a ? (jspb.utils.split64High = 0, jspb.utils.split64Low = 0) : (jspb.utils.split64High = 0, jspb.utils.split64Low = 2147483648) : isNaN(a) ? (jspb.utils.split64High = 0, jspb.utils.split64Low = 2147483647) : a > jspb.BinaryConstants.FLOAT32_MAX ? (jspb.utils.split64High = 0, jspb.utils.split64Low = (b << 31 | 2139095040) >>> 0) : a < jspb.BinaryConstants.FLOAT32_MIN ? (a = Math.round(a / Math.pow(2, -149)), jspb.utils.split64High = 0, jspb.utils.split64Low = (b << 31 | a) >>> 0) : (c = Math.floor(Math.log(a) /\r\n                        Math.LN2), a *= Math.pow(2, -c), a = Math.round(a * jspb.BinaryConstants.TWO_TO_23) & 8388607, jspb.utils.split64High = 0, jspb.utils.split64Low = (b << 31 | c + 127 << 23 | a) >>> 0);\r\n                };\r\n                jspb.utils.splitFloat64 = function (a) {\r\n                    var b = 0 > a ? 1 : 0;\r\n                    a = b ? -a : a;\r\n                    if (0 === a)\r\n                        jspb.utils.split64High = 0 < 1 / a ? 0 : 2147483648, jspb.utils.split64Low = 0;\r\n                    else if (isNaN(a))\r\n                        jspb.utils.split64High = 2147483647, jspb.utils.split64Low = 4294967295;\r\n                    else if (a > jspb.BinaryConstants.FLOAT64_MAX)\r\n                        jspb.utils.split64High = (b << 31 | 2146435072) >>> 0, jspb.utils.split64Low = 0;\r\n                    else if (a < jspb.BinaryConstants.FLOAT64_MIN) {\r\n                        var c = a / Math.pow(2, -1074);\r\n                        a = c / jspb.BinaryConstants.TWO_TO_32;\r\n                        jspb.utils.split64High = (b << 31 | a) >>> 0;\r\n                        jspb.utils.split64Low = c >>> 0;\r\n                    }\r\n                    else {\r\n                        var d = Math.floor(Math.log(a) / Math.LN2);\r\n                        1024 == d && (d = 1023);\r\n                        c = a * Math.pow(2, -d);\r\n                        a = c * jspb.BinaryConstants.TWO_TO_20 & 1048575;\r\n                        c = c * jspb.BinaryConstants.TWO_TO_52 >>> 0;\r\n                        jspb.utils.split64High = (b << 31 | d + 1023 << 20 | a) >>> 0;\r\n                        jspb.utils.split64Low = c;\r\n                    }\r\n                };\r\n                jspb.utils.splitHash64 = function (a) {\r\n                    var b = a.charCodeAt(0), c = a.charCodeAt(1), d = a.charCodeAt(2), e = a.charCodeAt(3), f = a.charCodeAt(4), g = a.charCodeAt(5), h = a.charCodeAt(6);\r\n                    a = a.charCodeAt(7);\r\n                    jspb.utils.split64Low = b + (c << 8) + (d << 16) + (e << 24) >>> 0;\r\n                    jspb.utils.split64High = f + (g << 8) + (h << 16) + (a << 24) >>> 0;\r\n                };\r\n                jspb.utils.joinUint64 = function (a, b) {\r\n                    return b * jspb.BinaryConstants.TWO_TO_32 + a;\r\n                };\r\n                jspb.utils.joinInt64 = function (a, b) {\r\n                    var c = b & 2147483648;\r\n                    c && (a = ~a + 1 >>> 0, b = ~b >>> 0, 0 == a && (b = b + 1 >>> 0));\r\n                    var d = jspb.utils.joinUint64(a, b);\r\n                    return c ? -d : d;\r\n                };\r\n                jspb.utils.joinZigzag64 = function (a, b) {\r\n                    var c = a & 1;\r\n                    a = (a >>> 1 | b << 31) >>> 0;\r\n                    b >>>= 1;\r\n                    c && (a = a + 1 >>> 0, 0 == a && (b = b + 1 >>> 0));\r\n                    var d = jspb.utils.joinUint64(a, b);\r\n                    return c ? -d : d;\r\n                };\r\n                jspb.utils.joinFloat32 = function (a, b) {\r\n                    var c = 2 * (a >> 31) + 1, d = a >>> 23 & 255, e = a & 8388607;\r\n                    return 255 == d ? e ? NaN : Infinity * c : 0 == d ? c * Math.pow(2, -149) * e : c * Math.pow(2, d - 150) * (e + Math.pow(2, 23));\r\n                };\r\n                jspb.utils.joinFloat64 = function (a, b) {\r\n                    var c = 2 * (b >> 31) + 1, d = b >>> 20 & 2047, e = jspb.BinaryConstants.TWO_TO_32 * (b & 1048575) + a;\r\n                    return 2047 == d ? e ? NaN : Infinity * c : 0 == d ? c * Math.pow(2, -1074) * e : c * Math.pow(2, d - 1075) * (e + jspb.BinaryConstants.TWO_TO_52);\r\n                };\r\n                jspb.utils.joinHash64 = function (a, b) {\r\n                    return String.fromCharCode(a >>> 0 & 255, a >>> 8 & 255, a >>> 16 & 255, a >>> 24 & 255, b >>> 0 & 255, b >>> 8 & 255, b >>> 16 & 255, b >>> 24 & 255);\r\n                };\r\n                jspb.utils.DIGITS = \"0123456789abcdef\".split(\"\");\r\n                jspb.utils.joinUnsignedDecimalString = function (a, b) {\r\n                    function c(a) {\r\n                        for (var b = 1E7, c = 0; 7 > c; c++) {\r\n                            var b = b / 10, d = a / b % 10 >>> 0;\r\n                            if (0 != d || h)\r\n                                h = !0, k += g[d];\r\n                        }\r\n                    }\r\n                    if (2097151 >= b)\r\n                        return \"\" + (jspb.BinaryConstants.TWO_TO_32 * b + a);\r\n                    var d = (a >>> 24 | b << 8) >>> 0 & 16777215, e = b >> 16 & 65535, f = (a & 16777215) + 6777216 * d + 6710656 * e, d = d + 8147497 * e, e = 2 * e;\r\n                    1E7 <= f && (d += Math.floor(f / 1E7), f %= 1E7);\r\n                    1E7 <= d && (e += Math.floor(d / 1E7), d %= 1E7);\r\n                    var g = jspb.utils.DIGITS, h = !1, k = \"\";\r\n                    (e || h) && c(e);\r\n                    (d || h) && c(d);\r\n                    (f || h) && c(f);\r\n                    return k;\r\n                };\r\n                jspb.utils.joinSignedDecimalString = function (a, b) {\r\n                    var c = b & 2147483648;\r\n                    c && (a = ~a + 1 >>> 0, b = ~b + (0 == a ? 1 : 0) >>> 0);\r\n                    var d = jspb.utils.joinUnsignedDecimalString(a, b);\r\n                    return c ? \"-\" + d : d;\r\n                };\r\n                jspb.utils.hash64ToDecimalString = function (a, b) {\r\n                    jspb.utils.splitHash64(a);\r\n                    var c = jspb.utils.split64Low, d = jspb.utils.split64High;\r\n                    return b ? jspb.utils.joinSignedDecimalString(c, d) : jspb.utils.joinUnsignedDecimalString(c, d);\r\n                };\r\n                jspb.utils.hash64ArrayToDecimalStrings = function (a, b) {\r\n                    for (var c = Array(a.length), d = 0; d < a.length; d++)\r\n                        c[d] = jspb.utils.hash64ToDecimalString(a[d], b);\r\n                    return c;\r\n                };\r\n                jspb.utils.decimalStringToHash64 = function (a) {\r\n                    function b(a, b) {\r\n                        for (var c = 0; 8 > c && (1 !== a || 0 < b); c++) {\r\n                            var d = a * e[c] + b;\r\n                            e[c] = d & 255;\r\n                            b = d >>> 8;\r\n                        }\r\n                    }\r\n                    function c() {\r\n                        for (var a = 0; 8 > a; a++)\r\n                            e[a] = ~e[a] & 255;\r\n                    }\r\n                    goog.asserts.assert(0 < a.length);\r\n                    var d = !1;\r\n                    \"-\" === a[0] && (d = !0, a = a.slice(1));\r\n                    for (var e = [0, 0, 0, 0, 0, 0, 0, 0], f = 0; f < a.length; f++)\r\n                        b(10, jspb.utils.DIGITS.indexOf(a[f]));\r\n                    d && (c(), b(1, 1));\r\n                    return goog.crypt.byteArrayToString(e);\r\n                };\r\n                jspb.utils.splitDecimalString = function (a) {\r\n                    jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(a));\r\n                };\r\n                jspb.utils.hash64ToHexString = function (a) {\r\n                    var b = Array(18);\r\n                    b[0] = \"0\";\r\n                    b[1] = \"x\";\r\n                    for (var c = 0; 8 > c; c++) {\r\n                        var d = a.charCodeAt(7 - c);\r\n                        b[2 * c + 2] = jspb.utils.DIGITS[d >> 4];\r\n                        b[2 * c + 3] = jspb.utils.DIGITS[d & 15];\r\n                    }\r\n                    return b.join(\"\");\r\n                };\r\n                jspb.utils.hexStringToHash64 = function (a) {\r\n                    a = a.toLowerCase();\r\n                    goog.asserts.assert(18 == a.length);\r\n                    goog.asserts.assert(\"0\" == a[0]);\r\n                    goog.asserts.assert(\"x\" == a[1]);\r\n                    for (var b = \"\", c = 0; 8 > c; c++)\r\n                        var d = jspb.utils.DIGITS.indexOf(a[2 * c + 2]), e = jspb.utils.DIGITS.indexOf(a[2 * c + 3]), b = String.fromCharCode(16 * d + e) + b;\r\n                    return b;\r\n                };\r\n                jspb.utils.hash64ToNumber = function (a, b) {\r\n                    jspb.utils.splitHash64(a);\r\n                    var c = jspb.utils.split64Low, d = jspb.utils.split64High;\r\n                    return b ? jspb.utils.joinInt64(c, d) : jspb.utils.joinUint64(c, d);\r\n                };\r\n                jspb.utils.numberToHash64 = function (a) {\r\n                    jspb.utils.splitInt64(a);\r\n                    return jspb.utils.joinHash64(jspb.utils.split64Low, jspb.utils.split64High);\r\n                };\r\n                jspb.utils.countVarints = function (a, b, c) {\r\n                    for (var d = 0, e = b; e < c; e++)\r\n                        d += a[e] >> 7;\r\n                    return c - b - d;\r\n                };\r\n                jspb.utils.countVarintFields = function (a, b, c, d) {\r\n                    var e = 0;\r\n                    d = 8 * d + jspb.BinaryConstants.WireType.VARINT;\r\n                    if (128 > d)\r\n                        for (; b < c && a[b++] == d;)\r\n                            for (e++;;) {\r\n                                var f = a[b++];\r\n                                if (0 == (f & 128))\r\n                                    break;\r\n                            }\r\n                    else\r\n                        for (; b < c;) {\r\n                            for (f = d; 128 < f;) {\r\n                                if (a[b] != (f & 127 | 128))\r\n                                    return e;\r\n                                b++;\r\n                                f >>= 7;\r\n                            }\r\n                            if (a[b++] != f)\r\n                                break;\r\n                            for (e++; f = a[b++], 0 != (f & 128);)\r\n                                ;\r\n                        }\r\n                    return e;\r\n                };\r\n                jspb.utils.countFixedFields_ = function (a, b, c, d, e) {\r\n                    var f = 0;\r\n                    if (128 > d)\r\n                        for (; b < c && a[b++] == d;)\r\n                            f++, b += e;\r\n                    else\r\n                        for (; b < c;) {\r\n                            for (var g = d; 128 < g;) {\r\n                                if (a[b++] != (g & 127 | 128))\r\n                                    return f;\r\n                                g >>= 7;\r\n                            }\r\n                            if (a[b++] != g)\r\n                                break;\r\n                            f++;\r\n                            b += e;\r\n                        }\r\n                    return f;\r\n                };\r\n                jspb.utils.countFixed32Fields = function (a, b, c, d) {\r\n                    return jspb.utils.countFixedFields_(a, b, c, 8 * d + jspb.BinaryConstants.WireType.FIXED32, 4);\r\n                };\r\n                jspb.utils.countFixed64Fields = function (a, b, c, d) {\r\n                    return jspb.utils.countFixedFields_(a, b, c, 8 * d + jspb.BinaryConstants.WireType.FIXED64, 8);\r\n                };\r\n                jspb.utils.countDelimitedFields = function (a, b, c, d) {\r\n                    var e = 0;\r\n                    for (d = 8 * d + jspb.BinaryConstants.WireType.DELIMITED; b < c;) {\r\n                        for (var f = d; 128 < f;) {\r\n                            if (a[b++] != (f & 127 | 128))\r\n                                return e;\r\n                            f >>= 7;\r\n                        }\r\n                        if (a[b++] != f)\r\n                            break;\r\n                        e++;\r\n                        for (var g = 0, h = 1; f = a[b++], g += (f & 127) * h, h *= 128, 0 != (f & 128);)\r\n                            ;\r\n                        b += g;\r\n                    }\r\n                    return e;\r\n                };\r\n                jspb.utils.debugBytesToTextFormat = function (a) {\r\n                    var b = \"\\\"\";\r\n                    if (a) {\r\n                        a = jspb.utils.byteSourceToUint8Array(a);\r\n                        for (var c = 0; c < a.length; c++)\r\n                            b += \"\\\\x\", 16 > a[c] && (b += \"0\"), b += a[c].toString(16);\r\n                    }\r\n                    return b + \"\\\"\";\r\n                };\r\n                jspb.utils.debugScalarToTextFormat = function (a) {\r\n                    return goog.isString(a) ? goog.string.quote(a) : a.toString();\r\n                };\r\n                jspb.utils.stringToByteArray = function (a) {\r\n                    for (var b = new Uint8Array(a.length), c = 0; c < a.length; c++) {\r\n                        var d = a.charCodeAt(c);\r\n                        if (255 < d)\r\n                            throw Error(\"Conversion error: string contains codepoint outside of byte range\");\r\n                        b[c] = d;\r\n                    }\r\n                    return b;\r\n                };\r\n                jspb.utils.byteSourceToUint8Array = function (a) {\r\n                    if (a.constructor === Uint8Array)\r\n                        return a;\r\n                    if (a.constructor === ArrayBuffer || a.constructor === Array)\r\n                        return new Uint8Array(a);\r\n                    if (a.constructor === String)\r\n                        return goog.crypt.base64.decodeStringToUint8Array(a);\r\n                    goog.asserts.fail(\"Type not convertible to Uint8Array.\");\r\n                    return new Uint8Array(0);\r\n                };\r\n                jspb.BinaryEncoder = function () {\r\n                    this.buffer_ = [];\r\n                };\r\n                jspb.BinaryEncoder.prototype.length = function () {\r\n                    return this.buffer_.length;\r\n                };\r\n                jspb.BinaryEncoder.prototype.end = function () {\r\n                    var a = this.buffer_;\r\n                    this.buffer_ = [];\r\n                    return a;\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeSplitVarint64 = function (a, b) {\r\n                    goog.asserts.assert(a == Math.floor(a));\r\n                    goog.asserts.assert(b == Math.floor(b));\r\n                    goog.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_32);\r\n                    for (goog.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_32); 0 < b || 127 < a;)\r\n                        this.buffer_.push(a & 127 | 128), a = (a >>> 7 | b << 25) >>> 0, b >>>= 7;\r\n                    this.buffer_.push(a);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeSplitFixed64 = function (a, b) {\r\n                    goog.asserts.assert(a == Math.floor(a));\r\n                    goog.asserts.assert(b == Math.floor(b));\r\n                    goog.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_32);\r\n                    goog.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_32);\r\n                    this.writeUint32(a);\r\n                    this.writeUint32(b);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeUnsignedVarint32 = function (a) {\r\n                    goog.asserts.assert(a == Math.floor(a));\r\n                    for (goog.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_32); 127 < a;)\r\n                        this.buffer_.push(a & 127 | 128), a >>>= 7;\r\n                    this.buffer_.push(a);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeSignedVarint32 = function (a) {\r\n                    goog.asserts.assert(a == Math.floor(a));\r\n                    goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_31 && a < jspb.BinaryConstants.TWO_TO_31);\r\n                    if (0 <= a)\r\n                        this.writeUnsignedVarint32(a);\r\n                    else {\r\n                        for (var b = 0; 9 > b; b++)\r\n                            this.buffer_.push(a & 127 | 128), a >>= 7;\r\n                        this.buffer_.push(1);\r\n                    }\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeUnsignedVarint64 = function (a) {\r\n                    goog.asserts.assert(a == Math.floor(a));\r\n                    goog.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_64);\r\n                    jspb.utils.splitInt64(a);\r\n                    this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeSignedVarint64 = function (a) {\r\n                    goog.asserts.assert(a == Math.floor(a));\r\n                    goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_63 && a < jspb.BinaryConstants.TWO_TO_63);\r\n                    jspb.utils.splitInt64(a);\r\n                    this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeZigzagVarint32 = function (a) {\r\n                    goog.asserts.assert(a == Math.floor(a));\r\n                    goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_31 && a < jspb.BinaryConstants.TWO_TO_31);\r\n                    this.writeUnsignedVarint32((a << 1 ^ a >> 31) >>> 0);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeZigzagVarint64 = function (a) {\r\n                    goog.asserts.assert(a == Math.floor(a));\r\n                    goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_63 && a < jspb.BinaryConstants.TWO_TO_63);\r\n                    jspb.utils.splitZigzag64(a);\r\n                    this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeZigzagVarint64String = function (a) {\r\n                    this.writeZigzagVarint64(parseInt(a, 10));\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeUint8 = function (a) {\r\n                    goog.asserts.assert(a == Math.floor(a));\r\n                    goog.asserts.assert(0 <= a && 256 > a);\r\n                    this.buffer_.push(a >>> 0 & 255);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeUint16 = function (a) {\r\n                    goog.asserts.assert(a == Math.floor(a));\r\n                    goog.asserts.assert(0 <= a && 65536 > a);\r\n                    this.buffer_.push(a >>> 0 & 255);\r\n                    this.buffer_.push(a >>> 8 & 255);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeUint32 = function (a) {\r\n                    goog.asserts.assert(a == Math.floor(a));\r\n                    goog.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_32);\r\n                    this.buffer_.push(a >>> 0 & 255);\r\n                    this.buffer_.push(a >>> 8 & 255);\r\n                    this.buffer_.push(a >>> 16 & 255);\r\n                    this.buffer_.push(a >>> 24 & 255);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeUint64 = function (a) {\r\n                    goog.asserts.assert(a == Math.floor(a));\r\n                    goog.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_64);\r\n                    jspb.utils.splitUint64(a);\r\n                    this.writeUint32(jspb.utils.split64Low);\r\n                    this.writeUint32(jspb.utils.split64High);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeInt8 = function (a) {\r\n                    goog.asserts.assert(a == Math.floor(a));\r\n                    goog.asserts.assert(-128 <= a && 128 > a);\r\n                    this.buffer_.push(a >>> 0 & 255);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeInt16 = function (a) {\r\n                    goog.asserts.assert(a == Math.floor(a));\r\n                    goog.asserts.assert(-32768 <= a && 32768 > a);\r\n                    this.buffer_.push(a >>> 0 & 255);\r\n                    this.buffer_.push(a >>> 8 & 255);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeInt32 = function (a) {\r\n                    goog.asserts.assert(a == Math.floor(a));\r\n                    goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_31 && a < jspb.BinaryConstants.TWO_TO_31);\r\n                    this.buffer_.push(a >>> 0 & 255);\r\n                    this.buffer_.push(a >>> 8 & 255);\r\n                    this.buffer_.push(a >>> 16 & 255);\r\n                    this.buffer_.push(a >>> 24 & 255);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeInt64 = function (a) {\r\n                    goog.asserts.assert(a == Math.floor(a));\r\n                    goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_63 && a < jspb.BinaryConstants.TWO_TO_63);\r\n                    jspb.utils.splitInt64(a);\r\n                    this.writeSplitFixed64(jspb.utils.split64Low, jspb.utils.split64High);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeInt64String = function (a) {\r\n                    goog.asserts.assert(a == Math.floor(a));\r\n                    goog.asserts.assert(+a >= -jspb.BinaryConstants.TWO_TO_63 && +a < jspb.BinaryConstants.TWO_TO_63);\r\n                    jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(a));\r\n                    this.writeSplitFixed64(jspb.utils.split64Low, jspb.utils.split64High);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeFloat = function (a) {\r\n                    goog.asserts.assert(a >= -jspb.BinaryConstants.FLOAT32_MAX && a <= jspb.BinaryConstants.FLOAT32_MAX);\r\n                    jspb.utils.splitFloat32(a);\r\n                    this.writeUint32(jspb.utils.split64Low);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeDouble = function (a) {\r\n                    goog.asserts.assert(a >= -jspb.BinaryConstants.FLOAT64_MAX && a <= jspb.BinaryConstants.FLOAT64_MAX);\r\n                    jspb.utils.splitFloat64(a);\r\n                    this.writeUint32(jspb.utils.split64Low);\r\n                    this.writeUint32(jspb.utils.split64High);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeBool = function (a) {\r\n                    goog.asserts.assert(goog.isBoolean(a) || goog.isNumber(a));\r\n                    this.buffer_.push(a ? 1 : 0);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeEnum = function (a) {\r\n                    goog.asserts.assert(a == Math.floor(a));\r\n                    goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_31 && a < jspb.BinaryConstants.TWO_TO_31);\r\n                    this.writeSignedVarint32(a);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeBytes = function (a) {\r\n                    this.buffer_.push.apply(this.buffer_, a);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeVarintHash64 = function (a) {\r\n                    jspb.utils.splitHash64(a);\r\n                    this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeFixedHash64 = function (a) {\r\n                    jspb.utils.splitHash64(a);\r\n                    this.writeUint32(jspb.utils.split64Low);\r\n                    this.writeUint32(jspb.utils.split64High);\r\n                };\r\n                jspb.BinaryEncoder.prototype.writeString = function (a) {\r\n                    for (var b = this.buffer_.length, c = 0; c < a.length; c++) {\r\n                        var d = a.charCodeAt(c);\r\n                        if (128 > d)\r\n                            this.buffer_.push(d);\r\n                        else if (2048 > d)\r\n                            this.buffer_.push(d >> 6 | 192), this.buffer_.push(d & 63 | 128);\r\n                        else if (65536 > d)\r\n                            if (55296 <= d && 56319 >= d && c + 1 < a.length) {\r\n                                var e = a.charCodeAt(c + 1);\r\n                                56320 <= e && 57343 >= e && (d = 1024 * (d - 55296) + e - 56320 + 65536, this.buffer_.push(d >> 18 | 240), this.buffer_.push(d >> 12 & 63 | 128), this.buffer_.push(d >> 6 & 63 | 128), this.buffer_.push(d & 63 | 128), c++);\r\n                            }\r\n                            else\r\n                                this.buffer_.push(d >>\r\n                                    12 | 224), this.buffer_.push(d >> 6 & 63 | 128), this.buffer_.push(d & 63 | 128);\r\n                    }\r\n                    return this.buffer_.length - b;\r\n                };\r\n                jspb.BinaryWriter = function () {\r\n                    this.blocks_ = [];\r\n                    this.totalLength_ = 0;\r\n                    this.encoder_ = new jspb.BinaryEncoder;\r\n                    this.bookmarks_ = [];\r\n                };\r\n                jspb.BinaryWriter.prototype.appendUint8Array_ = function (a) {\r\n                    var b = this.encoder_.end();\r\n                    this.blocks_.push(b);\r\n                    this.blocks_.push(a);\r\n                    this.totalLength_ += b.length + a.length;\r\n                };\r\n                jspb.BinaryWriter.prototype.beginDelimited_ = function (a) {\r\n                    this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                    a = this.encoder_.end();\r\n                    this.blocks_.push(a);\r\n                    this.totalLength_ += a.length;\r\n                    a.push(this.totalLength_);\r\n                    return a;\r\n                };\r\n                jspb.BinaryWriter.prototype.endDelimited_ = function (a) {\r\n                    var b = a.pop(), b = this.totalLength_ + this.encoder_.length() - b;\r\n                    for (goog.asserts.assert(0 <= b); 127 < b;)\r\n                        a.push(b & 127 | 128), b >>>= 7, this.totalLength_++;\r\n                    a.push(b);\r\n                    this.totalLength_++;\r\n                };\r\n                jspb.BinaryWriter.prototype.writeSerializedMessage = function (a, b, c) {\r\n                    this.appendUint8Array_(a.subarray(b, c));\r\n                };\r\n                jspb.BinaryWriter.prototype.maybeWriteSerializedMessage = function (a, b, c) {\r\n                    null != a && null != b && null != c && this.writeSerializedMessage(a, b, c);\r\n                };\r\n                jspb.BinaryWriter.prototype.reset = function () {\r\n                    this.blocks_ = [];\r\n                    this.encoder_.end();\r\n                    this.totalLength_ = 0;\r\n                    this.bookmarks_ = [];\r\n                };\r\n                jspb.BinaryWriter.prototype.getResultBuffer = function () {\r\n                    goog.asserts.assert(0 == this.bookmarks_.length);\r\n                    for (var a = new Uint8Array(this.totalLength_ + this.encoder_.length()), b = this.blocks_, c = b.length, d = 0, e = 0; e < c; e++) {\r\n                        var f = b[e];\r\n                        a.set(f, d);\r\n                        d += f.length;\r\n                    }\r\n                    b = this.encoder_.end();\r\n                    a.set(b, d);\r\n                    d += b.length;\r\n                    goog.asserts.assert(d == a.length);\r\n                    this.blocks_ = [a];\r\n                    return a;\r\n                };\r\n                jspb.BinaryWriter.prototype.getResultBase64String = function () {\r\n                    return goog.crypt.base64.encodeByteArray(this.getResultBuffer());\r\n                };\r\n                jspb.BinaryWriter.prototype.beginSubMessage = function (a) {\r\n                    this.bookmarks_.push(this.beginDelimited_(a));\r\n                };\r\n                jspb.BinaryWriter.prototype.endSubMessage = function () {\r\n                    goog.asserts.assert(0 <= this.bookmarks_.length);\r\n                    this.endDelimited_(this.bookmarks_.pop());\r\n                };\r\n                jspb.BinaryWriter.prototype.writeFieldHeader_ = function (a, b) {\r\n                    goog.asserts.assert(1 <= a && a == Math.floor(a));\r\n                    this.encoder_.writeUnsignedVarint32(8 * a + b);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeAny = function (a, b, c) {\r\n                    var d = jspb.BinaryConstants.FieldType;\r\n                    switch (a) {\r\n                        case d.DOUBLE:\r\n                            this.writeDouble(b, c);\r\n                            break;\r\n                        case d.FLOAT:\r\n                            this.writeFloat(b, c);\r\n                            break;\r\n                        case d.INT64:\r\n                            this.writeInt64(b, c);\r\n                            break;\r\n                        case d.UINT64:\r\n                            this.writeUint64(b, c);\r\n                            break;\r\n                        case d.INT32:\r\n                            this.writeInt32(b, c);\r\n                            break;\r\n                        case d.FIXED64:\r\n                            this.writeFixed64(b, c);\r\n                            break;\r\n                        case d.FIXED32:\r\n                            this.writeFixed32(b, c);\r\n                            break;\r\n                        case d.BOOL:\r\n                            this.writeBool(b, c);\r\n                            break;\r\n                        case d.STRING:\r\n                            this.writeString(b, c);\r\n                            break;\r\n                        case d.GROUP:\r\n                            goog.asserts.fail(\"Group field type not supported in writeAny()\");\r\n                            break;\r\n                        case d.MESSAGE:\r\n                            goog.asserts.fail(\"Message field type not supported in writeAny()\");\r\n                            break;\r\n                        case d.BYTES:\r\n                            this.writeBytes(b, c);\r\n                            break;\r\n                        case d.UINT32:\r\n                            this.writeUint32(b, c);\r\n                            break;\r\n                        case d.ENUM:\r\n                            this.writeEnum(b, c);\r\n                            break;\r\n                        case d.SFIXED32:\r\n                            this.writeSfixed32(b, c);\r\n                            break;\r\n                        case d.SFIXED64:\r\n                            this.writeSfixed64(b, c);\r\n                            break;\r\n                        case d.SINT32:\r\n                            this.writeSint32(b, c);\r\n                            break;\r\n                        case d.SINT64:\r\n                            this.writeSint64(b, c);\r\n                            break;\r\n                        case d.FHASH64:\r\n                            this.writeFixedHash64(b, c);\r\n                            break;\r\n                        case d.VHASH64:\r\n                            this.writeVarintHash64(b, c);\r\n                            break;\r\n                        default:\r\n                            goog.asserts.fail(\"Invalid field type in writeAny()\");\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writeUnsignedVarint32_ = function (a, b) {\r\n                    null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeUnsignedVarint32(b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeSignedVarint32_ = function (a, b) {\r\n                    null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeUnsignedVarint64_ = function (a, b) {\r\n                    null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeUnsignedVarint64(b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeSignedVarint64_ = function (a, b) {\r\n                    null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint64(b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeZigzagVarint32_ = function (a, b) {\r\n                    null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint32(b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeZigzagVarint64_ = function (a, b) {\r\n                    null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint64(b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeZigzagVarint64String_ = function (a, b) {\r\n                    null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint64String(b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeInt32 = function (a, b) {\r\n                    null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_31 && b < jspb.BinaryConstants.TWO_TO_31), this.writeSignedVarint32_(a, b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeInt32String = function (a, b) {\r\n                    if (null != b) {\r\n                        var c = parseInt(b, 10);\r\n                        goog.asserts.assert(c >= -jspb.BinaryConstants.TWO_TO_31 && c < jspb.BinaryConstants.TWO_TO_31);\r\n                        this.writeSignedVarint32_(a, c);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writeInt64 = function (a, b) {\r\n                    null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_63 && b < jspb.BinaryConstants.TWO_TO_63), this.writeSignedVarint64_(a, b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeInt64String = function (a, b) {\r\n                    if (null != b) {\r\n                        var c = jspb.arith.Int64.fromString(b);\r\n                        this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT);\r\n                        this.encoder_.writeSplitVarint64(c.lo, c.hi);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writeUint32 = function (a, b) {\r\n                    null != b && (goog.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_32), this.writeUnsignedVarint32_(a, b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeUint32String = function (a, b) {\r\n                    if (null != b) {\r\n                        var c = parseInt(b, 10);\r\n                        goog.asserts.assert(0 <= c && c < jspb.BinaryConstants.TWO_TO_32);\r\n                        this.writeUnsignedVarint32_(a, c);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writeUint64 = function (a, b) {\r\n                    null != b && (goog.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_64), this.writeUnsignedVarint64_(a, b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeUint64String = function (a, b) {\r\n                    if (null != b) {\r\n                        var c = jspb.arith.UInt64.fromString(b);\r\n                        this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT);\r\n                        this.encoder_.writeSplitVarint64(c.lo, c.hi);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writeSint32 = function (a, b) {\r\n                    null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_31 && b < jspb.BinaryConstants.TWO_TO_31), this.writeZigzagVarint32_(a, b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeSint64 = function (a, b) {\r\n                    null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_63 && b < jspb.BinaryConstants.TWO_TO_63), this.writeZigzagVarint64_(a, b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeSint64String = function (a, b) {\r\n                    null != b && (goog.asserts.assert(+b >= -jspb.BinaryConstants.TWO_TO_63 && +b < jspb.BinaryConstants.TWO_TO_63), this.writeZigzagVarint64String_(a, b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeFixed32 = function (a, b) {\r\n                    null != b && (goog.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_32), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeUint32(b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeFixed64 = function (a, b) {\r\n                    null != b && (goog.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_64), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeUint64(b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeFixed64String = function (a, b) {\r\n                    if (null != b) {\r\n                        var c = jspb.arith.UInt64.fromString(b);\r\n                        this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64);\r\n                        this.encoder_.writeSplitFixed64(c.lo, c.hi);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writeSfixed32 = function (a, b) {\r\n                    null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_31 && b < jspb.BinaryConstants.TWO_TO_31), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeInt32(b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeSfixed64 = function (a, b) {\r\n                    null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_63 && b < jspb.BinaryConstants.TWO_TO_63), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeInt64(b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeSfixed64String = function (a, b) {\r\n                    if (null != b) {\r\n                        var c = jspb.arith.Int64.fromString(b);\r\n                        this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64);\r\n                        this.encoder_.writeSplitFixed64(c.lo, c.hi);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writeFloat = function (a, b) {\r\n                    null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeFloat(b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeDouble = function (a, b) {\r\n                    null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeDouble(b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeBool = function (a, b) {\r\n                    null != b && (goog.asserts.assert(goog.isBoolean(b) || goog.isNumber(b)), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeBool(b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeEnum = function (a, b) {\r\n                    null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_31 && b < jspb.BinaryConstants.TWO_TO_31), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeString = function (a, b) {\r\n                    if (null != b) {\r\n                        var c = this.beginDelimited_(a);\r\n                        this.encoder_.writeString(b);\r\n                        this.endDelimited_(c);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writeBytes = function (a, b) {\r\n                    if (null != b) {\r\n                        var c = jspb.utils.byteSourceToUint8Array(b);\r\n                        this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                        this.encoder_.writeUnsignedVarint32(c.length);\r\n                        this.appendUint8Array_(c);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writeMessage = function (a, b, c) {\r\n                    null != b && (a = this.beginDelimited_(a), c(b, this), this.endDelimited_(a));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeGroup = function (a, b, c) {\r\n                    null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.START_GROUP), c(b, this), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.END_GROUP));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeFixedHash64 = function (a, b) {\r\n                    null != b && (goog.asserts.assert(8 == b.length), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeFixedHash64(b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeVarintHash64 = function (a, b) {\r\n                    null != b && (goog.asserts.assert(8 == b.length), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeVarintHash64(b));\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedInt32 = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeSignedVarint32_(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedInt32String = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeInt32String(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedInt64 = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeSignedVarint64_(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedInt64String = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeInt64String(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedUint32 = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeUnsignedVarint32_(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedUint32String = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeUint32String(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedUint64 = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeUnsignedVarint64_(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedUint64String = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeUint64String(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedSint32 = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeZigzagVarint32_(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedSint64 = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeZigzagVarint64_(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedSint64String = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeZigzagVarint64String_(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedFixed32 = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeFixed32(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedFixed64 = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeFixed64(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedFixed64String = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeFixed64String(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedSfixed32 = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeSfixed32(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedSfixed64 = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeSfixed64(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedSfixed64String = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeSfixed64String(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedFloat = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeFloat(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedDouble = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeDouble(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedBool = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeBool(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedEnum = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeEnum(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedString = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeString(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedBytes = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeBytes(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedMessage = function (a, b, c) {\r\n                    if (null != b)\r\n                        for (var d = 0; d < b.length; d++) {\r\n                            var e = this.beginDelimited_(a);\r\n                            c(b[d], this);\r\n                            this.endDelimited_(e);\r\n                        }\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedGroup = function (a, b, c) {\r\n                    if (null != b)\r\n                        for (var d = 0; d < b.length; d++)\r\n                            this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.START_GROUP), c(b[d], this), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.END_GROUP);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedFixedHash64 = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeFixedHash64(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writeRepeatedVarintHash64 = function (a, b) {\r\n                    if (null != b)\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.writeVarintHash64(a, b[c]);\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedInt32 = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++)\r\n                            this.encoder_.writeSignedVarint32(b[d]);\r\n                        this.endDelimited_(c);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedInt32String = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++)\r\n                            this.encoder_.writeSignedVarint32(parseInt(b[d], 10));\r\n                        this.endDelimited_(c);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedInt64 = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++)\r\n                            this.encoder_.writeSignedVarint64(b[d]);\r\n                        this.endDelimited_(c);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedInt64String = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++) {\r\n                            var e = jspb.arith.Int64.fromString(b[d]);\r\n                            this.encoder_.writeSplitVarint64(e.lo, e.hi);\r\n                        }\r\n                        this.endDelimited_(c);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedUint32 = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++)\r\n                            this.encoder_.writeUnsignedVarint32(b[d]);\r\n                        this.endDelimited_(c);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedUint32String = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++)\r\n                            this.encoder_.writeUnsignedVarint32(parseInt(b[d], 10));\r\n                        this.endDelimited_(c);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedUint64 = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++)\r\n                            this.encoder_.writeUnsignedVarint64(b[d]);\r\n                        this.endDelimited_(c);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedUint64String = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++) {\r\n                            var e = jspb.arith.UInt64.fromString(b[d]);\r\n                            this.encoder_.writeSplitVarint64(e.lo, e.hi);\r\n                        }\r\n                        this.endDelimited_(c);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedSint32 = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++)\r\n                            this.encoder_.writeZigzagVarint32(b[d]);\r\n                        this.endDelimited_(c);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedSint64 = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++)\r\n                            this.encoder_.writeZigzagVarint64(b[d]);\r\n                        this.endDelimited_(c);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedSint64String = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++)\r\n                            this.encoder_.writeZigzagVarint64(parseInt(b[d], 10));\r\n                        this.endDelimited_(c);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedFixed32 = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                        this.encoder_.writeUnsignedVarint32(4 * b.length);\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.encoder_.writeUint32(b[c]);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedFixed64 = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                        this.encoder_.writeUnsignedVarint32(8 * b.length);\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.encoder_.writeUint64(b[c]);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedFixed64String = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                        this.encoder_.writeUnsignedVarint32(8 * b.length);\r\n                        for (var c = 0; c < b.length; c++) {\r\n                            var d = jspb.arith.UInt64.fromString(b[c]);\r\n                            this.encoder_.writeSplitFixed64(d.lo, d.hi);\r\n                        }\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedSfixed32 = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                        this.encoder_.writeUnsignedVarint32(4 * b.length);\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.encoder_.writeInt32(b[c]);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedSfixed64 = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                        this.encoder_.writeUnsignedVarint32(8 * b.length);\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.encoder_.writeInt64(b[c]);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedSfixed64String = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                        this.encoder_.writeUnsignedVarint32(8 * b.length);\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.encoder_.writeInt64String(b[c]);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedFloat = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                        this.encoder_.writeUnsignedVarint32(4 * b.length);\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.encoder_.writeFloat(b[c]);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedDouble = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                        this.encoder_.writeUnsignedVarint32(8 * b.length);\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.encoder_.writeDouble(b[c]);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedBool = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                        this.encoder_.writeUnsignedVarint32(b.length);\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.encoder_.writeBool(b[c]);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedEnum = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++)\r\n                            this.encoder_.writeEnum(b[d]);\r\n                        this.endDelimited_(c);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedFixedHash64 = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                        this.encoder_.writeUnsignedVarint32(8 * b.length);\r\n                        for (var c = 0; c < b.length; c++)\r\n                            this.encoder_.writeFixedHash64(b[c]);\r\n                    }\r\n                };\r\n                jspb.BinaryWriter.prototype.writePackedVarintHash64 = function (a, b) {\r\n                    if (null != b && b.length) {\r\n                        for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++)\r\n                            this.encoder_.writeVarintHash64(b[d]);\r\n                        this.endDelimited_(c);\r\n                    }\r\n                };\r\n                jspb.BinaryIterator = function (a, b, c) {\r\n                    this.elements_ = this.nextMethod_ = this.decoder_ = null;\r\n                    this.cursor_ = 0;\r\n                    this.nextValue_ = null;\r\n                    this.atEnd_ = !0;\r\n                    this.init_(a, b, c);\r\n                };\r\n                jspb.BinaryIterator.prototype.init_ = function (a, b, c) {\r\n                    a && b && (this.decoder_ = a, this.nextMethod_ = b);\r\n                    this.elements_ = c || null;\r\n                    this.cursor_ = 0;\r\n                    this.nextValue_ = null;\r\n                    this.atEnd_ = !this.decoder_ && !this.elements_;\r\n                    this.next();\r\n                };\r\n                jspb.BinaryIterator.instanceCache_ = [];\r\n                jspb.BinaryIterator.alloc = function (a, b, c) {\r\n                    if (jspb.BinaryIterator.instanceCache_.length) {\r\n                        var d = jspb.BinaryIterator.instanceCache_.pop();\r\n                        d.init_(a, b, c);\r\n                        return d;\r\n                    }\r\n                    return new jspb.BinaryIterator(a, b, c);\r\n                };\r\n                jspb.BinaryIterator.prototype.free = function () {\r\n                    this.clear();\r\n                    100 > jspb.BinaryIterator.instanceCache_.length && jspb.BinaryIterator.instanceCache_.push(this);\r\n                };\r\n                jspb.BinaryIterator.prototype.clear = function () {\r\n                    this.decoder_ && this.decoder_.free();\r\n                    this.elements_ = this.nextMethod_ = this.decoder_ = null;\r\n                    this.cursor_ = 0;\r\n                    this.nextValue_ = null;\r\n                    this.atEnd_ = !0;\r\n                };\r\n                jspb.BinaryIterator.prototype.get = function () {\r\n                    return this.nextValue_;\r\n                };\r\n                jspb.BinaryIterator.prototype.atEnd = function () {\r\n                    return this.atEnd_;\r\n                };\r\n                jspb.BinaryIterator.prototype.next = function () {\r\n                    var a = this.nextValue_;\r\n                    this.decoder_ ? this.decoder_.atEnd() ? (this.nextValue_ = null, this.atEnd_ = !0) : this.nextValue_ = this.nextMethod_.call(this.decoder_) : this.elements_ && (this.cursor_ == this.elements_.length ? (this.nextValue_ = null, this.atEnd_ = !0) : this.nextValue_ = this.elements_[this.cursor_++]);\r\n                    return a;\r\n                };\r\n                jspb.BinaryDecoder = function (a, b, c) {\r\n                    this.bytes_ = null;\r\n                    this.tempHigh_ = this.tempLow_ = this.cursor_ = this.end_ = this.start_ = 0;\r\n                    this.error_ = !1;\r\n                    a && this.setBlock(a, b, c);\r\n                };\r\n                jspb.BinaryDecoder.instanceCache_ = [];\r\n                jspb.BinaryDecoder.alloc = function (a, b, c) {\r\n                    if (jspb.BinaryDecoder.instanceCache_.length) {\r\n                        var d = jspb.BinaryDecoder.instanceCache_.pop();\r\n                        a && d.setBlock(a, b, c);\r\n                        return d;\r\n                    }\r\n                    return new jspb.BinaryDecoder(a, b, c);\r\n                };\r\n                jspb.BinaryDecoder.prototype.free = function () {\r\n                    this.clear();\r\n                    100 > jspb.BinaryDecoder.instanceCache_.length && jspb.BinaryDecoder.instanceCache_.push(this);\r\n                };\r\n                jspb.BinaryDecoder.prototype.clone = function () {\r\n                    return jspb.BinaryDecoder.alloc(this.bytes_, this.start_, this.end_ - this.start_);\r\n                };\r\n                jspb.BinaryDecoder.prototype.clear = function () {\r\n                    this.bytes_ = null;\r\n                    this.cursor_ = this.end_ = this.start_ = 0;\r\n                    this.error_ = !1;\r\n                };\r\n                jspb.BinaryDecoder.prototype.getBuffer = function () {\r\n                    return this.bytes_;\r\n                };\r\n                jspb.BinaryDecoder.prototype.setBlock = function (a, b, c) {\r\n                    this.bytes_ = jspb.utils.byteSourceToUint8Array(a);\r\n                    this.start_ = goog.isDef(b) ? b : 0;\r\n                    this.end_ = goog.isDef(c) ? this.start_ + c : this.bytes_.length;\r\n                    this.cursor_ = this.start_;\r\n                };\r\n                jspb.BinaryDecoder.prototype.getEnd = function () {\r\n                    return this.end_;\r\n                };\r\n                jspb.BinaryDecoder.prototype.setEnd = function (a) {\r\n                    this.end_ = a;\r\n                };\r\n                jspb.BinaryDecoder.prototype.reset = function () {\r\n                    this.cursor_ = this.start_;\r\n                };\r\n                jspb.BinaryDecoder.prototype.getCursor = function () {\r\n                    return this.cursor_;\r\n                };\r\n                jspb.BinaryDecoder.prototype.setCursor = function (a) {\r\n                    this.cursor_ = a;\r\n                };\r\n                jspb.BinaryDecoder.prototype.advance = function (a) {\r\n                    this.cursor_ += a;\r\n                    goog.asserts.assert(this.cursor_ <= this.end_);\r\n                };\r\n                jspb.BinaryDecoder.prototype.atEnd = function () {\r\n                    return this.cursor_ == this.end_;\r\n                };\r\n                jspb.BinaryDecoder.prototype.pastEnd = function () {\r\n                    return this.cursor_ > this.end_;\r\n                };\r\n                jspb.BinaryDecoder.prototype.getError = function () {\r\n                    return this.error_ || 0 > this.cursor_ || this.cursor_ > this.end_;\r\n                };\r\n                jspb.BinaryDecoder.prototype.readSplitVarint64_ = function () {\r\n                    for (var a, b = 0, c, d = 0; 4 > d; d++)\r\n                        if (a = this.bytes_[this.cursor_++], b |= (a & 127) << 7 * d, 128 > a) {\r\n                            this.tempLow_ = b >>> 0;\r\n                            this.tempHigh_ = 0;\r\n                            return;\r\n                        }\r\n                    a = this.bytes_[this.cursor_++];\r\n                    b |= (a & 127) << 28;\r\n                    c = 0 | (a & 127) >> 4;\r\n                    if (128 > a)\r\n                        this.tempLow_ = b >>> 0, this.tempHigh_ = c >>> 0;\r\n                    else {\r\n                        for (d = 0; 5 > d; d++)\r\n                            if (a = this.bytes_[this.cursor_++], c |= (a & 127) << 7 * d + 3, 128 > a) {\r\n                                this.tempLow_ = b >>> 0;\r\n                                this.tempHigh_ = c >>> 0;\r\n                                return;\r\n                            }\r\n                        goog.asserts.fail(\"Failed to read varint, encoding is invalid.\");\r\n                        this.error_ =\r\n                            !0;\r\n                    }\r\n                };\r\n                jspb.BinaryDecoder.prototype.skipVarint = function () {\r\n                    for (; this.bytes_[this.cursor_] & 128;)\r\n                        this.cursor_++;\r\n                    this.cursor_++;\r\n                };\r\n                jspb.BinaryDecoder.prototype.unskipVarint = function (a) {\r\n                    for (; 128 < a;)\r\n                        this.cursor_--, a >>>= 7;\r\n                    this.cursor_--;\r\n                };\r\n                jspb.BinaryDecoder.prototype.readUnsignedVarint32 = function () {\r\n                    var a, b = this.bytes_;\r\n                    a = b[this.cursor_ + 0];\r\n                    var c = a & 127;\r\n                    if (128 > a)\r\n                        return this.cursor_ += 1, goog.asserts.assert(this.cursor_ <= this.end_), c;\r\n                    a = b[this.cursor_ + 1];\r\n                    c |= (a & 127) << 7;\r\n                    if (128 > a)\r\n                        return this.cursor_ += 2, goog.asserts.assert(this.cursor_ <= this.end_), c;\r\n                    a = b[this.cursor_ + 2];\r\n                    c |= (a & 127) << 14;\r\n                    if (128 > a)\r\n                        return this.cursor_ += 3, goog.asserts.assert(this.cursor_ <= this.end_), c;\r\n                    a = b[this.cursor_ + 3];\r\n                    c |= (a & 127) << 21;\r\n                    if (128 > a)\r\n                        return this.cursor_ += 4, goog.asserts.assert(this.cursor_ <=\r\n                            this.end_), c;\r\n                    a = b[this.cursor_ + 4];\r\n                    c |= (a & 15) << 28;\r\n                    if (128 > a)\r\n                        return this.cursor_ += 5, goog.asserts.assert(this.cursor_ <= this.end_), c >>> 0;\r\n                    this.cursor_ += 5;\r\n                    128 <= b[this.cursor_++] && 128 <= b[this.cursor_++] && 128 <= b[this.cursor_++] && 128 <= b[this.cursor_++] && 128 <= b[this.cursor_++] && goog.asserts.assert(!1);\r\n                    goog.asserts.assert(this.cursor_ <= this.end_);\r\n                    return c;\r\n                };\r\n                jspb.BinaryDecoder.prototype.readSignedVarint32 = jspb.BinaryDecoder.prototype.readUnsignedVarint32;\r\n                jspb.BinaryDecoder.prototype.readUnsignedVarint32String = function () {\r\n                    return this.readUnsignedVarint32().toString();\r\n                };\r\n                jspb.BinaryDecoder.prototype.readSignedVarint32String = function () {\r\n                    return this.readSignedVarint32().toString();\r\n                };\r\n                jspb.BinaryDecoder.prototype.readZigzagVarint32 = function () {\r\n                    var a = this.readUnsignedVarint32();\r\n                    return a >>> 1 ^ -(a & 1);\r\n                };\r\n                jspb.BinaryDecoder.prototype.readUnsignedVarint64 = function () {\r\n                    this.readSplitVarint64_();\r\n                    return jspb.utils.joinUint64(this.tempLow_, this.tempHigh_);\r\n                };\r\n                jspb.BinaryDecoder.prototype.readUnsignedVarint64String = function () {\r\n                    this.readSplitVarint64_();\r\n                    return jspb.utils.joinUnsignedDecimalString(this.tempLow_, this.tempHigh_);\r\n                };\r\n                jspb.BinaryDecoder.prototype.readSignedVarint64 = function () {\r\n                    this.readSplitVarint64_();\r\n                    return jspb.utils.joinInt64(this.tempLow_, this.tempHigh_);\r\n                };\r\n                jspb.BinaryDecoder.prototype.readSignedVarint64String = function () {\r\n                    this.readSplitVarint64_();\r\n                    return jspb.utils.joinSignedDecimalString(this.tempLow_, this.tempHigh_);\r\n                };\r\n                jspb.BinaryDecoder.prototype.readZigzagVarint64 = function () {\r\n                    this.readSplitVarint64_();\r\n                    return jspb.utils.joinZigzag64(this.tempLow_, this.tempHigh_);\r\n                };\r\n                jspb.BinaryDecoder.prototype.readZigzagVarint64String = function () {\r\n                    return this.readZigzagVarint64().toString();\r\n                };\r\n                jspb.BinaryDecoder.prototype.readUint8 = function () {\r\n                    var a = this.bytes_[this.cursor_ + 0];\r\n                    this.cursor_ += 1;\r\n                    goog.asserts.assert(this.cursor_ <= this.end_);\r\n                    return a;\r\n                };\r\n                jspb.BinaryDecoder.prototype.readUint16 = function () {\r\n                    var a = this.bytes_[this.cursor_ + 0], b = this.bytes_[this.cursor_ + 1];\r\n                    this.cursor_ += 2;\r\n                    goog.asserts.assert(this.cursor_ <= this.end_);\r\n                    return a << 0 | b << 8;\r\n                };\r\n                jspb.BinaryDecoder.prototype.readUint32 = function () {\r\n                    var a = this.bytes_[this.cursor_ + 0], b = this.bytes_[this.cursor_ + 1], c = this.bytes_[this.cursor_ + 2], d = this.bytes_[this.cursor_ + 3];\r\n                    this.cursor_ += 4;\r\n                    goog.asserts.assert(this.cursor_ <= this.end_);\r\n                    return (a << 0 | b << 8 | c << 16 | d << 24) >>> 0;\r\n                };\r\n                jspb.BinaryDecoder.prototype.readUint64 = function () {\r\n                    var a = this.readUint32(), b = this.readUint32();\r\n                    return jspb.utils.joinUint64(a, b);\r\n                };\r\n                jspb.BinaryDecoder.prototype.readUint64String = function () {\r\n                    var a = this.readUint32(), b = this.readUint32();\r\n                    return jspb.utils.joinUnsignedDecimalString(a, b);\r\n                };\r\n                jspb.BinaryDecoder.prototype.readInt8 = function () {\r\n                    var a = this.bytes_[this.cursor_ + 0];\r\n                    this.cursor_ += 1;\r\n                    goog.asserts.assert(this.cursor_ <= this.end_);\r\n                    return a << 24 >> 24;\r\n                };\r\n                jspb.BinaryDecoder.prototype.readInt16 = function () {\r\n                    var a = this.bytes_[this.cursor_ + 0], b = this.bytes_[this.cursor_ + 1];\r\n                    this.cursor_ += 2;\r\n                    goog.asserts.assert(this.cursor_ <= this.end_);\r\n                    return (a << 0 | b << 8) << 16 >> 16;\r\n                };\r\n                jspb.BinaryDecoder.prototype.readInt32 = function () {\r\n                    var a = this.bytes_[this.cursor_ + 0], b = this.bytes_[this.cursor_ + 1], c = this.bytes_[this.cursor_ + 2], d = this.bytes_[this.cursor_ + 3];\r\n                    this.cursor_ += 4;\r\n                    goog.asserts.assert(this.cursor_ <= this.end_);\r\n                    return a << 0 | b << 8 | c << 16 | d << 24;\r\n                };\r\n                jspb.BinaryDecoder.prototype.readInt64 = function () {\r\n                    var a = this.readUint32(), b = this.readUint32();\r\n                    return jspb.utils.joinInt64(a, b);\r\n                };\r\n                jspb.BinaryDecoder.prototype.readInt64String = function () {\r\n                    var a = this.readUint32(), b = this.readUint32();\r\n                    return jspb.utils.joinSignedDecimalString(a, b);\r\n                };\r\n                jspb.BinaryDecoder.prototype.readFloat = function () {\r\n                    var a = this.readUint32();\r\n                    return jspb.utils.joinFloat32(a, 0);\r\n                };\r\n                jspb.BinaryDecoder.prototype.readDouble = function () {\r\n                    var a = this.readUint32(), b = this.readUint32();\r\n                    return jspb.utils.joinFloat64(a, b);\r\n                };\r\n                jspb.BinaryDecoder.prototype.readBool = function () {\r\n                    return !!this.bytes_[this.cursor_++];\r\n                };\r\n                jspb.BinaryDecoder.prototype.readEnum = function () {\r\n                    return this.readSignedVarint32();\r\n                };\r\n                jspb.BinaryDecoder.prototype.readString = function (a) {\r\n                    var b = this.bytes_, c = this.cursor_;\r\n                    a = c + a;\r\n                    for (var d = [], e = \"\"; c < a;) {\r\n                        var f = b[c++];\r\n                        if (128 > f)\r\n                            d.push(f);\r\n                        else if (192 > f)\r\n                            continue;\r\n                        else if (224 > f) {\r\n                            var g = b[c++];\r\n                            d.push((f & 31) << 6 | g & 63);\r\n                        }\r\n                        else if (240 > f) {\r\n                            var g = b[c++], h = b[c++];\r\n                            d.push((f & 15) << 12 | (g & 63) << 6 | h & 63);\r\n                        }\r\n                        else if (248 > f) {\r\n                            var g = b[c++], h = b[c++], k = b[c++], f = (f & 7) << 18 | (g & 63) << 12 | (h & 63) << 6 | k & 63, f = f - 65536;\r\n                            d.push((f >> 10 & 1023) + 55296, (f & 1023) + 56320);\r\n                        }\r\n                        8192 <= d.length && (e += String.fromCharCode.apply(null, d), d.length = 0);\r\n                    }\r\n                    e += goog.crypt.byteArrayToString(d);\r\n                    this.cursor_ = c;\r\n                    return e;\r\n                };\r\n                jspb.BinaryDecoder.prototype.readStringWithLength = function () {\r\n                    var a = this.readUnsignedVarint32();\r\n                    return this.readString(a);\r\n                };\r\n                jspb.BinaryDecoder.prototype.readBytes = function (a) {\r\n                    if (0 > a || this.cursor_ + a > this.bytes_.length)\r\n                        return this.error_ = !0, goog.asserts.fail(\"Invalid byte length!\"), new Uint8Array(0);\r\n                    var b = this.bytes_.subarray(this.cursor_, this.cursor_ + a);\r\n                    this.cursor_ += a;\r\n                    goog.asserts.assert(this.cursor_ <= this.end_);\r\n                    return b;\r\n                };\r\n                jspb.BinaryDecoder.prototype.readVarintHash64 = function () {\r\n                    this.readSplitVarint64_();\r\n                    return jspb.utils.joinHash64(this.tempLow_, this.tempHigh_);\r\n                };\r\n                jspb.BinaryDecoder.prototype.readFixedHash64 = function () {\r\n                    var a = this.bytes_, b = this.cursor_, c = a[b + 0], d = a[b + 1], e = a[b + 2], f = a[b + 3], g = a[b + 4], h = a[b + 5], k = a[b + 6], a = a[b + 7];\r\n                    this.cursor_ += 8;\r\n                    return String.fromCharCode(c, d, e, f, g, h, k, a);\r\n                };\r\n                jspb.BinaryReader = function (a, b, c) {\r\n                    this.decoder_ = jspb.BinaryDecoder.alloc(a, b, c);\r\n                    this.fieldCursor_ = this.decoder_.getCursor();\r\n                    this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER;\r\n                    this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;\r\n                    this.error_ = !1;\r\n                    this.readCallbacks_ = null;\r\n                };\r\n                jspb.BinaryReader.instanceCache_ = [];\r\n                jspb.BinaryReader.alloc = function (a, b, c) {\r\n                    if (jspb.BinaryReader.instanceCache_.length) {\r\n                        var d = jspb.BinaryReader.instanceCache_.pop();\r\n                        a && d.decoder_.setBlock(a, b, c);\r\n                        return d;\r\n                    }\r\n                    return new jspb.BinaryReader(a, b, c);\r\n                };\r\n                jspb.BinaryReader.prototype.alloc = jspb.BinaryReader.alloc;\r\n                jspb.BinaryReader.prototype.free = function () {\r\n                    this.decoder_.clear();\r\n                    this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER;\r\n                    this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;\r\n                    this.error_ = !1;\r\n                    this.readCallbacks_ = null;\r\n                    100 > jspb.BinaryReader.instanceCache_.length && jspb.BinaryReader.instanceCache_.push(this);\r\n                };\r\n                jspb.BinaryReader.prototype.getFieldCursor = function () {\r\n                    return this.fieldCursor_;\r\n                };\r\n                jspb.BinaryReader.prototype.getCursor = function () {\r\n                    return this.decoder_.getCursor();\r\n                };\r\n                jspb.BinaryReader.prototype.getBuffer = function () {\r\n                    return this.decoder_.getBuffer();\r\n                };\r\n                jspb.BinaryReader.prototype.getFieldNumber = function () {\r\n                    return this.nextField_;\r\n                };\r\n                jspb.BinaryReader.prototype.getWireType = function () {\r\n                    return this.nextWireType_;\r\n                };\r\n                jspb.BinaryReader.prototype.isEndGroup = function () {\r\n                    return this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP;\r\n                };\r\n                jspb.BinaryReader.prototype.getError = function () {\r\n                    return this.error_ || this.decoder_.getError();\r\n                };\r\n                jspb.BinaryReader.prototype.setBlock = function (a, b, c) {\r\n                    this.decoder_.setBlock(a, b, c);\r\n                    this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER;\r\n                    this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;\r\n                };\r\n                jspb.BinaryReader.prototype.reset = function () {\r\n                    this.decoder_.reset();\r\n                    this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER;\r\n                    this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;\r\n                };\r\n                jspb.BinaryReader.prototype.advance = function (a) {\r\n                    this.decoder_.advance(a);\r\n                };\r\n                jspb.BinaryReader.prototype.nextField = function () {\r\n                    if (this.decoder_.atEnd())\r\n                        return !1;\r\n                    if (this.getError())\r\n                        return goog.asserts.fail(\"Decoder hit an error\"), !1;\r\n                    this.fieldCursor_ = this.decoder_.getCursor();\r\n                    var a = this.decoder_.readUnsignedVarint32(), b = a >>> 3, a = a & 7;\r\n                    if (a != jspb.BinaryConstants.WireType.VARINT && a != jspb.BinaryConstants.WireType.FIXED32 && a != jspb.BinaryConstants.WireType.FIXED64 && a != jspb.BinaryConstants.WireType.DELIMITED && a != jspb.BinaryConstants.WireType.START_GROUP && a != jspb.BinaryConstants.WireType.END_GROUP)\r\n                        return goog.asserts.fail(\"Invalid wire type\"),\r\n                            this.error_ = !0, !1;\r\n                    this.nextField_ = b;\r\n                    this.nextWireType_ = a;\r\n                    return !0;\r\n                };\r\n                jspb.BinaryReader.prototype.unskipHeader = function () {\r\n                    this.decoder_.unskipVarint(this.nextField_ << 3 | this.nextWireType_);\r\n                };\r\n                jspb.BinaryReader.prototype.skipMatchingFields = function () {\r\n                    var a = this.nextField_;\r\n                    for (this.unskipHeader(); this.nextField() && this.getFieldNumber() == a;)\r\n                        this.skipField();\r\n                    this.decoder_.atEnd() || this.unskipHeader();\r\n                };\r\n                jspb.BinaryReader.prototype.skipVarintField = function () {\r\n                    this.nextWireType_ != jspb.BinaryConstants.WireType.VARINT ? (goog.asserts.fail(\"Invalid wire type for skipVarintField\"), this.skipField()) : this.decoder_.skipVarint();\r\n                };\r\n                jspb.BinaryReader.prototype.skipDelimitedField = function () {\r\n                    if (this.nextWireType_ != jspb.BinaryConstants.WireType.DELIMITED)\r\n                        goog.asserts.fail(\"Invalid wire type for skipDelimitedField\"), this.skipField();\r\n                    else {\r\n                        var a = this.decoder_.readUnsignedVarint32();\r\n                        this.decoder_.advance(a);\r\n                    }\r\n                };\r\n                jspb.BinaryReader.prototype.skipFixed32Field = function () {\r\n                    this.nextWireType_ != jspb.BinaryConstants.WireType.FIXED32 ? (goog.asserts.fail(\"Invalid wire type for skipFixed32Field\"), this.skipField()) : this.decoder_.advance(4);\r\n                };\r\n                jspb.BinaryReader.prototype.skipFixed64Field = function () {\r\n                    this.nextWireType_ != jspb.BinaryConstants.WireType.FIXED64 ? (goog.asserts.fail(\"Invalid wire type for skipFixed64Field\"), this.skipField()) : this.decoder_.advance(8);\r\n                };\r\n                jspb.BinaryReader.prototype.skipGroup = function () {\r\n                    var a = [this.nextField_];\r\n                    do {\r\n                        if (!this.nextField()) {\r\n                            goog.asserts.fail(\"Unmatched start-group tag: stream EOF\");\r\n                            this.error_ = !0;\r\n                            break;\r\n                        }\r\n                        if (this.nextWireType_ == jspb.BinaryConstants.WireType.START_GROUP)\r\n                            a.push(this.nextField_);\r\n                        else if (this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP && this.nextField_ != a.pop()) {\r\n                            goog.asserts.fail(\"Unmatched end-group tag\");\r\n                            this.error_ = !0;\r\n                            break;\r\n                        }\r\n                    } while (0 < a.length);\r\n                };\r\n                jspb.BinaryReader.prototype.skipField = function () {\r\n                    switch (this.nextWireType_) {\r\n                        case jspb.BinaryConstants.WireType.VARINT:\r\n                            this.skipVarintField();\r\n                            break;\r\n                        case jspb.BinaryConstants.WireType.FIXED64:\r\n                            this.skipFixed64Field();\r\n                            break;\r\n                        case jspb.BinaryConstants.WireType.DELIMITED:\r\n                            this.skipDelimitedField();\r\n                            break;\r\n                        case jspb.BinaryConstants.WireType.FIXED32:\r\n                            this.skipFixed32Field();\r\n                            break;\r\n                        case jspb.BinaryConstants.WireType.START_GROUP:\r\n                            this.skipGroup();\r\n                            break;\r\n                        default:\r\n                            goog.asserts.fail(\"Invalid wire encoding for field.\");\r\n                    }\r\n                };\r\n                jspb.BinaryReader.prototype.registerReadCallback = function (a, b) {\r\n                    goog.isNull(this.readCallbacks_) && (this.readCallbacks_ = {});\r\n                    goog.asserts.assert(!this.readCallbacks_[a]);\r\n                    this.readCallbacks_[a] = b;\r\n                };\r\n                jspb.BinaryReader.prototype.runReadCallback = function (a) {\r\n                    goog.asserts.assert(!goog.isNull(this.readCallbacks_));\r\n                    a = this.readCallbacks_[a];\r\n                    goog.asserts.assert(a);\r\n                    return a(this);\r\n                };\r\n                jspb.BinaryReader.prototype.readAny = function (a) {\r\n                    this.nextWireType_ = jspb.BinaryConstants.FieldTypeToWireType(a);\r\n                    var b = jspb.BinaryConstants.FieldType;\r\n                    switch (a) {\r\n                        case b.DOUBLE:\r\n                            return this.readDouble();\r\n                        case b.FLOAT:\r\n                            return this.readFloat();\r\n                        case b.INT64:\r\n                            return this.readInt64();\r\n                        case b.UINT64:\r\n                            return this.readUint64();\r\n                        case b.INT32:\r\n                            return this.readInt32();\r\n                        case b.FIXED64:\r\n                            return this.readFixed64();\r\n                        case b.FIXED32:\r\n                            return this.readFixed32();\r\n                        case b.BOOL:\r\n                            return this.readBool();\r\n                        case b.STRING:\r\n                            return this.readString();\r\n                        case b.GROUP:\r\n                            goog.asserts.fail(\"Group field type not supported in readAny()\");\r\n                        case b.MESSAGE:\r\n                            goog.asserts.fail(\"Message field type not supported in readAny()\");\r\n                        case b.BYTES:\r\n                            return this.readBytes();\r\n                        case b.UINT32:\r\n                            return this.readUint32();\r\n                        case b.ENUM:\r\n                            return this.readEnum();\r\n                        case b.SFIXED32:\r\n                            return this.readSfixed32();\r\n                        case b.SFIXED64:\r\n                            return this.readSfixed64();\r\n                        case b.SINT32:\r\n                            return this.readSint32();\r\n                        case b.SINT64:\r\n                            return this.readSint64();\r\n                        case b.FHASH64:\r\n                            return this.readFixedHash64();\r\n                        case b.VHASH64:\r\n                            return this.readVarintHash64();\r\n                        default:\r\n                            goog.asserts.fail(\"Invalid field type in readAny()\");\r\n                    }\r\n                    return 0;\r\n                };\r\n                jspb.BinaryReader.prototype.readMessage = function (a, b) {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);\r\n                    var c = this.decoder_.getEnd(), d = this.decoder_.readUnsignedVarint32(), d = this.decoder_.getCursor() + d;\r\n                    this.decoder_.setEnd(d);\r\n                    b(a, this);\r\n                    this.decoder_.setCursor(d);\r\n                    this.decoder_.setEnd(c);\r\n                };\r\n                jspb.BinaryReader.prototype.readGroup = function (a, b, c) {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.START_GROUP);\r\n                    goog.asserts.assert(this.nextField_ == a);\r\n                    c(b, this);\r\n                    this.error_ || this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP || (goog.asserts.fail(\"Group submessage did not end with an END_GROUP tag\"), this.error_ = !0);\r\n                };\r\n                jspb.BinaryReader.prototype.getFieldDecoder = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);\r\n                    var a = this.decoder_.readUnsignedVarint32(), b = this.decoder_.getCursor(), c = b + a, a = jspb.BinaryDecoder.alloc(this.decoder_.getBuffer(), b, a);\r\n                    this.decoder_.setCursor(c);\r\n                    return a;\r\n                };\r\n                jspb.BinaryReader.prototype.readInt32 = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                    return this.decoder_.readSignedVarint32();\r\n                };\r\n                jspb.BinaryReader.prototype.readInt32String = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                    return this.decoder_.readSignedVarint32String();\r\n                };\r\n                jspb.BinaryReader.prototype.readInt64 = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                    return this.decoder_.readSignedVarint64();\r\n                };\r\n                jspb.BinaryReader.prototype.readInt64String = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                    return this.decoder_.readSignedVarint64String();\r\n                };\r\n                jspb.BinaryReader.prototype.readUint32 = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                    return this.decoder_.readUnsignedVarint32();\r\n                };\r\n                jspb.BinaryReader.prototype.readUint32String = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                    return this.decoder_.readUnsignedVarint32String();\r\n                };\r\n                jspb.BinaryReader.prototype.readUint64 = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                    return this.decoder_.readUnsignedVarint64();\r\n                };\r\n                jspb.BinaryReader.prototype.readUint64String = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                    return this.decoder_.readUnsignedVarint64String();\r\n                };\r\n                jspb.BinaryReader.prototype.readSint32 = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                    return this.decoder_.readZigzagVarint32();\r\n                };\r\n                jspb.BinaryReader.prototype.readSint64 = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                    return this.decoder_.readZigzagVarint64();\r\n                };\r\n                jspb.BinaryReader.prototype.readSint64String = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                    return this.decoder_.readZigzagVarint64String();\r\n                };\r\n                jspb.BinaryReader.prototype.readFixed32 = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32);\r\n                    return this.decoder_.readUint32();\r\n                };\r\n                jspb.BinaryReader.prototype.readFixed64 = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);\r\n                    return this.decoder_.readUint64();\r\n                };\r\n                jspb.BinaryReader.prototype.readFixed64String = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);\r\n                    return this.decoder_.readUint64String();\r\n                };\r\n                jspb.BinaryReader.prototype.readSfixed32 = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32);\r\n                    return this.decoder_.readInt32();\r\n                };\r\n                jspb.BinaryReader.prototype.readSfixed32String = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32);\r\n                    return this.decoder_.readInt32().toString();\r\n                };\r\n                jspb.BinaryReader.prototype.readSfixed64 = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);\r\n                    return this.decoder_.readInt64();\r\n                };\r\n                jspb.BinaryReader.prototype.readSfixed64String = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);\r\n                    return this.decoder_.readInt64String();\r\n                };\r\n                jspb.BinaryReader.prototype.readFloat = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32);\r\n                    return this.decoder_.readFloat();\r\n                };\r\n                jspb.BinaryReader.prototype.readDouble = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);\r\n                    return this.decoder_.readDouble();\r\n                };\r\n                jspb.BinaryReader.prototype.readBool = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                    return !!this.decoder_.readUnsignedVarint32();\r\n                };\r\n                jspb.BinaryReader.prototype.readEnum = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                    return this.decoder_.readSignedVarint64();\r\n                };\r\n                jspb.BinaryReader.prototype.readString = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);\r\n                    var a = this.decoder_.readUnsignedVarint32();\r\n                    return this.decoder_.readString(a);\r\n                };\r\n                jspb.BinaryReader.prototype.readBytes = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);\r\n                    var a = this.decoder_.readUnsignedVarint32();\r\n                    return this.decoder_.readBytes(a);\r\n                };\r\n                jspb.BinaryReader.prototype.readVarintHash64 = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                    return this.decoder_.readVarintHash64();\r\n                };\r\n                jspb.BinaryReader.prototype.readFixedHash64 = function () {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);\r\n                    return this.decoder_.readFixedHash64();\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedField_ = function (a) {\r\n                    goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);\r\n                    for (var b = this.decoder_.readUnsignedVarint32(), b = this.decoder_.getCursor() + b, c = []; this.decoder_.getCursor() < b;)\r\n                        c.push(a.call(this.decoder_));\r\n                    return c;\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedInt32 = function () {\r\n                    return this.readPackedField_(this.decoder_.readSignedVarint32);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedInt32String = function () {\r\n                    return this.readPackedField_(this.decoder_.readSignedVarint32String);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedInt64 = function () {\r\n                    return this.readPackedField_(this.decoder_.readSignedVarint64);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedInt64String = function () {\r\n                    return this.readPackedField_(this.decoder_.readSignedVarint64String);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedUint32 = function () {\r\n                    return this.readPackedField_(this.decoder_.readUnsignedVarint32);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedUint32String = function () {\r\n                    return this.readPackedField_(this.decoder_.readUnsignedVarint32String);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedUint64 = function () {\r\n                    return this.readPackedField_(this.decoder_.readUnsignedVarint64);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedUint64String = function () {\r\n                    return this.readPackedField_(this.decoder_.readUnsignedVarint64String);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedSint32 = function () {\r\n                    return this.readPackedField_(this.decoder_.readZigzagVarint32);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedSint64 = function () {\r\n                    return this.readPackedField_(this.decoder_.readZigzagVarint64);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedSint64String = function () {\r\n                    return this.readPackedField_(this.decoder_.readZigzagVarint64String);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedFixed32 = function () {\r\n                    return this.readPackedField_(this.decoder_.readUint32);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedFixed64 = function () {\r\n                    return this.readPackedField_(this.decoder_.readUint64);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedFixed64String = function () {\r\n                    return this.readPackedField_(this.decoder_.readUint64String);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedSfixed32 = function () {\r\n                    return this.readPackedField_(this.decoder_.readInt32);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedSfixed64 = function () {\r\n                    return this.readPackedField_(this.decoder_.readInt64);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedSfixed64String = function () {\r\n                    return this.readPackedField_(this.decoder_.readInt64String);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedFloat = function () {\r\n                    return this.readPackedField_(this.decoder_.readFloat);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedDouble = function () {\r\n                    return this.readPackedField_(this.decoder_.readDouble);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedBool = function () {\r\n                    return this.readPackedField_(this.decoder_.readBool);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedEnum = function () {\r\n                    return this.readPackedField_(this.decoder_.readEnum);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedVarintHash64 = function () {\r\n                    return this.readPackedField_(this.decoder_.readVarintHash64);\r\n                };\r\n                jspb.BinaryReader.prototype.readPackedFixedHash64 = function () {\r\n                    return this.readPackedField_(this.decoder_.readFixedHash64);\r\n                };\r\n                jspb.Export = {};\r\n                exports.Map = jspb.Map;\r\n                exports.Message = jspb.Message;\r\n                exports.BinaryReader = jspb.BinaryReader;\r\n                exports.BinaryWriter = jspb.BinaryWriter;\r\n                exports.ExtensionFieldInfo = jspb.ExtensionFieldInfo;\r\n                exports.ExtensionFieldBinaryInfo = jspb.ExtensionFieldBinaryInfo;\r\n                exports.exportSymbol = goog.exportSymbol;\r\n                exports.inherits = goog.inherits;\r\n                exports.object = { extend: goog.object.extend };\r\n                exports.typeOf = goog.typeOf;\r\n            }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\r\n        }, {}], 2: [function (_require, module, exports) {\r\n            /**\r\n             * @fileoverview\r\n             * @enhanceable\r\n             * @suppress {messageConventions} JS Compiler reports an error if a variable or\r\n             *     field starts with 'MSG_' and isn't a translatable message.\r\n             * @public\r\n             */\r\n            // GENERATED CODE -- DO NOT EDIT!\r\n            var jspb = _require(\"google-protobuf\");\r\n            var goog = jspb;\r\n            var global = window; // var global = Function('return this')();\r\n            goog.exportSymbol(\"proto.stream.ErrorCode\", null, global);\r\n            /**\r\n             * @enum {number}\r\n             */\r\n            proto.stream.ErrorCode = {\r\n                NOERROR: 0,\r\n                OK: 200,\r\n                ACCEPTED: 202,\r\n                NOCONTENT: 204,\r\n                BADREQUEST: 400,\r\n                UNAUTHORIZED: 401,\r\n                SIGNATUREFAILED: 402,\r\n                FORBIDDEN: 403,\r\n                NOTFOUND: 404,\r\n                INTERNALSERVERERROR: 500,\r\n                NOTIMPLEMENTED: 501,\r\n                BADGATEWAY: 502,\r\n                SERVICEUNAVAILABLE: 503\r\n            };\r\n            goog.object.extend(exports, proto.stream);\r\n        }, { \"google-protobuf\": 1 }], 3: [function (_require, module, exports) {\r\n            var myProto = _require(\"./sdk_pb\");\r\n            var myProto1 = _require(\"./gateway_pb\");\r\n            var myProto2 = _require(\"./errorcode_pb\");\r\n            module.exports = {\r\n                DataProto: myProto,\r\n                DataProto: myProto1,\r\n                DataProto: myProto2\r\n            };\r\n        }, { \"./errorcode_pb\": 2, \"./gateway_pb\": 4, \"./sdk_pb\": 5 }], 4: [function (_require, module, exports) {\r\n            /**\r\n             * @fileoverview\r\n             * @enhanceable\r\n             * @suppress {messageConventions} JS Compiler reports an error if a variable or\r\n             *     field starts with 'MSG_' and isn't a translatable message.\r\n             * @public\r\n             */\r\n            // GENERATED CODE -- DO NOT EDIT!\r\n            var jspb = _require(\"google-protobuf\");\r\n            var goog = jspb;\r\n            var global = window; // var global = Function('return this')();\r\n            var errorcode_pb = _require(\"./errorcode_pb.js\");\r\n            goog.exportSymbol(\"proto.stream.BookInfo\", null, global);\r\n            goog.exportSymbol(\"proto.stream.CmdId\", null, global);\r\n            goog.exportSymbol(\"proto.stream.ConnDetailV2\", null, global);\r\n            goog.exportSymbol(\"proto.stream.CreateRoom\", null, global);\r\n            goog.exportSymbol(\"proto.stream.CreateRoomRsp\", null, global);\r\n            goog.exportSymbol(\"proto.stream.DisconnectReq\", null, global);\r\n            goog.exportSymbol(\"proto.stream.DisconnectRsp\", null, global);\r\n            goog.exportSymbol(\"proto.stream.GetRoomDetailReq\", null, global);\r\n            goog.exportSymbol(\"proto.stream.GetRoomDetailRsp\", null, global);\r\n            goog.exportSymbol(\"proto.stream.GetRoomList\", null, global);\r\n            goog.exportSymbol(\"proto.stream.GetRoomListExReq\", null, global);\r\n            goog.exportSymbol(\"proto.stream.GetRoomListExRsp\", null, global);\r\n            goog.exportSymbol(\"proto.stream.GetRoomListRsp\", null, global);\r\n            goog.exportSymbol(\"proto.stream.HeartbeatReq\", null, global);\r\n            goog.exportSymbol(\"proto.stream.HeartbeatRsp\", null, global);\r\n            goog.exportSymbol(\"proto.stream.JoinOpenNotify\", null, global);\r\n            goog.exportSymbol(\"proto.stream.JoinOpenReq\", null, global);\r\n            goog.exportSymbol(\"proto.stream.JoinOpenRsp\", null, global);\r\n            goog.exportSymbol(\"proto.stream.JoinOverNotify\", null, global);\r\n            goog.exportSymbol(\"proto.stream.JoinOverReq\", null, global);\r\n            goog.exportSymbol(\"proto.stream.JoinOverRsp\", null, global);\r\n            goog.exportSymbol(\"proto.stream.JoinRoomReq\", null, global);\r\n            goog.exportSymbol(\"proto.stream.JoinRoomRsp\", null, global);\r\n            goog.exportSymbol(\"proto.stream.JoinRoomType\", null, global);\r\n            goog.exportSymbol(\"proto.stream.KickPlayer\", null, global);\r\n            goog.exportSymbol(\"proto.stream.KickPlayerNotify\", null, global);\r\n            goog.exportSymbol(\"proto.stream.KickPlayerRsp\", null, global);\r\n            goog.exportSymbol(\"proto.stream.LeaveRoomReq\", null, global);\r\n            goog.exportSymbol(\"proto.stream.LeaveRoomRsp\", null, global);\r\n            goog.exportSymbol(\"proto.stream.LoginReq\", null, global);\r\n            goog.exportSymbol(\"proto.stream.LoginRsp\", null, global);\r\n            goog.exportSymbol(\"proto.stream.LogoutRsp\", null, global);\r\n            goog.exportSymbol(\"proto.stream.NetworkStateNotify\", null, global);\r\n            goog.exportSymbol(\"proto.stream.NetworkStateReq\", null, global);\r\n            goog.exportSymbol(\"proto.stream.NetworkStateRsp\", null, global);\r\n            goog.exportSymbol(\"proto.stream.NoticeJoin\", null, global);\r\n            goog.exportSymbol(\"proto.stream.NoticeLeave\", null, global);\r\n            goog.exportSymbol(\"proto.stream.NoticeRoomProperty\", null, global);\r\n            goog.exportSymbol(\"proto.stream.PlayerInfo\", null, global);\r\n            goog.exportSymbol(\"proto.stream.RoomDetail\", null, global);\r\n            goog.exportSymbol(\"proto.stream.RoomFilter\", null, global);\r\n            goog.exportSymbol(\"proto.stream.RoomInfo\", null, global);\r\n            goog.exportSymbol(\"proto.stream.RoomInfoEx\", null, global);\r\n            goog.exportSymbol(\"proto.stream.RoomListSort\", null, global);\r\n            goog.exportSymbol(\"proto.stream.RoomState\", null, global);\r\n            goog.exportSymbol(\"proto.stream.SetRoomPropertyReq\", null, global);\r\n            goog.exportSymbol(\"proto.stream.SetRoomPropertyRsp\", null, global);\r\n            goog.exportSymbol(\"proto.stream.SortOrder\", null, global);\r\n            goog.exportSymbol(\"proto.stream.TcpProtoHeader\", null, global);\r\n            goog.exportSymbol(\"proto.stream.UserV2\", null, global);\r\n            goog.exportSymbol(\"proto.stream.keyValue\", null, global);\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.LoginReq = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.LoginReq, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.LoginReq.displayName = \"proto.stream.LoginReq\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.LoginReq.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.LoginReq.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.LoginReq} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.LoginReq.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        appkey: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\r\n                        deviceid: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\r\n                        sign: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\r\n                        sdkver: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\r\n                        vendor: jspb.Message.getFieldWithDefault(msg, 6, 0),\r\n                        token: jspb.Message.getFieldWithDefault(msg, 7, \"\")\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.LoginReq}\r\n             */\r\n            proto.stream.LoginReq.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.LoginReq;\r\n                return proto.stream.LoginReq.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.LoginReq} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.LoginReq}\r\n             */\r\n            proto.stream.LoginReq.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readString());\r\n                            msg.setAppkey(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readString());\r\n                            msg.setDeviceid(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readString());\r\n                            msg.setSign(value);\r\n                            break;\r\n                        case 5:\r\n                            var value = (reader.readString());\r\n                            msg.setSdkver(value);\r\n                            break;\r\n                        case 6:\r\n                            var value = (reader.readUint32());\r\n                            msg.setVendor(value);\r\n                            break;\r\n                        case 7:\r\n                            var value = (reader.readString());\r\n                            msg.setToken(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.LoginReq.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.LoginReq.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.LoginReq} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.LoginReq.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getGameid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getAppkey();\r\n                if (f.length > 0) {\r\n                    writer.writeString(2, f);\r\n                }\r\n                f = message.getDeviceid();\r\n                if (f.length > 0) {\r\n                    writer.writeString(3, f);\r\n                }\r\n                f = message.getSign();\r\n                if (f.length > 0) {\r\n                    writer.writeString(4, f);\r\n                }\r\n                f = message.getSdkver();\r\n                if (f.length > 0) {\r\n                    writer.writeString(5, f);\r\n                }\r\n                f = message.getVendor();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(6, f);\r\n                }\r\n                f = message.getToken();\r\n                if (f.length > 0) {\r\n                    writer.writeString(7, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 gameID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.LoginReq.prototype.getGameid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.LoginReq.prototype.setGameid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional string appKey = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.LoginReq.prototype.getAppkey = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.LoginReq.prototype.setAppkey = function (value) {\r\n                jspb.Message.setProto3StringField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional string deviceID = 3;\r\n             * @return {string}\r\n             */\r\n            proto.stream.LoginReq.prototype.getDeviceid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.LoginReq.prototype.setDeviceid = function (value) {\r\n                jspb.Message.setProto3StringField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional string sign = 4;\r\n             * @return {string}\r\n             */\r\n            proto.stream.LoginReq.prototype.getSign = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.LoginReq.prototype.setSign = function (value) {\r\n                jspb.Message.setProto3StringField(this, 4, value);\r\n            };\r\n            /**\r\n             * optional string sdkVer = 5;\r\n             * @return {string}\r\n             */\r\n            proto.stream.LoginReq.prototype.getSdkver = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 5, \"\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.LoginReq.prototype.setSdkver = function (value) {\r\n                jspb.Message.setProto3StringField(this, 5, value);\r\n            };\r\n            /**\r\n             * optional uint32 vendor = 6;\r\n             * @return {number}\r\n             */\r\n            proto.stream.LoginReq.prototype.getVendor = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 6, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.LoginReq.prototype.setVendor = function (value) {\r\n                jspb.Message.setProto3IntField(this, 6, value);\r\n            };\r\n            /**\r\n             * optional string token = 7;\r\n             * @return {string}\r\n             */\r\n            proto.stream.LoginReq.prototype.getToken = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 7, \"\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.LoginReq.prototype.setToken = function (value) {\r\n                jspb.Message.setProto3StringField(this, 7, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.LoginRsp = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.LoginRsp, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.LoginRsp.displayName = \"proto.stream.LoginRsp\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.LoginRsp.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.LoginRsp.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.LoginRsp} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.LoginRsp.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\")\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.LoginRsp}\r\n             */\r\n            proto.stream.LoginRsp.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.LoginRsp;\r\n                return proto.stream.LoginRsp.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.LoginRsp} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.LoginRsp}\r\n             */\r\n            proto.stream.LoginRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readEnum());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.LoginRsp.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.LoginRsp.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.LoginRsp} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.LoginRsp.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0.0) {\r\n                    writer.writeEnum(1, f);\r\n                }\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(2, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional ErrorCode status = 1;\r\n             * @return {!proto.stream.ErrorCode}\r\n             */\r\n            proto.stream.LoginRsp.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {!proto.stream.ErrorCode} value */\r\n            proto.stream.LoginRsp.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3EnumField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.LoginRsp.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.LoginRsp.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 2, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.HeartbeatReq = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.HeartbeatReq, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.HeartbeatReq.displayName = \"proto.stream.HeartbeatReq\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.HeartbeatReq.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.HeartbeatReq.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.HeartbeatReq} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.HeartbeatReq.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\")\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.HeartbeatReq}\r\n             */\r\n            proto.stream.HeartbeatReq.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.HeartbeatReq;\r\n                return proto.stream.HeartbeatReq.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.HeartbeatReq} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.HeartbeatReq}\r\n             */\r\n            proto.stream.HeartbeatReq.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.HeartbeatReq.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.HeartbeatReq.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.HeartbeatReq} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.HeartbeatReq.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getGameid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(2, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 gameID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.HeartbeatReq.prototype.getGameid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.HeartbeatReq.prototype.setGameid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.HeartbeatReq.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.HeartbeatReq.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 2, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.HeartbeatRsp = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.HeartbeatRsp, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.HeartbeatRsp.displayName = \"proto.stream.HeartbeatRsp\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.HeartbeatRsp.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.HeartbeatRsp.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.HeartbeatRsp} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.HeartbeatRsp.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        gsexist: jspb.Message.getFieldWithDefault(msg, 2, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.HeartbeatRsp}\r\n             */\r\n            proto.stream.HeartbeatRsp.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.HeartbeatRsp;\r\n                return proto.stream.HeartbeatRsp.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.HeartbeatRsp} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.HeartbeatRsp}\r\n             */\r\n            proto.stream.HeartbeatRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readInt32());\r\n                            msg.setGsexist(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.HeartbeatRsp.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.HeartbeatRsp.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.HeartbeatRsp} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.HeartbeatRsp.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getGameid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getGsexist();\r\n                if (f !== 0) {\r\n                    writer.writeInt32(2, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 gameID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.HeartbeatRsp.prototype.getGameid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.HeartbeatRsp.prototype.setGameid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional int32 gsExist = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.HeartbeatRsp.prototype.getGsexist = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.HeartbeatRsp.prototype.setGsexist = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.DisconnectReq = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.DisconnectReq, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.DisconnectReq.displayName = \"proto.stream.DisconnectReq\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.DisconnectReq.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.DisconnectReq.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.DisconnectReq} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.DisconnectReq.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        gameid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 3, \"0\")\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.DisconnectReq}\r\n             */\r\n            proto.stream.DisconnectReq.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.DisconnectReq;\r\n                return proto.stream.DisconnectReq.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.DisconnectReq} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.DisconnectReq}\r\n             */\r\n            proto.stream.DisconnectReq.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.DisconnectReq.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.DisconnectReq.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.DisconnectReq} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.DisconnectReq.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getGameid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(3, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 userID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.DisconnectReq.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.DisconnectReq.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 gameID = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.DisconnectReq.prototype.getGameid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.DisconnectReq.prototype.setGameid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint64 roomId = 3;\r\n             * @return {string}\r\n             */\r\n            proto.stream.DisconnectReq.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.DisconnectReq.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 3, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.DisconnectRsp = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.DisconnectRsp, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.DisconnectRsp.displayName = \"proto.stream.DisconnectRsp\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.DisconnectRsp.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.DisconnectRsp.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.DisconnectRsp} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.DisconnectRsp.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.DisconnectRsp}\r\n             */\r\n            proto.stream.DisconnectRsp.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.DisconnectRsp;\r\n                return proto.stream.DisconnectRsp.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.DisconnectRsp} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.DisconnectRsp}\r\n             */\r\n            proto.stream.DisconnectRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readEnum());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.DisconnectRsp.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.DisconnectRsp.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.DisconnectRsp} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.DisconnectRsp.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0.0) {\r\n                    writer.writeEnum(1, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional ErrorCode status = 1;\r\n             * @return {!proto.stream.ErrorCode}\r\n             */\r\n            proto.stream.DisconnectRsp.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {!proto.stream.ErrorCode} value */\r\n            proto.stream.DisconnectRsp.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3EnumField(this, 1, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.LogoutRsp = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.LogoutRsp, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.LogoutRsp.displayName = \"proto.stream.LogoutRsp\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.LogoutRsp.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.LogoutRsp.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.LogoutRsp} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.LogoutRsp.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.LogoutRsp}\r\n             */\r\n            proto.stream.LogoutRsp.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.LogoutRsp;\r\n                return proto.stream.LogoutRsp.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.LogoutRsp} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.LogoutRsp}\r\n             */\r\n            proto.stream.LogoutRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readEnum());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.LogoutRsp.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.LogoutRsp.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.LogoutRsp} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.LogoutRsp.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0.0) {\r\n                    writer.writeEnum(1, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional ErrorCode status = 1;\r\n             * @return {!proto.stream.ErrorCode}\r\n             */\r\n            proto.stream.LogoutRsp.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {!proto.stream.ErrorCode} value */\r\n            proto.stream.LogoutRsp.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3EnumField(this, 1, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.keyValue = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.keyValue, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.keyValue.displayName = \"proto.stream.keyValue\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.keyValue.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.keyValue.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.keyValue} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.keyValue.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        key: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\r\n                        value: jspb.Message.getFieldWithDefault(msg, 2, \"\")\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.keyValue}\r\n             */\r\n            proto.stream.keyValue.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.keyValue;\r\n                return proto.stream.keyValue.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.keyValue} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.keyValue}\r\n             */\r\n            proto.stream.keyValue.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readString());\r\n                            msg.setKey(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readString());\r\n                            msg.setValue(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.keyValue.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.keyValue.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.keyValue} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.keyValue.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getKey();\r\n                if (f.length > 0) {\r\n                    writer.writeString(1, f);\r\n                }\r\n                f = message.getValue();\r\n                if (f.length > 0) {\r\n                    writer.writeString(2, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional string key = 1;\r\n             * @return {string}\r\n             */\r\n            proto.stream.keyValue.prototype.getKey = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, \"\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.keyValue.prototype.setKey = function (value) {\r\n                jspb.Message.setProto3StringField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional string value = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.keyValue.prototype.getValue = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.keyValue.prototype.setValue = function (value) {\r\n                jspb.Message.setProto3StringField(this, 2, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.PlayerInfo = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.PlayerInfo, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.PlayerInfo.displayName = \"proto.stream.PlayerInfo\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.PlayerInfo.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.PlayerInfo.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.PlayerInfo} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.PlayerInfo.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        userprofile: msg.getUserprofile_asB64()\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.PlayerInfo}\r\n             */\r\n            proto.stream.PlayerInfo.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.PlayerInfo;\r\n                return proto.stream.PlayerInfo.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.PlayerInfo} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.PlayerInfo}\r\n             */\r\n            proto.stream.PlayerInfo.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readBytes());\r\n                            msg.setUserprofile(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.PlayerInfo.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.PlayerInfo.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.PlayerInfo} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.PlayerInfo.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getUserprofile_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(2, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 userID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.PlayerInfo.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.PlayerInfo.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional bytes userProfile = 2;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.PlayerInfo.prototype.getUserprofile = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes userProfile = 2;\r\n             * This is a type-conversion wrapper around `getUserprofile()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.PlayerInfo.prototype.getUserprofile_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getUserprofile()));\r\n            };\r\n            /**\r\n             * optional bytes userProfile = 2;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getUserprofile()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.PlayerInfo.prototype.getUserprofile_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getUserprofile()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.PlayerInfo.prototype.setUserprofile = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 2, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.BookInfo = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.BookInfo, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.BookInfo.displayName = \"proto.stream.BookInfo\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.BookInfo.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.BookInfo.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.BookInfo} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.BookInfo.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        bookid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\r\n                        bookkey: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\r\n                        hoteladdr: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\r\n                        wssproxy: jspb.Message.getFieldWithDefault(msg, 4, \"\")\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.BookInfo}\r\n             */\r\n            proto.stream.BookInfo.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.BookInfo;\r\n                return proto.stream.BookInfo.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.BookInfo} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.BookInfo}\r\n             */\r\n            proto.stream.BookInfo.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readString());\r\n                            msg.setBookid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readString());\r\n                            msg.setBookkey(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readString());\r\n                            msg.setHoteladdr(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readString());\r\n                            msg.setWssproxy(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.BookInfo.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.BookInfo.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.BookInfo} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.BookInfo.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getBookid();\r\n                if (f.length > 0) {\r\n                    writer.writeString(1, f);\r\n                }\r\n                f = message.getBookkey();\r\n                if (f.length > 0) {\r\n                    writer.writeString(2, f);\r\n                }\r\n                f = message.getHoteladdr();\r\n                if (f.length > 0) {\r\n                    writer.writeString(3, f);\r\n                }\r\n                f = message.getWssproxy();\r\n                if (f.length > 0) {\r\n                    writer.writeString(4, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional string bookID = 1;\r\n             * @return {string}\r\n             */\r\n            proto.stream.BookInfo.prototype.getBookid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, \"\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.BookInfo.prototype.setBookid = function (value) {\r\n                jspb.Message.setProto3StringField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional string bookKey = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.BookInfo.prototype.getBookkey = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.BookInfo.prototype.setBookkey = function (value) {\r\n                jspb.Message.setProto3StringField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional string hotelAddr = 3;\r\n             * @return {string}\r\n             */\r\n            proto.stream.BookInfo.prototype.getHoteladdr = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.BookInfo.prototype.setHoteladdr = function (value) {\r\n                jspb.Message.setProto3StringField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional string wssProxy = 4;\r\n             * @return {string}\r\n             */\r\n            proto.stream.BookInfo.prototype.getWssproxy = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.BookInfo.prototype.setWssproxy = function (value) {\r\n                jspb.Message.setProto3StringField(this, 4, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.RoomInfo = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.RoomInfo, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.RoomInfo.displayName = \"proto.stream.RoomInfo\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.RoomInfo.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.RoomInfo.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.RoomInfo} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.RoomInfo.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                        roomname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\r\n                        maxplayer: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        mode: jspb.Message.getFieldWithDefault(msg, 4, 0),\r\n                        canwatch: jspb.Message.getFieldWithDefault(msg, 5, 0),\r\n                        visibility: jspb.Message.getFieldWithDefault(msg, 6, 0),\r\n                        roomproperty: msg.getRoomproperty_asB64(),\r\n                        owner: jspb.Message.getFieldWithDefault(msg, 8, 0),\r\n                        state: jspb.Message.getFieldWithDefault(msg, 9, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.RoomInfo}\r\n             */\r\n            proto.stream.RoomInfo.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.RoomInfo;\r\n                return proto.stream.RoomInfo.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.RoomInfo} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.RoomInfo}\r\n             */\r\n            proto.stream.RoomInfo.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readString());\r\n                            msg.setRoomname(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setMaxplayer(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readInt32());\r\n                            msg.setMode(value);\r\n                            break;\r\n                        case 5:\r\n                            var value = (reader.readInt32());\r\n                            msg.setCanwatch(value);\r\n                            break;\r\n                        case 6:\r\n                            var value = (reader.readInt32());\r\n                            msg.setVisibility(value);\r\n                            break;\r\n                        case 7:\r\n                            var value = (reader.readBytes());\r\n                            msg.setRoomproperty(value);\r\n                            break;\r\n                        case 8:\r\n                            var value = (reader.readUint32());\r\n                            msg.setOwner(value);\r\n                            break;\r\n                        case 9:\r\n                            var value = (reader.readEnum());\r\n                            msg.setState(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.RoomInfo.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.RoomInfo.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.RoomInfo} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.RoomInfo.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(1, f);\r\n                }\r\n                f = message.getRoomname();\r\n                if (f.length > 0) {\r\n                    writer.writeString(2, f);\r\n                }\r\n                f = message.getMaxplayer();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n                f = message.getMode();\r\n                if (f !== 0) {\r\n                    writer.writeInt32(4, f);\r\n                }\r\n                f = message.getCanwatch();\r\n                if (f !== 0) {\r\n                    writer.writeInt32(5, f);\r\n                }\r\n                f = message.getVisibility();\r\n                if (f !== 0) {\r\n                    writer.writeInt32(6, f);\r\n                }\r\n                f = message.getRoomproperty_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(7, f);\r\n                }\r\n                f = message.getOwner();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(8, f);\r\n                }\r\n                f = message.getState();\r\n                if (f !== 0.0) {\r\n                    writer.writeEnum(9, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 1;\r\n             * @return {string}\r\n             */\r\n            proto.stream.RoomInfo.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.RoomInfo.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional string roomName = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.RoomInfo.prototype.getRoomname = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.RoomInfo.prototype.setRoomname = function (value) {\r\n                jspb.Message.setProto3StringField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint32 maxPlayer = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomInfo.prototype.getMaxplayer = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomInfo.prototype.setMaxplayer = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional int32 mode = 4;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomInfo.prototype.getMode = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomInfo.prototype.setMode = function (value) {\r\n                jspb.Message.setProto3IntField(this, 4, value);\r\n            };\r\n            /**\r\n             * optional int32 canWatch = 5;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomInfo.prototype.getCanwatch = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomInfo.prototype.setCanwatch = function (value) {\r\n                jspb.Message.setProto3IntField(this, 5, value);\r\n            };\r\n            /**\r\n             * optional int32 visibility = 6;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomInfo.prototype.getVisibility = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 6, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomInfo.prototype.setVisibility = function (value) {\r\n                jspb.Message.setProto3IntField(this, 6, value);\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 7;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.RoomInfo.prototype.getRoomproperty = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 7, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 7;\r\n             * This is a type-conversion wrapper around `getRoomproperty()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.RoomInfo.prototype.getRoomproperty_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getRoomproperty()));\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 7;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getRoomproperty()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.RoomInfo.prototype.getRoomproperty_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getRoomproperty()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.RoomInfo.prototype.setRoomproperty = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 7, value);\r\n            };\r\n            /**\r\n             * optional uint32 owner = 8;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomInfo.prototype.getOwner = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 8, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomInfo.prototype.setOwner = function (value) {\r\n                jspb.Message.setProto3IntField(this, 8, value);\r\n            };\r\n            /**\r\n             * optional RoomState state = 9;\r\n             * @return {!proto.stream.RoomState}\r\n             */\r\n            proto.stream.RoomInfo.prototype.getState = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 9, 0));\r\n            };\r\n            /** @param {!proto.stream.RoomState} value */\r\n            proto.stream.RoomInfo.prototype.setState = function (value) {\r\n                jspb.Message.setProto3EnumField(this, 9, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.JoinRoomReq = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.JoinRoomReq.repeatedFields_, null);\r\n            };\r\n            goog.inherits(proto.stream.JoinRoomReq, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.JoinRoomReq.displayName = \"proto.stream.JoinRoomReq\";\r\n            }\r\n            /**\r\n             * List of repeated fields within this message type.\r\n             * @private {!Array<number>}\r\n             * @const\r\n             */\r\n            proto.stream.JoinRoomReq.repeatedFields_ = [5];\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.JoinRoomReq.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.JoinRoomReq.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.JoinRoomReq} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.JoinRoomReq.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        jointype: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        playerinfo: (f = msg.getPlayerinfo()) && proto.stream.PlayerInfo.toObject(includeInstance, f),\r\n                        gameid: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        roominfo: (f = msg.getRoominfo()) && proto.stream.RoomInfo.toObject(includeInstance, f),\r\n                        tagsList: jspb.Message.toObjectList(msg.getTagsList(), proto.stream.keyValue.toObject, includeInstance),\r\n                        cpproto: msg.getCpproto_asB64()\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.JoinRoomReq}\r\n             */\r\n            proto.stream.JoinRoomReq.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.JoinRoomReq;\r\n                return proto.stream.JoinRoomReq.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.JoinRoomReq} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.JoinRoomReq}\r\n             */\r\n            proto.stream.JoinRoomReq.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readEnum());\r\n                            msg.setJointype(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = new proto.stream.PlayerInfo;\r\n                            reader.readMessage(value, proto.stream.PlayerInfo.deserializeBinaryFromReader);\r\n                            msg.setPlayerinfo(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameid(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = new proto.stream.RoomInfo;\r\n                            reader.readMessage(value, proto.stream.RoomInfo.deserializeBinaryFromReader);\r\n                            msg.setRoominfo(value);\r\n                            break;\r\n                        case 5:\r\n                            var value = new proto.stream.keyValue;\r\n                            reader.readMessage(value, proto.stream.keyValue.deserializeBinaryFromReader);\r\n                            msg.addTags(value);\r\n                            break;\r\n                        case 6:\r\n                            var value = (reader.readBytes());\r\n                            msg.setCpproto(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.JoinRoomReq.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.JoinRoomReq.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.JoinRoomReq} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.JoinRoomReq.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getJointype();\r\n                if (f !== 0.0) {\r\n                    writer.writeEnum(1, f);\r\n                }\r\n                f = message.getPlayerinfo();\r\n                if (f != null) {\r\n                    writer.writeMessage(2, f, proto.stream.PlayerInfo.serializeBinaryToWriter);\r\n                }\r\n                f = message.getGameid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n                f = message.getRoominfo();\r\n                if (f != null) {\r\n                    writer.writeMessage(4, f, proto.stream.RoomInfo.serializeBinaryToWriter);\r\n                }\r\n                f = message.getTagsList();\r\n                if (f.length > 0) {\r\n                    writer.writeRepeatedMessage(5, f, proto.stream.keyValue.serializeBinaryToWriter);\r\n                }\r\n                f = message.getCpproto_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(6, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional JoinRoomType joinType = 1;\r\n             * @return {!proto.stream.JoinRoomType}\r\n             */\r\n            proto.stream.JoinRoomReq.prototype.getJointype = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {!proto.stream.JoinRoomType} value */\r\n            proto.stream.JoinRoomReq.prototype.setJointype = function (value) {\r\n                jspb.Message.setProto3EnumField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional PlayerInfo playerInfo = 2;\r\n             * @return {?proto.stream.PlayerInfo}\r\n             */\r\n            proto.stream.JoinRoomReq.prototype.getPlayerinfo = function () {\r\n                return (jspb.Message.getWrapperField(this, proto.stream.PlayerInfo, 2));\r\n            };\r\n            /** @param {?proto.stream.PlayerInfo|undefined} value */\r\n            proto.stream.JoinRoomReq.prototype.setPlayerinfo = function (value) {\r\n                jspb.Message.setWrapperField(this, 2, value);\r\n            };\r\n            proto.stream.JoinRoomReq.prototype.clearPlayerinfo = function () {\r\n                this.setPlayerinfo(undefined);\r\n            };\r\n            /**\r\n             * Returns whether this field is set.\r\n             * @return {!boolean}\r\n             */\r\n            proto.stream.JoinRoomReq.prototype.hasPlayerinfo = function () {\r\n                return jspb.Message.getField(this, 2) != null;\r\n            };\r\n            /**\r\n             * optional uint32 gameID = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.JoinRoomReq.prototype.getGameid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.JoinRoomReq.prototype.setGameid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional RoomInfo roomInfo = 4;\r\n             * @return {?proto.stream.RoomInfo}\r\n             */\r\n            proto.stream.JoinRoomReq.prototype.getRoominfo = function () {\r\n                return (jspb.Message.getWrapperField(this, proto.stream.RoomInfo, 4));\r\n            };\r\n            /** @param {?proto.stream.RoomInfo|undefined} value */\r\n            proto.stream.JoinRoomReq.prototype.setRoominfo = function (value) {\r\n                jspb.Message.setWrapperField(this, 4, value);\r\n            };\r\n            proto.stream.JoinRoomReq.prototype.clearRoominfo = function () {\r\n                this.setRoominfo(undefined);\r\n            };\r\n            /**\r\n             * Returns whether this field is set.\r\n             * @return {!boolean}\r\n             */\r\n            proto.stream.JoinRoomReq.prototype.hasRoominfo = function () {\r\n                return jspb.Message.getField(this, 4) != null;\r\n            };\r\n            /**\r\n             * repeated keyValue tags = 5;\r\n             * @return {!Array.<!proto.stream.keyValue>}\r\n             */\r\n            proto.stream.JoinRoomReq.prototype.getTagsList = function () {\r\n                return (jspb.Message.getRepeatedWrapperField(this, proto.stream.keyValue, 5));\r\n            };\r\n            /** @param {!Array.<!proto.stream.keyValue>} value */\r\n            proto.stream.JoinRoomReq.prototype.setTagsList = function (value) {\r\n                jspb.Message.setRepeatedWrapperField(this, 5, value);\r\n            };\r\n            /**\r\n             * @param {!proto.stream.keyValue=} opt_value\r\n             * @param {number=} opt_index\r\n             * @return {!proto.stream.keyValue}\r\n             */\r\n            proto.stream.JoinRoomReq.prototype.addTags = function (opt_value, opt_index) {\r\n                return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.stream.keyValue, opt_index);\r\n            };\r\n            proto.stream.JoinRoomReq.prototype.clearTagsList = function () {\r\n                this.setTagsList([]);\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 6;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.JoinRoomReq.prototype.getCpproto = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 6, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 6;\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.JoinRoomReq.prototype.getCpproto_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getCpproto()));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 6;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.JoinRoomReq.prototype.getCpproto_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getCpproto()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.JoinRoomReq.prototype.setCpproto = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 6, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.JoinRoomRsp = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.JoinRoomRsp.repeatedFields_, null);\r\n            };\r\n            goog.inherits(proto.stream.JoinRoomRsp, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.JoinRoomRsp.displayName = \"proto.stream.JoinRoomRsp\";\r\n            }\r\n            /**\r\n             * List of repeated fields within this message type.\r\n             * @private {!Array<number>}\r\n             * @const\r\n             */\r\n            proto.stream.JoinRoomRsp.repeatedFields_ = [2];\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.JoinRoomRsp.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.JoinRoomRsp.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.JoinRoomRsp} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.JoinRoomRsp.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        usersList: jspb.Message.toObjectList(msg.getUsersList(), proto.stream.PlayerInfo.toObject, includeInstance),\r\n                        roominfo: (f = msg.getRoominfo()) && proto.stream.RoomInfo.toObject(includeInstance, f),\r\n                        bookinfo: (f = msg.getBookinfo()) && proto.stream.BookInfo.toObject(includeInstance, f),\r\n                        cpproto: msg.getCpproto_asB64()\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.JoinRoomRsp}\r\n             */\r\n            proto.stream.JoinRoomRsp.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.JoinRoomRsp;\r\n                return proto.stream.JoinRoomRsp.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.JoinRoomRsp} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.JoinRoomRsp}\r\n             */\r\n            proto.stream.JoinRoomRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readEnum());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = new proto.stream.PlayerInfo;\r\n                            reader.readMessage(value, proto.stream.PlayerInfo.deserializeBinaryFromReader);\r\n                            msg.addUsers(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = new proto.stream.RoomInfo;\r\n                            reader.readMessage(value, proto.stream.RoomInfo.deserializeBinaryFromReader);\r\n                            msg.setRoominfo(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = new proto.stream.BookInfo;\r\n                            reader.readMessage(value, proto.stream.BookInfo.deserializeBinaryFromReader);\r\n                            msg.setBookinfo(value);\r\n                            break;\r\n                        case 5:\r\n                            var value = (reader.readBytes());\r\n                            msg.setCpproto(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.JoinRoomRsp.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.JoinRoomRsp.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.JoinRoomRsp} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.JoinRoomRsp.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0.0) {\r\n                    writer.writeEnum(1, f);\r\n                }\r\n                f = message.getUsersList();\r\n                if (f.length > 0) {\r\n                    writer.writeRepeatedMessage(2, f, proto.stream.PlayerInfo.serializeBinaryToWriter);\r\n                }\r\n                f = message.getRoominfo();\r\n                if (f != null) {\r\n                    writer.writeMessage(3, f, proto.stream.RoomInfo.serializeBinaryToWriter);\r\n                }\r\n                f = message.getBookinfo();\r\n                if (f != null) {\r\n                    writer.writeMessage(4, f, proto.stream.BookInfo.serializeBinaryToWriter);\r\n                }\r\n                f = message.getCpproto_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(5, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional ErrorCode status = 1;\r\n             * @return {!proto.stream.ErrorCode}\r\n             */\r\n            proto.stream.JoinRoomRsp.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {!proto.stream.ErrorCode} value */\r\n            proto.stream.JoinRoomRsp.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3EnumField(this, 1, value);\r\n            };\r\n            /**\r\n             * repeated PlayerInfo users = 2;\r\n             * @return {!Array.<!proto.stream.PlayerInfo>}\r\n             */\r\n            proto.stream.JoinRoomRsp.prototype.getUsersList = function () {\r\n                return (jspb.Message.getRepeatedWrapperField(this, proto.stream.PlayerInfo, 2));\r\n            };\r\n            /** @param {!Array.<!proto.stream.PlayerInfo>} value */\r\n            proto.stream.JoinRoomRsp.prototype.setUsersList = function (value) {\r\n                jspb.Message.setRepeatedWrapperField(this, 2, value);\r\n            };\r\n            /**\r\n             * @param {!proto.stream.PlayerInfo=} opt_value\r\n             * @param {number=} opt_index\r\n             * @return {!proto.stream.PlayerInfo}\r\n             */\r\n            proto.stream.JoinRoomRsp.prototype.addUsers = function (opt_value, opt_index) {\r\n                return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.stream.PlayerInfo, opt_index);\r\n            };\r\n            proto.stream.JoinRoomRsp.prototype.clearUsersList = function () {\r\n                this.setUsersList([]);\r\n            };\r\n            /**\r\n             * optional RoomInfo roomInfo = 3;\r\n             * @return {?proto.stream.RoomInfo}\r\n             */\r\n            proto.stream.JoinRoomRsp.prototype.getRoominfo = function () {\r\n                return (jspb.Message.getWrapperField(this, proto.stream.RoomInfo, 3));\r\n            };\r\n            /** @param {?proto.stream.RoomInfo|undefined} value */\r\n            proto.stream.JoinRoomRsp.prototype.setRoominfo = function (value) {\r\n                jspb.Message.setWrapperField(this, 3, value);\r\n            };\r\n            proto.stream.JoinRoomRsp.prototype.clearRoominfo = function () {\r\n                this.setRoominfo(undefined);\r\n            };\r\n            /**\r\n             * Returns whether this field is set.\r\n             * @return {!boolean}\r\n             */\r\n            proto.stream.JoinRoomRsp.prototype.hasRoominfo = function () {\r\n                return jspb.Message.getField(this, 3) != null;\r\n            };\r\n            /**\r\n             * optional BookInfo bookInfo = 4;\r\n             * @return {?proto.stream.BookInfo}\r\n             */\r\n            proto.stream.JoinRoomRsp.prototype.getBookinfo = function () {\r\n                return (jspb.Message.getWrapperField(this, proto.stream.BookInfo, 4));\r\n            };\r\n            /** @param {?proto.stream.BookInfo|undefined} value */\r\n            proto.stream.JoinRoomRsp.prototype.setBookinfo = function (value) {\r\n                jspb.Message.setWrapperField(this, 4, value);\r\n            };\r\n            proto.stream.JoinRoomRsp.prototype.clearBookinfo = function () {\r\n                this.setBookinfo(undefined);\r\n            };\r\n            /**\r\n             * Returns whether this field is set.\r\n             * @return {!boolean}\r\n             */\r\n            proto.stream.JoinRoomRsp.prototype.hasBookinfo = function () {\r\n                return jspb.Message.getField(this, 4) != null;\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 5;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.JoinRoomRsp.prototype.getCpproto = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 5, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 5;\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.JoinRoomRsp.prototype.getCpproto_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getCpproto()));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 5;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.JoinRoomRsp.prototype.getCpproto_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getCpproto()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.JoinRoomRsp.prototype.setCpproto = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 5, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.NoticeJoin = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.NoticeJoin, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.NoticeJoin.displayName = \"proto.stream.NoticeJoin\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.NoticeJoin.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.NoticeJoin.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.NoticeJoin} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.NoticeJoin.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        user: (f = msg.getUser()) && proto.stream.PlayerInfo.toObject(includeInstance, f)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.NoticeJoin}\r\n             */\r\n            proto.stream.NoticeJoin.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.NoticeJoin;\r\n                return proto.stream.NoticeJoin.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.NoticeJoin} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.NoticeJoin}\r\n             */\r\n            proto.stream.NoticeJoin.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = new proto.stream.PlayerInfo;\r\n                            reader.readMessage(value, proto.stream.PlayerInfo.deserializeBinaryFromReader);\r\n                            msg.setUser(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.NoticeJoin.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.NoticeJoin.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.NoticeJoin} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.NoticeJoin.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getUser();\r\n                if (f != null) {\r\n                    writer.writeMessage(1, f, proto.stream.PlayerInfo.serializeBinaryToWriter);\r\n                }\r\n            };\r\n            /**\r\n             * optional PlayerInfo user = 1;\r\n             * @return {?proto.stream.PlayerInfo}\r\n             */\r\n            proto.stream.NoticeJoin.prototype.getUser = function () {\r\n                return (jspb.Message.getWrapperField(this, proto.stream.PlayerInfo, 1));\r\n            };\r\n            /** @param {?proto.stream.PlayerInfo|undefined} value */\r\n            proto.stream.NoticeJoin.prototype.setUser = function (value) {\r\n                jspb.Message.setWrapperField(this, 1, value);\r\n            };\r\n            proto.stream.NoticeJoin.prototype.clearUser = function () {\r\n                this.setUser(undefined);\r\n            };\r\n            /**\r\n             * Returns whether this field is set.\r\n             * @return {!boolean}\r\n             */\r\n            proto.stream.NoticeJoin.prototype.hasUser = function () {\r\n                return jspb.Message.getField(this, 1) != null;\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.NoticeLeave = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.NoticeLeave, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.NoticeLeave.displayName = \"proto.stream.NoticeLeave\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.NoticeLeave.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.NoticeLeave.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.NoticeLeave} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.NoticeLeave.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                        owner: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        cpproto: msg.getCpproto_asB64()\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.NoticeLeave}\r\n             */\r\n            proto.stream.NoticeLeave.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.NoticeLeave;\r\n                return proto.stream.NoticeLeave.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.NoticeLeave} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.NoticeLeave}\r\n             */\r\n            proto.stream.NoticeLeave.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setOwner(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readBytes());\r\n                            msg.setCpproto(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.NoticeLeave.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.NoticeLeave.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.NoticeLeave} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.NoticeLeave.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(2, f);\r\n                }\r\n                f = message.getOwner();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n                f = message.getCpproto_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(4, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 userID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.NoticeLeave.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.NoticeLeave.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.NoticeLeave.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.NoticeLeave.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint32 owner = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.NoticeLeave.prototype.getOwner = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.NoticeLeave.prototype.setOwner = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.NoticeLeave.prototype.getCpproto = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.NoticeLeave.prototype.getCpproto_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getCpproto()));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.NoticeLeave.prototype.getCpproto_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getCpproto()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.NoticeLeave.prototype.setCpproto = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 4, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.JoinOverReq = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.JoinOverReq, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.JoinOverReq.displayName = \"proto.stream.JoinOverReq\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.JoinOverReq.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.JoinOverReq.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.JoinOverReq} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.JoinOverReq.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                        gameid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        cpproto: msg.getCpproto_asB64(),\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 4, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.JoinOverReq}\r\n             */\r\n            proto.stream.JoinOverReq.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.JoinOverReq;\r\n                return proto.stream.JoinOverReq.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.JoinOverReq} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.JoinOverReq}\r\n             */\r\n            proto.stream.JoinOverReq.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readBytes());\r\n                            msg.setCpproto(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.JoinOverReq.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.JoinOverReq.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.JoinOverReq} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.JoinOverReq.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(1, f);\r\n                }\r\n                f = message.getGameid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getCpproto_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(3, f);\r\n                }\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(4, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 1;\r\n             * @return {string}\r\n             */\r\n            proto.stream.JoinOverReq.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.JoinOverReq.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 gameID = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.JoinOverReq.prototype.getGameid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.JoinOverReq.prototype.setGameid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.JoinOverReq.prototype.getCpproto = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.JoinOverReq.prototype.getCpproto_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getCpproto()));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.JoinOverReq.prototype.getCpproto_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getCpproto()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.JoinOverReq.prototype.setCpproto = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional uint32 userID = 4;\r\n             * @return {number}\r\n             */\r\n            proto.stream.JoinOverReq.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.JoinOverReq.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 4, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.JoinOverRsp = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.JoinOverRsp, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.JoinOverRsp.displayName = \"proto.stream.JoinOverRsp\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.JoinOverRsp.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.JoinOverRsp.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.JoinOverRsp} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.JoinOverRsp.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        cpproto: msg.getCpproto_asB64()\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.JoinOverRsp}\r\n             */\r\n            proto.stream.JoinOverRsp.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.JoinOverRsp;\r\n                return proto.stream.JoinOverRsp.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.JoinOverRsp} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.JoinOverRsp}\r\n             */\r\n            proto.stream.JoinOverRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readEnum());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readBytes());\r\n                            msg.setCpproto(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.JoinOverRsp.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.JoinOverRsp.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.JoinOverRsp} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.JoinOverRsp.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0.0) {\r\n                    writer.writeEnum(1, f);\r\n                }\r\n                f = message.getCpproto_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(2, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional ErrorCode status = 1;\r\n             * @return {!proto.stream.ErrorCode}\r\n             */\r\n            proto.stream.JoinOverRsp.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {!proto.stream.ErrorCode} value */\r\n            proto.stream.JoinOverRsp.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3EnumField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 2;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.JoinOverRsp.prototype.getCpproto = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 2;\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.JoinOverRsp.prototype.getCpproto_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getCpproto()));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 2;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.JoinOverRsp.prototype.getCpproto_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getCpproto()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.JoinOverRsp.prototype.setCpproto = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 2, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.JoinOverNotify = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.JoinOverNotify, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.JoinOverNotify.displayName = \"proto.stream.JoinOverNotify\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.JoinOverNotify.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.JoinOverNotify.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.JoinOverNotify} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.JoinOverNotify.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        srcuserid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                        cpproto: msg.getCpproto_asB64()\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.JoinOverNotify}\r\n             */\r\n            proto.stream.JoinOverNotify.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.JoinOverNotify;\r\n                return proto.stream.JoinOverNotify.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.JoinOverNotify} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.JoinOverNotify}\r\n             */\r\n            proto.stream.JoinOverNotify.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setSrcuserid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readBytes());\r\n                            msg.setCpproto(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.JoinOverNotify.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.JoinOverNotify.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.JoinOverNotify} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.JoinOverNotify.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getSrcuserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(2, f);\r\n                }\r\n                f = message.getCpproto_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(3, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 srcUserID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.JoinOverNotify.prototype.getSrcuserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.JoinOverNotify.prototype.setSrcuserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.JoinOverNotify.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.JoinOverNotify.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.JoinOverNotify.prototype.getCpproto = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.JoinOverNotify.prototype.getCpproto_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getCpproto()));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.JoinOverNotify.prototype.getCpproto_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getCpproto()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.JoinOverNotify.prototype.setCpproto = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 3, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.JoinOpenReq = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.JoinOpenReq, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.JoinOpenReq.displayName = \"proto.stream.JoinOpenReq\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.JoinOpenReq.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.JoinOpenReq.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.JoinOpenReq} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.JoinOpenReq.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                        gameid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        cpproto: msg.getCpproto_asB64()\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.JoinOpenReq}\r\n             */\r\n            proto.stream.JoinOpenReq.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.JoinOpenReq;\r\n                return proto.stream.JoinOpenReq.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.JoinOpenReq} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.JoinOpenReq}\r\n             */\r\n            proto.stream.JoinOpenReq.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readBytes());\r\n                            msg.setCpproto(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.JoinOpenReq.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.JoinOpenReq.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.JoinOpenReq} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.JoinOpenReq.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(1, f);\r\n                }\r\n                f = message.getGameid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n                f = message.getCpproto_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(4, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 1;\r\n             * @return {string}\r\n             */\r\n            proto.stream.JoinOpenReq.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.JoinOpenReq.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 gameID = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.JoinOpenReq.prototype.getGameid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.JoinOpenReq.prototype.setGameid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint32 userID = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.JoinOpenReq.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.JoinOpenReq.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.JoinOpenReq.prototype.getCpproto = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.JoinOpenReq.prototype.getCpproto_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getCpproto()));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.JoinOpenReq.prototype.getCpproto_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getCpproto()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.JoinOpenReq.prototype.setCpproto = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 4, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.JoinOpenRsp = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.JoinOpenRsp, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.JoinOpenRsp.displayName = \"proto.stream.JoinOpenRsp\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.JoinOpenRsp.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.JoinOpenRsp.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.JoinOpenRsp} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.JoinOpenRsp.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        cpproto: msg.getCpproto_asB64()\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.JoinOpenRsp}\r\n             */\r\n            proto.stream.JoinOpenRsp.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.JoinOpenRsp;\r\n                return proto.stream.JoinOpenRsp.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.JoinOpenRsp} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.JoinOpenRsp}\r\n             */\r\n            proto.stream.JoinOpenRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readEnum());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readBytes());\r\n                            msg.setCpproto(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.JoinOpenRsp.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.JoinOpenRsp.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.JoinOpenRsp} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.JoinOpenRsp.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0.0) {\r\n                    writer.writeEnum(1, f);\r\n                }\r\n                f = message.getCpproto_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(2, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional ErrorCode status = 1;\r\n             * @return {!proto.stream.ErrorCode}\r\n             */\r\n            proto.stream.JoinOpenRsp.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {!proto.stream.ErrorCode} value */\r\n            proto.stream.JoinOpenRsp.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3EnumField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 2;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.JoinOpenRsp.prototype.getCpproto = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 2;\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.JoinOpenRsp.prototype.getCpproto_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getCpproto()));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 2;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.JoinOpenRsp.prototype.getCpproto_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getCpproto()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.JoinOpenRsp.prototype.setCpproto = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 2, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.JoinOpenNotify = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.JoinOpenNotify, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.JoinOpenNotify.displayName = \"proto.stream.JoinOpenNotify\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.JoinOpenNotify.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.JoinOpenNotify.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.JoinOpenNotify} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.JoinOpenNotify.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                        cpproto: msg.getCpproto_asB64()\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.JoinOpenNotify}\r\n             */\r\n            proto.stream.JoinOpenNotify.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.JoinOpenNotify;\r\n                return proto.stream.JoinOpenNotify.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.JoinOpenNotify} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.JoinOpenNotify}\r\n             */\r\n            proto.stream.JoinOpenNotify.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readBytes());\r\n                            msg.setCpproto(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.JoinOpenNotify.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.JoinOpenNotify.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.JoinOpenNotify} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.JoinOpenNotify.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(2, f);\r\n                }\r\n                f = message.getCpproto_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(3, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 userID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.JoinOpenNotify.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.JoinOpenNotify.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.JoinOpenNotify.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.JoinOpenNotify.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.JoinOpenNotify.prototype.getCpproto = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.JoinOpenNotify.prototype.getCpproto_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getCpproto()));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.JoinOpenNotify.prototype.getCpproto_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getCpproto()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.JoinOpenNotify.prototype.setCpproto = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 3, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.LeaveRoomReq = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.LeaveRoomReq, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.LeaveRoomReq.displayName = \"proto.stream.LeaveRoomReq\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.LeaveRoomReq.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.LeaveRoomReq.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.LeaveRoomReq} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.LeaveRoomReq.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        gameid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 3, \"0\"),\r\n                        cpproto: msg.getCpproto_asB64()\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.LeaveRoomReq}\r\n             */\r\n            proto.stream.LeaveRoomReq.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.LeaveRoomReq;\r\n                return proto.stream.LeaveRoomReq.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.LeaveRoomReq} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.LeaveRoomReq}\r\n             */\r\n            proto.stream.LeaveRoomReq.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readBytes());\r\n                            msg.setCpproto(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.LeaveRoomReq.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.LeaveRoomReq.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.LeaveRoomReq} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.LeaveRoomReq.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getGameid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(3, f);\r\n                }\r\n                f = message.getCpproto_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(4, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 userID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.LeaveRoomReq.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.LeaveRoomReq.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 gameID = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.LeaveRoomReq.prototype.getGameid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.LeaveRoomReq.prototype.setGameid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 3;\r\n             * @return {string}\r\n             */\r\n            proto.stream.LeaveRoomReq.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.LeaveRoomReq.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.LeaveRoomReq.prototype.getCpproto = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.LeaveRoomReq.prototype.getCpproto_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getCpproto()));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.LeaveRoomReq.prototype.getCpproto_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getCpproto()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.LeaveRoomReq.prototype.setCpproto = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 4, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.LeaveRoomRsp = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.LeaveRoomRsp, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.LeaveRoomRsp.displayName = \"proto.stream.LeaveRoomRsp\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.LeaveRoomRsp.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.LeaveRoomRsp.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.LeaveRoomRsp} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.LeaveRoomRsp.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        cpproto: msg.getCpproto_asB64()\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.LeaveRoomRsp}\r\n             */\r\n            proto.stream.LeaveRoomRsp.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.LeaveRoomRsp;\r\n                return proto.stream.LeaveRoomRsp.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.LeaveRoomRsp} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.LeaveRoomRsp}\r\n             */\r\n            proto.stream.LeaveRoomRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readEnum());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readBytes());\r\n                            msg.setCpproto(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.LeaveRoomRsp.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.LeaveRoomRsp.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.LeaveRoomRsp} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.LeaveRoomRsp.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0.0) {\r\n                    writer.writeEnum(1, f);\r\n                }\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(2, f);\r\n                }\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n                f = message.getCpproto_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(4, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional ErrorCode status = 1;\r\n             * @return {!proto.stream.ErrorCode}\r\n             */\r\n            proto.stream.LeaveRoomRsp.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {!proto.stream.ErrorCode} value */\r\n            proto.stream.LeaveRoomRsp.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3EnumField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.LeaveRoomRsp.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.LeaveRoomRsp.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint32 userID = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.LeaveRoomRsp.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.LeaveRoomRsp.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.LeaveRoomRsp.prototype.getCpproto = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.LeaveRoomRsp.prototype.getCpproto_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getCpproto()));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.LeaveRoomRsp.prototype.getCpproto_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getCpproto()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.LeaveRoomRsp.prototype.setCpproto = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 4, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.TcpProtoHeader = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.TcpProtoHeader, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.TcpProtoHeader.displayName = \"proto.stream.TcpProtoHeader\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.TcpProtoHeader.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.TcpProtoHeader.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.TcpProtoHeader} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.TcpProtoHeader.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        size: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        seq: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        cmd: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        version: jspb.Message.getFieldWithDefault(msg, 4, 0),\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 5, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.TcpProtoHeader}\r\n             */\r\n            proto.stream.TcpProtoHeader.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.TcpProtoHeader;\r\n                return proto.stream.TcpProtoHeader.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.TcpProtoHeader} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.TcpProtoHeader}\r\n             */\r\n            proto.stream.TcpProtoHeader.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setSize(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setSeq(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setCmd(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readUint32());\r\n                            msg.setVersion(value);\r\n                            break;\r\n                        case 5:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.TcpProtoHeader.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.TcpProtoHeader.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.TcpProtoHeader} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.TcpProtoHeader.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getSize();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getSeq();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getCmd();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n                f = message.getVersion();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(4, f);\r\n                }\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(5, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 size = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.TcpProtoHeader.prototype.getSize = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.TcpProtoHeader.prototype.setSize = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 seq = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.TcpProtoHeader.prototype.getSeq = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.TcpProtoHeader.prototype.setSeq = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint32 cmd = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.TcpProtoHeader.prototype.getCmd = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.TcpProtoHeader.prototype.setCmd = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional uint32 version = 4;\r\n             * @return {number}\r\n             */\r\n            proto.stream.TcpProtoHeader.prototype.getVersion = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.TcpProtoHeader.prototype.setVersion = function (value) {\r\n                jspb.Message.setProto3IntField(this, 4, value);\r\n            };\r\n            /**\r\n             * optional uint32 userID = 5;\r\n             * @return {number}\r\n             */\r\n            proto.stream.TcpProtoHeader.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.TcpProtoHeader.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 5, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.ConnDetailV2 = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.ConnDetailV2, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.ConnDetailV2.displayName = \"proto.stream.ConnDetailV2\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.ConnDetailV2.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.ConnDetailV2.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.ConnDetailV2} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.ConnDetailV2.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        gameid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        fieldid: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 4, \"0\"),\r\n                        heartbeattime: jspb.Message.getFieldWithDefault(msg, 5, \"0\"),\r\n                        version: jspb.Message.getFieldWithDefault(msg, 6, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.ConnDetailV2}\r\n             */\r\n            proto.stream.ConnDetailV2.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.ConnDetailV2;\r\n                return proto.stream.ConnDetailV2.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.ConnDetailV2} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.ConnDetailV2}\r\n             */\r\n            proto.stream.ConnDetailV2.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setFieldid(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 5:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setHeartbeattime(value);\r\n                            break;\r\n                        case 6:\r\n                            var value = (reader.readUint32());\r\n                            msg.setVersion(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.ConnDetailV2.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.ConnDetailV2.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.ConnDetailV2} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.ConnDetailV2.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getGameid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getFieldid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(4, f);\r\n                }\r\n                f = message.getHeartbeattime();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(5, f);\r\n                }\r\n                f = message.getVersion();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(6, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 userID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.ConnDetailV2.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.ConnDetailV2.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 gameID = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.ConnDetailV2.prototype.getGameid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.ConnDetailV2.prototype.setGameid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint32 fieldID = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.ConnDetailV2.prototype.getFieldid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.ConnDetailV2.prototype.setFieldid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 4;\r\n             * @return {string}\r\n             */\r\n            proto.stream.ConnDetailV2.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.ConnDetailV2.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 4, value);\r\n            };\r\n            /**\r\n             * optional uint64 heartBeatTime = 5;\r\n             * @return {string}\r\n             */\r\n            proto.stream.ConnDetailV2.prototype.getHeartbeattime = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 5, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.ConnDetailV2.prototype.setHeartbeattime = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 5, value);\r\n            };\r\n            /**\r\n             * optional uint32 version = 6;\r\n             * @return {number}\r\n             */\r\n            proto.stream.ConnDetailV2.prototype.getVersion = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 6, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.ConnDetailV2.prototype.setVersion = function (value) {\r\n                jspb.Message.setProto3IntField(this, 6, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.UserV2 = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.UserV2, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.UserV2.displayName = \"proto.stream.UserV2\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.UserV2.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.UserV2.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.UserV2} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.UserV2.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        userId: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        gameId: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        versionSdk: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        connectionId: jspb.Message.getFieldWithDefault(msg, 4, \"0\"),\r\n                        serviceId: jspb.Message.getFieldWithDefault(msg, 5, 0),\r\n                        roomId: jspb.Message.getFieldWithDefault(msg, 6, \"0\"),\r\n                        deviceId: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\r\n                        connStatus: jspb.Message.getFieldWithDefault(msg, 8, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.UserV2}\r\n             */\r\n            proto.stream.UserV2.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.UserV2;\r\n                return proto.stream.UserV2.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.UserV2} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.UserV2}\r\n             */\r\n            proto.stream.UserV2.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserId(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameId(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setVersionSdk(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setConnectionId(value);\r\n                            break;\r\n                        case 5:\r\n                            var value = (reader.readUint32());\r\n                            msg.setServiceId(value);\r\n                            break;\r\n                        case 6:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomId(value);\r\n                            break;\r\n                        case 7:\r\n                            var value = (reader.readString());\r\n                            msg.setDeviceId(value);\r\n                            break;\r\n                        case 8:\r\n                            var value = (reader.readUint32());\r\n                            msg.setConnStatus(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.UserV2.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.UserV2.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.UserV2} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.UserV2.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getUserId();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getGameId();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getVersionSdk();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n                f = message.getConnectionId();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(4, f);\r\n                }\r\n                f = message.getServiceId();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(5, f);\r\n                }\r\n                f = message.getRoomId();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(6, f);\r\n                }\r\n                f = message.getDeviceId();\r\n                if (f.length > 0) {\r\n                    writer.writeString(7, f);\r\n                }\r\n                f = message.getConnStatus();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(8, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 user_id = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.UserV2.prototype.getUserId = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.UserV2.prototype.setUserId = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 game_id = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.UserV2.prototype.getGameId = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.UserV2.prototype.setGameId = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint32 version_sdk = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.UserV2.prototype.getVersionSdk = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.UserV2.prototype.setVersionSdk = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional uint64 connection_id = 4;\r\n             * @return {string}\r\n             */\r\n            proto.stream.UserV2.prototype.getConnectionId = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.UserV2.prototype.setConnectionId = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 4, value);\r\n            };\r\n            /**\r\n             * optional uint32 service_id = 5;\r\n             * @return {number}\r\n             */\r\n            proto.stream.UserV2.prototype.getServiceId = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.UserV2.prototype.setServiceId = function (value) {\r\n                jspb.Message.setProto3IntField(this, 5, value);\r\n            };\r\n            /**\r\n             * optional uint64 room_id = 6;\r\n             * @return {string}\r\n             */\r\n            proto.stream.UserV2.prototype.getRoomId = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 6, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.UserV2.prototype.setRoomId = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 6, value);\r\n            };\r\n            /**\r\n             * optional string device_id = 7;\r\n             * @return {string}\r\n             */\r\n            proto.stream.UserV2.prototype.getDeviceId = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 7, \"\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.UserV2.prototype.setDeviceId = function (value) {\r\n                jspb.Message.setProto3StringField(this, 7, value);\r\n            };\r\n            /**\r\n             * optional uint32 conn_status = 8;\r\n             * @return {number}\r\n             */\r\n            proto.stream.UserV2.prototype.getConnStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 8, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.UserV2.prototype.setConnStatus = function (value) {\r\n                jspb.Message.setProto3IntField(this, 8, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.NetworkStateReq = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.NetworkStateReq, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.NetworkStateReq.displayName = \"proto.stream.NetworkStateReq\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.NetworkStateReq.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.NetworkStateReq.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.NetworkStateReq} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.NetworkStateReq.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        state: jspb.Message.getFieldWithDefault(msg, 4, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.NetworkStateReq}\r\n             */\r\n            proto.stream.NetworkStateReq.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.NetworkStateReq;\r\n                return proto.stream.NetworkStateReq.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.NetworkStateReq} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.NetworkStateReq}\r\n             */\r\n            proto.stream.NetworkStateReq.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readUint32());\r\n                            msg.setState(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.NetworkStateReq.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.NetworkStateReq.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.NetworkStateReq} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.NetworkStateReq.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getGameid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(2, f);\r\n                }\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n                f = message.getState();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(4, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 gameID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.NetworkStateReq.prototype.getGameid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.NetworkStateReq.prototype.setGameid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.NetworkStateReq.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.NetworkStateReq.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint32 UserID = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.NetworkStateReq.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.NetworkStateReq.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional uint32 state = 4;\r\n             * @return {number}\r\n             */\r\n            proto.stream.NetworkStateReq.prototype.getState = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.NetworkStateReq.prototype.setState = function (value) {\r\n                jspb.Message.setProto3IntField(this, 4, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.NetworkStateRsp = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.NetworkStateRsp, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.NetworkStateRsp.displayName = \"proto.stream.NetworkStateRsp\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.NetworkStateRsp.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.NetworkStateRsp.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.NetworkStateRsp} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.NetworkStateRsp.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.NetworkStateRsp}\r\n             */\r\n            proto.stream.NetworkStateRsp.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.NetworkStateRsp;\r\n                return proto.stream.NetworkStateRsp.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.NetworkStateRsp} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.NetworkStateRsp}\r\n             */\r\n            proto.stream.NetworkStateRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.NetworkStateRsp.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.NetworkStateRsp.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.NetworkStateRsp} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.NetworkStateRsp.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 status = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.NetworkStateRsp.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.NetworkStateRsp.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.NetworkStateNotify = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.NetworkStateNotify, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.NetworkStateNotify.displayName = \"proto.stream.NetworkStateNotify\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.NetworkStateNotify.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.NetworkStateNotify.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.NetworkStateNotify} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.NetworkStateNotify.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        state: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        owner: jspb.Message.getFieldWithDefault(msg, 4, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.NetworkStateNotify}\r\n             */\r\n            proto.stream.NetworkStateNotify.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.NetworkStateNotify;\r\n                return proto.stream.NetworkStateNotify.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.NetworkStateNotify} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.NetworkStateNotify}\r\n             */\r\n            proto.stream.NetworkStateNotify.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setState(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readUint32());\r\n                            msg.setOwner(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.NetworkStateNotify.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.NetworkStateNotify.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.NetworkStateNotify} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.NetworkStateNotify.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(1, f);\r\n                }\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getState();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n                f = message.getOwner();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(4, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 1;\r\n             * @return {string}\r\n             */\r\n            proto.stream.NetworkStateNotify.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.NetworkStateNotify.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 UserID = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.NetworkStateNotify.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.NetworkStateNotify.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint32 state = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.NetworkStateNotify.prototype.getState = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.NetworkStateNotify.prototype.setState = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional uint32 owner = 4;\r\n             * @return {number}\r\n             */\r\n            proto.stream.NetworkStateNotify.prototype.getOwner = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.NetworkStateNotify.prototype.setOwner = function (value) {\r\n                jspb.Message.setProto3IntField(this, 4, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.CreateRoom = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.CreateRoom, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.CreateRoom.displayName = \"proto.stream.CreateRoom\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.CreateRoom.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.CreateRoom.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.CreateRoom} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.CreateRoom.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        playerinfo: (f = msg.getPlayerinfo()) && proto.stream.PlayerInfo.toObject(includeInstance, f),\r\n                        gameid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        roominfo: (f = msg.getRoominfo()) && proto.stream.RoomInfo.toObject(includeInstance, f)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.CreateRoom}\r\n             */\r\n            proto.stream.CreateRoom.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.CreateRoom;\r\n                return proto.stream.CreateRoom.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.CreateRoom} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.CreateRoom}\r\n             */\r\n            proto.stream.CreateRoom.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = new proto.stream.PlayerInfo;\r\n                            reader.readMessage(value, proto.stream.PlayerInfo.deserializeBinaryFromReader);\r\n                            msg.setPlayerinfo(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = new proto.stream.RoomInfo;\r\n                            reader.readMessage(value, proto.stream.RoomInfo.deserializeBinaryFromReader);\r\n                            msg.setRoominfo(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.CreateRoom.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.CreateRoom.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.CreateRoom} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.CreateRoom.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getPlayerinfo();\r\n                if (f != null) {\r\n                    writer.writeMessage(1, f, proto.stream.PlayerInfo.serializeBinaryToWriter);\r\n                }\r\n                f = message.getGameid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getRoominfo();\r\n                if (f != null) {\r\n                    writer.writeMessage(3, f, proto.stream.RoomInfo.serializeBinaryToWriter);\r\n                }\r\n            };\r\n            /**\r\n             * optional PlayerInfo playerInfo = 1;\r\n             * @return {?proto.stream.PlayerInfo}\r\n             */\r\n            proto.stream.CreateRoom.prototype.getPlayerinfo = function () {\r\n                return (jspb.Message.getWrapperField(this, proto.stream.PlayerInfo, 1));\r\n            };\r\n            /** @param {?proto.stream.PlayerInfo|undefined} value */\r\n            proto.stream.CreateRoom.prototype.setPlayerinfo = function (value) {\r\n                jspb.Message.setWrapperField(this, 1, value);\r\n            };\r\n            proto.stream.CreateRoom.prototype.clearPlayerinfo = function () {\r\n                this.setPlayerinfo(undefined);\r\n            };\r\n            /**\r\n             * Returns whether this field is set.\r\n             * @return {!boolean}\r\n             */\r\n            proto.stream.CreateRoom.prototype.hasPlayerinfo = function () {\r\n                return jspb.Message.getField(this, 1) != null;\r\n            };\r\n            /**\r\n             * optional uint32 gameID = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.CreateRoom.prototype.getGameid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.CreateRoom.prototype.setGameid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional RoomInfo roomInfo = 3;\r\n             * @return {?proto.stream.RoomInfo}\r\n             */\r\n            proto.stream.CreateRoom.prototype.getRoominfo = function () {\r\n                return (jspb.Message.getWrapperField(this, proto.stream.RoomInfo, 3));\r\n            };\r\n            /** @param {?proto.stream.RoomInfo|undefined} value */\r\n            proto.stream.CreateRoom.prototype.setRoominfo = function (value) {\r\n                jspb.Message.setWrapperField(this, 3, value);\r\n            };\r\n            proto.stream.CreateRoom.prototype.clearRoominfo = function () {\r\n                this.setRoominfo(undefined);\r\n            };\r\n            /**\r\n             * Returns whether this field is set.\r\n             * @return {!boolean}\r\n             */\r\n            proto.stream.CreateRoom.prototype.hasRoominfo = function () {\r\n                return jspb.Message.getField(this, 3) != null;\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.CreateRoomRsp = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.CreateRoomRsp, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.CreateRoomRsp.displayName = \"proto.stream.CreateRoomRsp\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.CreateRoomRsp.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.CreateRoomRsp.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.CreateRoomRsp} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.CreateRoomRsp.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                        bookinfo: (f = msg.getBookinfo()) && proto.stream.BookInfo.toObject(includeInstance, f),\r\n                        owner: jspb.Message.getFieldWithDefault(msg, 4, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.CreateRoomRsp}\r\n             */\r\n            proto.stream.CreateRoomRsp.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.CreateRoomRsp;\r\n                return proto.stream.CreateRoomRsp.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.CreateRoomRsp} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.CreateRoomRsp}\r\n             */\r\n            proto.stream.CreateRoomRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readEnum());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = new proto.stream.BookInfo;\r\n                            reader.readMessage(value, proto.stream.BookInfo.deserializeBinaryFromReader);\r\n                            msg.setBookinfo(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readUint32());\r\n                            msg.setOwner(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.CreateRoomRsp.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.CreateRoomRsp.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.CreateRoomRsp} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.CreateRoomRsp.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0.0) {\r\n                    writer.writeEnum(1, f);\r\n                }\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(2, f);\r\n                }\r\n                f = message.getBookinfo();\r\n                if (f != null) {\r\n                    writer.writeMessage(3, f, proto.stream.BookInfo.serializeBinaryToWriter);\r\n                }\r\n                f = message.getOwner();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(4, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional ErrorCode status = 1;\r\n             * @return {!proto.stream.ErrorCode}\r\n             */\r\n            proto.stream.CreateRoomRsp.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {!proto.stream.ErrorCode} value */\r\n            proto.stream.CreateRoomRsp.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3EnumField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.CreateRoomRsp.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.CreateRoomRsp.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional BookInfo bookInfo = 3;\r\n             * @return {?proto.stream.BookInfo}\r\n             */\r\n            proto.stream.CreateRoomRsp.prototype.getBookinfo = function () {\r\n                return (jspb.Message.getWrapperField(this, proto.stream.BookInfo, 3));\r\n            };\r\n            /** @param {?proto.stream.BookInfo|undefined} value */\r\n            proto.stream.CreateRoomRsp.prototype.setBookinfo = function (value) {\r\n                jspb.Message.setWrapperField(this, 3, value);\r\n            };\r\n            proto.stream.CreateRoomRsp.prototype.clearBookinfo = function () {\r\n                this.setBookinfo(undefined);\r\n            };\r\n            /**\r\n             * Returns whether this field is set.\r\n             * @return {!boolean}\r\n             */\r\n            proto.stream.CreateRoomRsp.prototype.hasBookinfo = function () {\r\n                return jspb.Message.getField(this, 3) != null;\r\n            };\r\n            /**\r\n             * optional uint32 owner = 4;\r\n             * @return {number}\r\n             */\r\n            proto.stream.CreateRoomRsp.prototype.getOwner = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.CreateRoomRsp.prototype.setOwner = function (value) {\r\n                jspb.Message.setProto3IntField(this, 4, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.GetRoomList = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.GetRoomList, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.GetRoomList.displayName = \"proto.stream.GetRoomList\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.GetRoomList.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.GetRoomList.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.GetRoomList} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.GetRoomList.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        roomfilter: (f = msg.getRoomfilter()) && proto.stream.RoomFilter.toObject(includeInstance, f)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.GetRoomList}\r\n             */\r\n            proto.stream.GetRoomList.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.GetRoomList;\r\n                return proto.stream.GetRoomList.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.GetRoomList} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.GetRoomList}\r\n             */\r\n            proto.stream.GetRoomList.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = new proto.stream.RoomFilter;\r\n                            reader.readMessage(value, proto.stream.RoomFilter.deserializeBinaryFromReader);\r\n                            msg.setRoomfilter(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.GetRoomList.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.GetRoomList.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.GetRoomList} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.GetRoomList.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getGameid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getRoomfilter();\r\n                if (f != null) {\r\n                    writer.writeMessage(2, f, proto.stream.RoomFilter.serializeBinaryToWriter);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 gameID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.GetRoomList.prototype.getGameid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.GetRoomList.prototype.setGameid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional RoomFilter roomFilter = 2;\r\n             * @return {?proto.stream.RoomFilter}\r\n             */\r\n            proto.stream.GetRoomList.prototype.getRoomfilter = function () {\r\n                return (jspb.Message.getWrapperField(this, proto.stream.RoomFilter, 2));\r\n            };\r\n            /** @param {?proto.stream.RoomFilter|undefined} value */\r\n            proto.stream.GetRoomList.prototype.setRoomfilter = function (value) {\r\n                jspb.Message.setWrapperField(this, 2, value);\r\n            };\r\n            proto.stream.GetRoomList.prototype.clearRoomfilter = function () {\r\n                this.setRoomfilter(undefined);\r\n            };\r\n            /**\r\n             * Returns whether this field is set.\r\n             * @return {!boolean}\r\n             */\r\n            proto.stream.GetRoomList.prototype.hasRoomfilter = function () {\r\n                return jspb.Message.getField(this, 2) != null;\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.RoomFilter = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.RoomFilter, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.RoomFilter.displayName = \"proto.stream.RoomFilter\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.RoomFilter.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.RoomFilter.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.RoomFilter} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.RoomFilter.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        maxplayer: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        mode: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        canwatch: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        roomproperty: msg.getRoomproperty_asB64(),\r\n                        full: jspb.Message.getFieldWithDefault(msg, 5, 0),\r\n                        state: jspb.Message.getFieldWithDefault(msg, 6, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.RoomFilter}\r\n             */\r\n            proto.stream.RoomFilter.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.RoomFilter;\r\n                return proto.stream.RoomFilter.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.RoomFilter} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.RoomFilter}\r\n             */\r\n            proto.stream.RoomFilter.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setMaxplayer(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readInt32());\r\n                            msg.setMode(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readInt32());\r\n                            msg.setCanwatch(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readBytes());\r\n                            msg.setRoomproperty(value);\r\n                            break;\r\n                        case 5:\r\n                            var value = (reader.readInt32());\r\n                            msg.setFull(value);\r\n                            break;\r\n                        case 6:\r\n                            var value = (reader.readEnum());\r\n                            msg.setState(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.RoomFilter.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.RoomFilter.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.RoomFilter} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.RoomFilter.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getMaxplayer();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getMode();\r\n                if (f !== 0) {\r\n                    writer.writeInt32(2, f);\r\n                }\r\n                f = message.getCanwatch();\r\n                if (f !== 0) {\r\n                    writer.writeInt32(3, f);\r\n                }\r\n                f = message.getRoomproperty_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(4, f);\r\n                }\r\n                f = message.getFull();\r\n                if (f !== 0) {\r\n                    writer.writeInt32(5, f);\r\n                }\r\n                f = message.getState();\r\n                if (f !== 0.0) {\r\n                    writer.writeEnum(6, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 maxPlayer = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomFilter.prototype.getMaxplayer = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomFilter.prototype.setMaxplayer = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional int32 mode = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomFilter.prototype.getMode = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomFilter.prototype.setMode = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional int32 canWatch = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomFilter.prototype.getCanwatch = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomFilter.prototype.setCanwatch = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 4;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.RoomFilter.prototype.getRoomproperty = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 4;\r\n             * This is a type-conversion wrapper around `getRoomproperty()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.RoomFilter.prototype.getRoomproperty_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getRoomproperty()));\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 4;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getRoomproperty()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.RoomFilter.prototype.getRoomproperty_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getRoomproperty()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.RoomFilter.prototype.setRoomproperty = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 4, value);\r\n            };\r\n            /**\r\n             * optional int32 full = 5;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomFilter.prototype.getFull = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomFilter.prototype.setFull = function (value) {\r\n                jspb.Message.setProto3IntField(this, 5, value);\r\n            };\r\n            /**\r\n             * optional RoomState state = 6;\r\n             * @return {!proto.stream.RoomState}\r\n             */\r\n            proto.stream.RoomFilter.prototype.getState = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 6, 0));\r\n            };\r\n            /** @param {!proto.stream.RoomState} value */\r\n            proto.stream.RoomFilter.prototype.setState = function (value) {\r\n                jspb.Message.setProto3EnumField(this, 6, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.GetRoomListRsp = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.GetRoomListRsp.repeatedFields_, null);\r\n            };\r\n            goog.inherits(proto.stream.GetRoomListRsp, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.GetRoomListRsp.displayName = \"proto.stream.GetRoomListRsp\";\r\n            }\r\n            /**\r\n             * List of repeated fields within this message type.\r\n             * @private {!Array<number>}\r\n             * @const\r\n             */\r\n            proto.stream.GetRoomListRsp.repeatedFields_ = [2];\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.GetRoomListRsp.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.GetRoomListRsp.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.GetRoomListRsp} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.GetRoomListRsp.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        roominfoList: jspb.Message.toObjectList(msg.getRoominfoList(), proto.stream.RoomInfo.toObject, includeInstance)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.GetRoomListRsp}\r\n             */\r\n            proto.stream.GetRoomListRsp.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.GetRoomListRsp;\r\n                return proto.stream.GetRoomListRsp.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.GetRoomListRsp} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.GetRoomListRsp}\r\n             */\r\n            proto.stream.GetRoomListRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readEnum());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = new proto.stream.RoomInfo;\r\n                            reader.readMessage(value, proto.stream.RoomInfo.deserializeBinaryFromReader);\r\n                            msg.addRoominfo(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.GetRoomListRsp.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.GetRoomListRsp.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.GetRoomListRsp} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.GetRoomListRsp.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0.0) {\r\n                    writer.writeEnum(1, f);\r\n                }\r\n                f = message.getRoominfoList();\r\n                if (f.length > 0) {\r\n                    writer.writeRepeatedMessage(2, f, proto.stream.RoomInfo.serializeBinaryToWriter);\r\n                }\r\n            };\r\n            /**\r\n             * optional ErrorCode status = 1;\r\n             * @return {!proto.stream.ErrorCode}\r\n             */\r\n            proto.stream.GetRoomListRsp.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {!proto.stream.ErrorCode} value */\r\n            proto.stream.GetRoomListRsp.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3EnumField(this, 1, value);\r\n            };\r\n            /**\r\n             * repeated RoomInfo roomInfo = 2;\r\n             * @return {!Array.<!proto.stream.RoomInfo>}\r\n             */\r\n            proto.stream.GetRoomListRsp.prototype.getRoominfoList = function () {\r\n                return (jspb.Message.getRepeatedWrapperField(this, proto.stream.RoomInfo, 2));\r\n            };\r\n            /** @param {!Array.<!proto.stream.RoomInfo>} value */\r\n            proto.stream.GetRoomListRsp.prototype.setRoominfoList = function (value) {\r\n                jspb.Message.setRepeatedWrapperField(this, 2, value);\r\n            };\r\n            /**\r\n             * @param {!proto.stream.RoomInfo=} opt_value\r\n             * @param {number=} opt_index\r\n             * @return {!proto.stream.RoomInfo}\r\n             */\r\n            proto.stream.GetRoomListRsp.prototype.addRoominfo = function (opt_value, opt_index) {\r\n                return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.stream.RoomInfo, opt_index);\r\n            };\r\n            proto.stream.GetRoomListRsp.prototype.clearRoominfoList = function () {\r\n                this.setRoominfoList([]);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.GetRoomListExReq = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.GetRoomListExReq, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.GetRoomListExReq.displayName = \"proto.stream.GetRoomListExReq\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.GetRoomListExReq.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.GetRoomListExReq.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.GetRoomListExReq} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.GetRoomListExReq.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        roomfilter: (f = msg.getRoomfilter()) && proto.stream.RoomFilter.toObject(includeInstance, f),\r\n                        sort: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        order: jspb.Message.getFieldWithDefault(msg, 4, 0),\r\n                        pageno: jspb.Message.getFieldWithDefault(msg, 5, 0),\r\n                        pagesize: jspb.Message.getFieldWithDefault(msg, 6, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.GetRoomListExReq}\r\n             */\r\n            proto.stream.GetRoomListExReq.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.GetRoomListExReq;\r\n                return proto.stream.GetRoomListExReq.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.GetRoomListExReq} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.GetRoomListExReq}\r\n             */\r\n            proto.stream.GetRoomListExReq.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = new proto.stream.RoomFilter;\r\n                            reader.readMessage(value, proto.stream.RoomFilter.deserializeBinaryFromReader);\r\n                            msg.setRoomfilter(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readEnum());\r\n                            msg.setSort(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readEnum());\r\n                            msg.setOrder(value);\r\n                            break;\r\n                        case 5:\r\n                            var value = (reader.readInt32());\r\n                            msg.setPageno(value);\r\n                            break;\r\n                        case 6:\r\n                            var value = (reader.readInt32());\r\n                            msg.setPagesize(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.GetRoomListExReq.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.GetRoomListExReq.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.GetRoomListExReq} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.GetRoomListExReq.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getGameid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getRoomfilter();\r\n                if (f != null) {\r\n                    writer.writeMessage(2, f, proto.stream.RoomFilter.serializeBinaryToWriter);\r\n                }\r\n                f = message.getSort();\r\n                if (f !== 0.0) {\r\n                    writer.writeEnum(3, f);\r\n                }\r\n                f = message.getOrder();\r\n                if (f !== 0.0) {\r\n                    writer.writeEnum(4, f);\r\n                }\r\n                f = message.getPageno();\r\n                if (f !== 0) {\r\n                    writer.writeInt32(5, f);\r\n                }\r\n                f = message.getPagesize();\r\n                if (f !== 0) {\r\n                    writer.writeInt32(6, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 gameID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.GetRoomListExReq.prototype.getGameid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.GetRoomListExReq.prototype.setGameid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional RoomFilter roomFilter = 2;\r\n             * @return {?proto.stream.RoomFilter}\r\n             */\r\n            proto.stream.GetRoomListExReq.prototype.getRoomfilter = function () {\r\n                return (jspb.Message.getWrapperField(this, proto.stream.RoomFilter, 2));\r\n            };\r\n            /** @param {?proto.stream.RoomFilter|undefined} value */\r\n            proto.stream.GetRoomListExReq.prototype.setRoomfilter = function (value) {\r\n                jspb.Message.setWrapperField(this, 2, value);\r\n            };\r\n            proto.stream.GetRoomListExReq.prototype.clearRoomfilter = function () {\r\n                this.setRoomfilter(undefined);\r\n            };\r\n            /**\r\n             * Returns whether this field is set.\r\n             * @return {!boolean}\r\n             */\r\n            proto.stream.GetRoomListExReq.prototype.hasRoomfilter = function () {\r\n                return jspb.Message.getField(this, 2) != null;\r\n            };\r\n            /**\r\n             * optional RoomListSort sort = 3;\r\n             * @return {!proto.stream.RoomListSort}\r\n             */\r\n            proto.stream.GetRoomListExReq.prototype.getSort = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {!proto.stream.RoomListSort} value */\r\n            proto.stream.GetRoomListExReq.prototype.setSort = function (value) {\r\n                jspb.Message.setProto3EnumField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional SortOrder order = 4;\r\n             * @return {!proto.stream.SortOrder}\r\n             */\r\n            proto.stream.GetRoomListExReq.prototype.getOrder = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n            };\r\n            /** @param {!proto.stream.SortOrder} value */\r\n            proto.stream.GetRoomListExReq.prototype.setOrder = function (value) {\r\n                jspb.Message.setProto3EnumField(this, 4, value);\r\n            };\r\n            /**\r\n             * optional int32 pageNo = 5;\r\n             * @return {number}\r\n             */\r\n            proto.stream.GetRoomListExReq.prototype.getPageno = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.GetRoomListExReq.prototype.setPageno = function (value) {\r\n                jspb.Message.setProto3IntField(this, 5, value);\r\n            };\r\n            /**\r\n             * optional int32 pageSize = 6;\r\n             * @return {number}\r\n             */\r\n            proto.stream.GetRoomListExReq.prototype.getPagesize = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 6, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.GetRoomListExReq.prototype.setPagesize = function (value) {\r\n                jspb.Message.setProto3IntField(this, 6, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.RoomInfoEx = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.RoomInfoEx, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.RoomInfoEx.displayName = \"proto.stream.RoomInfoEx\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.RoomInfoEx.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.RoomInfoEx.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.RoomInfoEx} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.RoomInfoEx.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                        roomname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\r\n                        maxplayer: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        gameplayer: jspb.Message.getFieldWithDefault(msg, 4, 0),\r\n                        watchplayer: jspb.Message.getFieldWithDefault(msg, 5, 0),\r\n                        mode: jspb.Message.getFieldWithDefault(msg, 6, 0),\r\n                        canwatch: jspb.Message.getFieldWithDefault(msg, 7, 0),\r\n                        roomproperty: msg.getRoomproperty_asB64(),\r\n                        owner: jspb.Message.getFieldWithDefault(msg, 9, 0),\r\n                        state: jspb.Message.getFieldWithDefault(msg, 10, 0),\r\n                        createtime: jspb.Message.getFieldWithDefault(msg, 11, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.RoomInfoEx}\r\n             */\r\n            proto.stream.RoomInfoEx.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.RoomInfoEx;\r\n                return proto.stream.RoomInfoEx.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.RoomInfoEx} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.RoomInfoEx}\r\n             */\r\n            proto.stream.RoomInfoEx.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readString());\r\n                            msg.setRoomname(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setMaxplayer(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameplayer(value);\r\n                            break;\r\n                        case 5:\r\n                            var value = (reader.readUint32());\r\n                            msg.setWatchplayer(value);\r\n                            break;\r\n                        case 6:\r\n                            var value = (reader.readInt32());\r\n                            msg.setMode(value);\r\n                            break;\r\n                        case 7:\r\n                            var value = (reader.readInt32());\r\n                            msg.setCanwatch(value);\r\n                            break;\r\n                        case 8:\r\n                            var value = (reader.readBytes());\r\n                            msg.setRoomproperty(value);\r\n                            break;\r\n                        case 9:\r\n                            var value = (reader.readUint32());\r\n                            msg.setOwner(value);\r\n                            break;\r\n                        case 10:\r\n                            var value = (reader.readEnum());\r\n                            msg.setState(value);\r\n                            break;\r\n                        case 11:\r\n                            var value = (reader.readUint64());\r\n                            msg.setCreatetime(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.RoomInfoEx.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.RoomInfoEx.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.RoomInfoEx} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.RoomInfoEx.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(1, f);\r\n                }\r\n                f = message.getRoomname();\r\n                if (f.length > 0) {\r\n                    writer.writeString(2, f);\r\n                }\r\n                f = message.getMaxplayer();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n                f = message.getGameplayer();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(4, f);\r\n                }\r\n                f = message.getWatchplayer();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(5, f);\r\n                }\r\n                f = message.getMode();\r\n                if (f !== 0) {\r\n                    writer.writeInt32(6, f);\r\n                }\r\n                f = message.getCanwatch();\r\n                if (f !== 0) {\r\n                    writer.writeInt32(7, f);\r\n                }\r\n                f = message.getRoomproperty_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(8, f);\r\n                }\r\n                f = message.getOwner();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(9, f);\r\n                }\r\n                f = message.getState();\r\n                if (f !== 0.0) {\r\n                    writer.writeEnum(10, f);\r\n                }\r\n                f = message.getCreatetime();\r\n                if (f !== 0) {\r\n                    writer.writeUint64(11, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 1;\r\n             * @return {string}\r\n             */\r\n            proto.stream.RoomInfoEx.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.RoomInfoEx.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional string roomName = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.RoomInfoEx.prototype.getRoomname = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.RoomInfoEx.prototype.setRoomname = function (value) {\r\n                jspb.Message.setProto3StringField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint32 maxPlayer = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomInfoEx.prototype.getMaxplayer = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomInfoEx.prototype.setMaxplayer = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional uint32 gamePlayer = 4;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomInfoEx.prototype.getGameplayer = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomInfoEx.prototype.setGameplayer = function (value) {\r\n                jspb.Message.setProto3IntField(this, 4, value);\r\n            };\r\n            /**\r\n             * optional uint32 watchPlayer = 5;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomInfoEx.prototype.getWatchplayer = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomInfoEx.prototype.setWatchplayer = function (value) {\r\n                jspb.Message.setProto3IntField(this, 5, value);\r\n            };\r\n            /**\r\n             * optional int32 mode = 6;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomInfoEx.prototype.getMode = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 6, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomInfoEx.prototype.setMode = function (value) {\r\n                jspb.Message.setProto3IntField(this, 6, value);\r\n            };\r\n            /**\r\n             * optional int32 canWatch = 7;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomInfoEx.prototype.getCanwatch = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 7, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomInfoEx.prototype.setCanwatch = function (value) {\r\n                jspb.Message.setProto3IntField(this, 7, value);\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 8;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.RoomInfoEx.prototype.getRoomproperty = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 8, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 8;\r\n             * This is a type-conversion wrapper around `getRoomproperty()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.RoomInfoEx.prototype.getRoomproperty_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getRoomproperty()));\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 8;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getRoomproperty()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.RoomInfoEx.prototype.getRoomproperty_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getRoomproperty()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.RoomInfoEx.prototype.setRoomproperty = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 8, value);\r\n            };\r\n            /**\r\n             * optional uint32 owner = 9;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomInfoEx.prototype.getOwner = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 9, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomInfoEx.prototype.setOwner = function (value) {\r\n                jspb.Message.setProto3IntField(this, 9, value);\r\n            };\r\n            /**\r\n             * optional RoomState state = 10;\r\n             * @return {!proto.stream.RoomState}\r\n             */\r\n            proto.stream.RoomInfoEx.prototype.getState = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 10, 0));\r\n            };\r\n            /** @param {!proto.stream.RoomState} value */\r\n            proto.stream.RoomInfoEx.prototype.setState = function (value) {\r\n                jspb.Message.setProto3EnumField(this, 10, value);\r\n            };\r\n            /**\r\n             * optional uint64 createTime = 11;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomInfoEx.prototype.getCreatetime = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 11, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomInfoEx.prototype.setCreatetime = function (value) {\r\n                jspb.Message.setProto3IntField(this, 11, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.GetRoomListExRsp = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.GetRoomListExRsp.repeatedFields_, null);\r\n            };\r\n            goog.inherits(proto.stream.GetRoomListExRsp, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.GetRoomListExRsp.displayName = \"proto.stream.GetRoomListExRsp\";\r\n            }\r\n            /**\r\n             * List of repeated fields within this message type.\r\n             * @private {!Array<number>}\r\n             * @const\r\n             */\r\n            proto.stream.GetRoomListExRsp.repeatedFields_ = [3];\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.GetRoomListExRsp.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.GetRoomListExRsp.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.GetRoomListExRsp} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.GetRoomListExRsp.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        total: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        roominfoexList: jspb.Message.toObjectList(msg.getRoominfoexList(), proto.stream.RoomInfoEx.toObject, includeInstance)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.GetRoomListExRsp}\r\n             */\r\n            proto.stream.GetRoomListExRsp.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.GetRoomListExRsp;\r\n                return proto.stream.GetRoomListExRsp.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.GetRoomListExRsp} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.GetRoomListExRsp}\r\n             */\r\n            proto.stream.GetRoomListExRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readEnum());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readInt32());\r\n                            msg.setTotal(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = new proto.stream.RoomInfoEx;\r\n                            reader.readMessage(value, proto.stream.RoomInfoEx.deserializeBinaryFromReader);\r\n                            msg.addRoominfoex(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.GetRoomListExRsp.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.GetRoomListExRsp.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.GetRoomListExRsp} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.GetRoomListExRsp.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0.0) {\r\n                    writer.writeEnum(1, f);\r\n                }\r\n                f = message.getTotal();\r\n                if (f !== 0) {\r\n                    writer.writeInt32(2, f);\r\n                }\r\n                f = message.getRoominfoexList();\r\n                if (f.length > 0) {\r\n                    writer.writeRepeatedMessage(3, f, proto.stream.RoomInfoEx.serializeBinaryToWriter);\r\n                }\r\n            };\r\n            /**\r\n             * optional ErrorCode status = 1;\r\n             * @return {!proto.stream.ErrorCode}\r\n             */\r\n            proto.stream.GetRoomListExRsp.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {!proto.stream.ErrorCode} value */\r\n            proto.stream.GetRoomListExRsp.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3EnumField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional int32 total = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.GetRoomListExRsp.prototype.getTotal = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.GetRoomListExRsp.prototype.setTotal = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * repeated RoomInfoEx roomInfoEx = 3;\r\n             * @return {!Array.<!proto.stream.RoomInfoEx>}\r\n             */\r\n            proto.stream.GetRoomListExRsp.prototype.getRoominfoexList = function () {\r\n                return (jspb.Message.getRepeatedWrapperField(this, proto.stream.RoomInfoEx, 3));\r\n            };\r\n            /** @param {!Array.<!proto.stream.RoomInfoEx>} value */\r\n            proto.stream.GetRoomListExRsp.prototype.setRoominfoexList = function (value) {\r\n                jspb.Message.setRepeatedWrapperField(this, 3, value);\r\n            };\r\n            /**\r\n             * @param {!proto.stream.RoomInfoEx=} opt_value\r\n             * @param {number=} opt_index\r\n             * @return {!proto.stream.RoomInfoEx}\r\n             */\r\n            proto.stream.GetRoomListExRsp.prototype.addRoominfoex = function (opt_value, opt_index) {\r\n                return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.stream.RoomInfoEx, opt_index);\r\n            };\r\n            proto.stream.GetRoomListExRsp.prototype.clearRoominfoexList = function () {\r\n                this.setRoominfoexList([]);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.GetRoomDetailReq = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.GetRoomDetailReq, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.GetRoomDetailReq.displayName = \"proto.stream.GetRoomDetailReq\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.GetRoomDetailReq.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.GetRoomDetailReq.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.GetRoomDetailReq} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.GetRoomDetailReq.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\")\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.GetRoomDetailReq}\r\n             */\r\n            proto.stream.GetRoomDetailReq.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.GetRoomDetailReq;\r\n                return proto.stream.GetRoomDetailReq.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.GetRoomDetailReq} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.GetRoomDetailReq}\r\n             */\r\n            proto.stream.GetRoomDetailReq.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.GetRoomDetailReq.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.GetRoomDetailReq.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.GetRoomDetailReq} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.GetRoomDetailReq.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getGameid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(2, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 gameID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.GetRoomDetailReq.prototype.getGameid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.GetRoomDetailReq.prototype.setGameid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.GetRoomDetailReq.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.GetRoomDetailReq.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 2, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.GetRoomDetailRsp = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.GetRoomDetailRsp, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.GetRoomDetailRsp.displayName = \"proto.stream.GetRoomDetailRsp\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.GetRoomDetailRsp.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.GetRoomDetailRsp.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.GetRoomDetailRsp} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.GetRoomDetailRsp.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        roomdetail: (f = msg.getRoomdetail()) && proto.stream.RoomDetail.toObject(includeInstance, f)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.GetRoomDetailRsp}\r\n             */\r\n            proto.stream.GetRoomDetailRsp.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.GetRoomDetailRsp;\r\n                return proto.stream.GetRoomDetailRsp.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.GetRoomDetailRsp} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.GetRoomDetailRsp}\r\n             */\r\n            proto.stream.GetRoomDetailRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readEnum());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = new proto.stream.RoomDetail;\r\n                            reader.readMessage(value, proto.stream.RoomDetail.deserializeBinaryFromReader);\r\n                            msg.setRoomdetail(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.GetRoomDetailRsp.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.GetRoomDetailRsp.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.GetRoomDetailRsp} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.GetRoomDetailRsp.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0.0) {\r\n                    writer.writeEnum(1, f);\r\n                }\r\n                f = message.getRoomdetail();\r\n                if (f != null) {\r\n                    writer.writeMessage(2, f, proto.stream.RoomDetail.serializeBinaryToWriter);\r\n                }\r\n            };\r\n            /**\r\n             * optional ErrorCode status = 1;\r\n             * @return {!proto.stream.ErrorCode}\r\n             */\r\n            proto.stream.GetRoomDetailRsp.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {!proto.stream.ErrorCode} value */\r\n            proto.stream.GetRoomDetailRsp.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3EnumField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional RoomDetail roomDetail = 2;\r\n             * @return {?proto.stream.RoomDetail}\r\n             */\r\n            proto.stream.GetRoomDetailRsp.prototype.getRoomdetail = function () {\r\n                return (jspb.Message.getWrapperField(this, proto.stream.RoomDetail, 2));\r\n            };\r\n            /** @param {?proto.stream.RoomDetail|undefined} value */\r\n            proto.stream.GetRoomDetailRsp.prototype.setRoomdetail = function (value) {\r\n                jspb.Message.setWrapperField(this, 2, value);\r\n            };\r\n            proto.stream.GetRoomDetailRsp.prototype.clearRoomdetail = function () {\r\n                this.setRoomdetail(undefined);\r\n            };\r\n            /**\r\n             * Returns whether this field is set.\r\n             * @return {!boolean}\r\n             */\r\n            proto.stream.GetRoomDetailRsp.prototype.hasRoomdetail = function () {\r\n                return jspb.Message.getField(this, 2) != null;\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.RoomDetail = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.RoomDetail.repeatedFields_, null);\r\n            };\r\n            goog.inherits(proto.stream.RoomDetail, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.RoomDetail.displayName = \"proto.stream.RoomDetail\";\r\n            }\r\n            /**\r\n             * List of repeated fields within this message type.\r\n             * @private {!Array<number>}\r\n             * @const\r\n             */\r\n            proto.stream.RoomDetail.repeatedFields_ = [9];\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.RoomDetail.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.RoomDetail.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.RoomDetail} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.RoomDetail.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                        state: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        maxplayer: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        mode: jspb.Message.getFieldWithDefault(msg, 4, 0),\r\n                        canwatch: jspb.Message.getFieldWithDefault(msg, 5, 0),\r\n                        roomproperty: msg.getRoomproperty_asB64(),\r\n                        owner: jspb.Message.getFieldWithDefault(msg, 7, 0),\r\n                        createflag: jspb.Message.getFieldWithDefault(msg, 8, 0),\r\n                        playerinfosList: jspb.Message.toObjectList(msg.getPlayerinfosList(), proto.stream.PlayerInfo.toObject, includeInstance)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.RoomDetail}\r\n             */\r\n            proto.stream.RoomDetail.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.RoomDetail;\r\n                return proto.stream.RoomDetail.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.RoomDetail} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.RoomDetail}\r\n             */\r\n            proto.stream.RoomDetail.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readEnum());\r\n                            msg.setState(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setMaxplayer(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readInt32());\r\n                            msg.setMode(value);\r\n                            break;\r\n                        case 5:\r\n                            var value = (reader.readInt32());\r\n                            msg.setCanwatch(value);\r\n                            break;\r\n                        case 6:\r\n                            var value = (reader.readBytes());\r\n                            msg.setRoomproperty(value);\r\n                            break;\r\n                        case 7:\r\n                            var value = (reader.readUint32());\r\n                            msg.setOwner(value);\r\n                            break;\r\n                        case 8:\r\n                            var value = (reader.readUint32());\r\n                            msg.setCreateflag(value);\r\n                            break;\r\n                        case 9:\r\n                            var value = new proto.stream.PlayerInfo;\r\n                            reader.readMessage(value, proto.stream.PlayerInfo.deserializeBinaryFromReader);\r\n                            msg.addPlayerinfos(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.RoomDetail.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.RoomDetail.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.RoomDetail} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.RoomDetail.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(1, f);\r\n                }\r\n                f = message.getState();\r\n                if (f !== 0.0) {\r\n                    writer.writeEnum(2, f);\r\n                }\r\n                f = message.getMaxplayer();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n                f = message.getMode();\r\n                if (f !== 0) {\r\n                    writer.writeInt32(4, f);\r\n                }\r\n                f = message.getCanwatch();\r\n                if (f !== 0) {\r\n                    writer.writeInt32(5, f);\r\n                }\r\n                f = message.getRoomproperty_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(6, f);\r\n                }\r\n                f = message.getOwner();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(7, f);\r\n                }\r\n                f = message.getCreateflag();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(8, f);\r\n                }\r\n                f = message.getPlayerinfosList();\r\n                if (f.length > 0) {\r\n                    writer.writeRepeatedMessage(9, f, proto.stream.PlayerInfo.serializeBinaryToWriter);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 1;\r\n             * @return {string}\r\n             */\r\n            proto.stream.RoomDetail.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.RoomDetail.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional RoomState state = 2;\r\n             * @return {!proto.stream.RoomState}\r\n             */\r\n            proto.stream.RoomDetail.prototype.getState = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {!proto.stream.RoomState} value */\r\n            proto.stream.RoomDetail.prototype.setState = function (value) {\r\n                jspb.Message.setProto3EnumField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint32 maxPlayer = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomDetail.prototype.getMaxplayer = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomDetail.prototype.setMaxplayer = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional int32 mode = 4;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomDetail.prototype.getMode = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomDetail.prototype.setMode = function (value) {\r\n                jspb.Message.setProto3IntField(this, 4, value);\r\n            };\r\n            /**\r\n             * optional int32 canWatch = 5;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomDetail.prototype.getCanwatch = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomDetail.prototype.setCanwatch = function (value) {\r\n                jspb.Message.setProto3IntField(this, 5, value);\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 6;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.RoomDetail.prototype.getRoomproperty = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 6, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 6;\r\n             * This is a type-conversion wrapper around `getRoomproperty()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.RoomDetail.prototype.getRoomproperty_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getRoomproperty()));\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 6;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getRoomproperty()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.RoomDetail.prototype.getRoomproperty_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getRoomproperty()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.RoomDetail.prototype.setRoomproperty = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 6, value);\r\n            };\r\n            /**\r\n             * optional uint32 owner = 7;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomDetail.prototype.getOwner = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 7, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomDetail.prototype.setOwner = function (value) {\r\n                jspb.Message.setProto3IntField(this, 7, value);\r\n            };\r\n            /**\r\n             * optional uint32 createFlag = 8;\r\n             * @return {number}\r\n             */\r\n            proto.stream.RoomDetail.prototype.getCreateflag = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 8, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.RoomDetail.prototype.setCreateflag = function (value) {\r\n                jspb.Message.setProto3IntField(this, 8, value);\r\n            };\r\n            /**\r\n             * repeated PlayerInfo playerInfos = 9;\r\n             * @return {!Array.<!proto.stream.PlayerInfo>}\r\n             */\r\n            proto.stream.RoomDetail.prototype.getPlayerinfosList = function () {\r\n                return (jspb.Message.getRepeatedWrapperField(this, proto.stream.PlayerInfo, 9));\r\n            };\r\n            /** @param {!Array.<!proto.stream.PlayerInfo>} value */\r\n            proto.stream.RoomDetail.prototype.setPlayerinfosList = function (value) {\r\n                jspb.Message.setRepeatedWrapperField(this, 9, value);\r\n            };\r\n            /**\r\n             * @param {!proto.stream.PlayerInfo=} opt_value\r\n             * @param {number=} opt_index\r\n             * @return {!proto.stream.PlayerInfo}\r\n             */\r\n            proto.stream.RoomDetail.prototype.addPlayerinfos = function (opt_value, opt_index) {\r\n                return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.stream.PlayerInfo, opt_index);\r\n            };\r\n            proto.stream.RoomDetail.prototype.clearPlayerinfosList = function () {\r\n                this.setPlayerinfosList([]);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.KickPlayer = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.KickPlayer, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.KickPlayer.displayName = \"proto.stream.KickPlayer\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.KickPlayer.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.KickPlayer.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.KickPlayer} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.KickPlayer.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                        srcuserid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        cpproto: msg.getCpproto_asB64()\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.KickPlayer}\r\n             */\r\n            proto.stream.KickPlayer.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.KickPlayer;\r\n                return proto.stream.KickPlayer.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.KickPlayer} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.KickPlayer}\r\n             */\r\n            proto.stream.KickPlayer.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setSrcuserid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readBytes());\r\n                            msg.setCpproto(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.KickPlayer.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.KickPlayer.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.KickPlayer} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.KickPlayer.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(1, f);\r\n                }\r\n                f = message.getSrcuserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n                f = message.getCpproto_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(4, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 1;\r\n             * @return {string}\r\n             */\r\n            proto.stream.KickPlayer.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.KickPlayer.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 srcUserID = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.KickPlayer.prototype.getSrcuserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.KickPlayer.prototype.setSrcuserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint32 userID = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.KickPlayer.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.KickPlayer.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.KickPlayer.prototype.getCpproto = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.KickPlayer.prototype.getCpproto_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getCpproto()));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.KickPlayer.prototype.getCpproto_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getCpproto()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.KickPlayer.prototype.setCpproto = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 4, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.KickPlayerRsp = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.KickPlayerRsp, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.KickPlayerRsp.displayName = \"proto.stream.KickPlayerRsp\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.KickPlayerRsp.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.KickPlayerRsp.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.KickPlayerRsp} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.KickPlayerRsp.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 3, \"0\"),\r\n                        owner: jspb.Message.getFieldWithDefault(msg, 4, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.KickPlayerRsp}\r\n             */\r\n            proto.stream.KickPlayerRsp.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.KickPlayerRsp;\r\n                return proto.stream.KickPlayerRsp.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.KickPlayerRsp} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.KickPlayerRsp}\r\n             */\r\n            proto.stream.KickPlayerRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readEnum());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readUint32());\r\n                            msg.setOwner(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.KickPlayerRsp.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.KickPlayerRsp.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.KickPlayerRsp} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.KickPlayerRsp.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0.0) {\r\n                    writer.writeEnum(1, f);\r\n                }\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(3, f);\r\n                }\r\n                f = message.getOwner();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(4, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional ErrorCode status = 1;\r\n             * @return {!proto.stream.ErrorCode}\r\n             */\r\n            proto.stream.KickPlayerRsp.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {!proto.stream.ErrorCode} value */\r\n            proto.stream.KickPlayerRsp.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3EnumField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 userID = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.KickPlayerRsp.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.KickPlayerRsp.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 3;\r\n             * @return {string}\r\n             */\r\n            proto.stream.KickPlayerRsp.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.KickPlayerRsp.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional uint32 owner = 4;\r\n             * @return {number}\r\n             */\r\n            proto.stream.KickPlayerRsp.prototype.getOwner = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.KickPlayerRsp.prototype.setOwner = function (value) {\r\n                jspb.Message.setProto3IntField(this, 4, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.KickPlayerNotify = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.KickPlayerNotify, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.KickPlayerNotify.displayName = \"proto.stream.KickPlayerNotify\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.KickPlayerNotify.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.KickPlayerNotify.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.KickPlayerNotify} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.KickPlayerNotify.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        srcuserid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        cpproto: msg.getCpproto_asB64(),\r\n                        owner: jspb.Message.getFieldWithDefault(msg, 4, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.KickPlayerNotify}\r\n             */\r\n            proto.stream.KickPlayerNotify.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.KickPlayerNotify;\r\n                return proto.stream.KickPlayerNotify.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.KickPlayerNotify} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.KickPlayerNotify}\r\n             */\r\n            proto.stream.KickPlayerNotify.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setSrcuserid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readBytes());\r\n                            msg.setCpproto(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readUint32());\r\n                            msg.setOwner(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.KickPlayerNotify.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.KickPlayerNotify.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.KickPlayerNotify} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.KickPlayerNotify.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getSrcuserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getCpproto_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(3, f);\r\n                }\r\n                f = message.getOwner();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(4, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 srcUserID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.KickPlayerNotify.prototype.getSrcuserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.KickPlayerNotify.prototype.setSrcuserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 userID = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.KickPlayerNotify.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.KickPlayerNotify.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.KickPlayerNotify.prototype.getCpproto = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.KickPlayerNotify.prototype.getCpproto_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getCpproto()));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.KickPlayerNotify.prototype.getCpproto_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getCpproto()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.KickPlayerNotify.prototype.setCpproto = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional uint32 owner = 4;\r\n             * @return {number}\r\n             */\r\n            proto.stream.KickPlayerNotify.prototype.getOwner = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.KickPlayerNotify.prototype.setOwner = function (value) {\r\n                jspb.Message.setProto3IntField(this, 4, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.SetRoomPropertyReq = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.SetRoomPropertyReq, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.SetRoomPropertyReq.displayName = \"proto.stream.SetRoomPropertyReq\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.SetRoomPropertyReq.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.SetRoomPropertyReq.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.SetRoomPropertyReq} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.SetRoomPropertyReq.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        roomproperty: msg.getRoomproperty_asB64()\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.SetRoomPropertyReq}\r\n             */\r\n            proto.stream.SetRoomPropertyReq.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.SetRoomPropertyReq;\r\n                return proto.stream.SetRoomPropertyReq.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.SetRoomPropertyReq} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.SetRoomPropertyReq}\r\n             */\r\n            proto.stream.SetRoomPropertyReq.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readBytes());\r\n                            msg.setRoomproperty(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.SetRoomPropertyReq.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.SetRoomPropertyReq.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.SetRoomPropertyReq} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.SetRoomPropertyReq.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getGameid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(2, f);\r\n                }\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n                f = message.getRoomproperty_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(4, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 gameID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.SetRoomPropertyReq.prototype.getGameid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.SetRoomPropertyReq.prototype.setGameid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.SetRoomPropertyReq.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.SetRoomPropertyReq.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint32 userID = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.SetRoomPropertyReq.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.SetRoomPropertyReq.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 4;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.SetRoomPropertyReq.prototype.getRoomproperty = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 4;\r\n             * This is a type-conversion wrapper around `getRoomproperty()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.SetRoomPropertyReq.prototype.getRoomproperty_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getRoomproperty()));\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 4;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getRoomproperty()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.SetRoomPropertyReq.prototype.getRoomproperty_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getRoomproperty()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.SetRoomPropertyReq.prototype.setRoomproperty = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 4, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.SetRoomPropertyRsp = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.SetRoomPropertyRsp, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.SetRoomPropertyRsp.displayName = \"proto.stream.SetRoomPropertyRsp\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.SetRoomPropertyRsp.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.SetRoomPropertyRsp.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.SetRoomPropertyRsp} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.SetRoomPropertyRsp.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        roomproperty: msg.getRoomproperty_asB64()\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.SetRoomPropertyRsp}\r\n             */\r\n            proto.stream.SetRoomPropertyRsp.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.SetRoomPropertyRsp;\r\n                return proto.stream.SetRoomPropertyRsp.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.SetRoomPropertyRsp} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.SetRoomPropertyRsp}\r\n             */\r\n            proto.stream.SetRoomPropertyRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readEnum());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readBytes());\r\n                            msg.setRoomproperty(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.SetRoomPropertyRsp.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.SetRoomPropertyRsp.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.SetRoomPropertyRsp} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.SetRoomPropertyRsp.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0.0) {\r\n                    writer.writeEnum(1, f);\r\n                }\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(2, f);\r\n                }\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n                f = message.getRoomproperty_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(4, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional ErrorCode status = 1;\r\n             * @return {!proto.stream.ErrorCode}\r\n             */\r\n            proto.stream.SetRoomPropertyRsp.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {!proto.stream.ErrorCode} value */\r\n            proto.stream.SetRoomPropertyRsp.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3EnumField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.SetRoomPropertyRsp.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.SetRoomPropertyRsp.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint32 userID = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.SetRoomPropertyRsp.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.SetRoomPropertyRsp.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 4;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.SetRoomPropertyRsp.prototype.getRoomproperty = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 4;\r\n             * This is a type-conversion wrapper around `getRoomproperty()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.SetRoomPropertyRsp.prototype.getRoomproperty_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getRoomproperty()));\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 4;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getRoomproperty()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.SetRoomPropertyRsp.prototype.getRoomproperty_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getRoomproperty()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.SetRoomPropertyRsp.prototype.setRoomproperty = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 4, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.NoticeRoomProperty = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.NoticeRoomProperty, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.NoticeRoomProperty.displayName = \"proto.stream.NoticeRoomProperty\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.NoticeRoomProperty.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.NoticeRoomProperty.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.NoticeRoomProperty} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.NoticeRoomProperty.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        roomproperty: msg.getRoomproperty_asB64()\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.NoticeRoomProperty}\r\n             */\r\n            proto.stream.NoticeRoomProperty.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.NoticeRoomProperty;\r\n                return proto.stream.NoticeRoomProperty.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.NoticeRoomProperty} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.NoticeRoomProperty}\r\n             */\r\n            proto.stream.NoticeRoomProperty.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readBytes());\r\n                            msg.setRoomproperty(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.NoticeRoomProperty.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.NoticeRoomProperty.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.NoticeRoomProperty} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.NoticeRoomProperty.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(1, f);\r\n                }\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getRoomproperty_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(3, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 1;\r\n             * @return {string}\r\n             */\r\n            proto.stream.NoticeRoomProperty.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.NoticeRoomProperty.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 userID = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.NoticeRoomProperty.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.NoticeRoomProperty.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 3;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.NoticeRoomProperty.prototype.getRoomproperty = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 3;\r\n             * This is a type-conversion wrapper around `getRoomproperty()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.NoticeRoomProperty.prototype.getRoomproperty_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getRoomproperty()));\r\n            };\r\n            /**\r\n             * optional bytes roomProperty = 3;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getRoomproperty()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.NoticeRoomProperty.prototype.getRoomproperty_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getRoomproperty()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.NoticeRoomProperty.prototype.setRoomproperty = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 3, value);\r\n            };\r\n            /**\r\n             * @enum {number}\r\n             */\r\n            proto.stream.CmdId = {\r\n                NOCMD: 0,\r\n                LOGINREQ: 1101,\r\n                LOGINRSP: 1102,\r\n                LOGOUTREQ: 1105,\r\n                LOGOUTRSP: 1106,\r\n                HEARTBEATREQ: 1103,\r\n                NETWORKSTATEREQ: 1120,\r\n                NETWORKSTATERSP: 1121,\r\n                NOTICENETWORKSTATEREQ: 1122,\r\n                CREATEROOMREQ: 1203,\r\n                CREATEROOMRSP: 1204,\r\n                GETROOMLISTREQ: 1207,\r\n                GETROOMLISTRSP: 1208,\r\n                ROOMLISTEXREQ: 1215,\r\n                ROOMLISTEXRSP: 1216,\r\n                SETROOMPROPERTYREQ: 1219,\r\n                SETROOMPROPERTYRSP: 1220,\r\n                NOTICEROOMPROPERTY: 1307,\r\n                GETROOMDETAILREQ: 1209,\r\n                GETROOMDETAILRSP: 1210,\r\n                JOINROOMREQ: 1201,\r\n                JOINROOMRSP: 1202,\r\n                NOTICEUSERJOINREQ: 1301,\r\n                LEAVEROOMREQ: 1205,\r\n                LEAVEROOMRSP: 1206,\r\n                NOTICEUSERLEAVEREQ: 1302,\r\n                JOINOVERREQ: 1213,\r\n                JOINOVERRSP: 1214,\r\n                JOINOVERNOTIFY: 1306,\r\n                JOINOPENREQ: 1221,\r\n                JOINOPENRSP: 1222,\r\n                JOINOPENNOTIFY: 1308,\r\n                DISCONNECTREQ: 1107,\r\n                DISCONNECTRSP: 1108,\r\n                KICKPLAYERREQ: 1303,\r\n                KICKPLAYERRSP: 1304,\r\n                KICKPLAYERNOTIFY: 1305\r\n            };\r\n            /**\r\n             * @enum {number}\r\n             */\r\n            proto.stream.JoinRoomType = {\r\n                NOJOIN: 0,\r\n                JOINSPECIALROOM: 1,\r\n                JOINROOMWITHPROPERTY: 2,\r\n                JOINRANDOMROOM: 3\r\n            };\r\n            /**\r\n             * @enum {number}\r\n             */\r\n            proto.stream.RoomState = {\r\n                ROOMSTATENIL: 0,\r\n                ROOMSTATEOPEN: 1,\r\n                ROOMSTATECLOSED: 2\r\n            };\r\n            /**\r\n             * @enum {number}\r\n             */\r\n            proto.stream.RoomListSort = {\r\n                ROOMSORTNIL: 0,\r\n                ROOMSORTCREATETIME: 1,\r\n                ROOMSORTPLAYERNUM: 2,\r\n                ROOMSORTSTATE: 3\r\n            };\r\n            /**\r\n             * @enum {number}\r\n             */\r\n            proto.stream.SortOrder = {\r\n                SORTASC: 0,\r\n                SORTDESC: 1\r\n            };\r\n            goog.object.extend(exports, proto.stream);\r\n        }, { \"./errorcode_pb.js\": 2, \"google-protobuf\": 1 }], 5: [function (_require, module, exports) {\r\n            /**\r\n             * @fileoverview\r\n             * @enhanceable\r\n             * @suppress {messageConventions} JS Compiler reports an error if a variable or\r\n             *     field starts with 'MSG_' and isn't a translatable message.\r\n             * @public\r\n             */\r\n            // GENERATED CODE -- DO NOT EDIT!\r\n            var jspb = _require(\"google-protobuf\");\r\n            var goog = jspb;\r\n            var global = window; // var global = Function('return this')();\r\n            goog.exportSymbol(\"proto.stream.Broadcast\", null, global);\r\n            goog.exportSymbol(\"proto.stream.BroadcastAck\", null, global);\r\n            goog.exportSymbol(\"proto.stream.CheckIn\", null, global);\r\n            goog.exportSymbol(\"proto.stream.CheckInAck\", null, global);\r\n            goog.exportSymbol(\"proto.stream.CheckInNotify\", null, global);\r\n            goog.exportSymbol(\"proto.stream.FrameBroadcast\", null, global);\r\n            goog.exportSymbol(\"proto.stream.FrameBroadcastAck\", null, global);\r\n            goog.exportSymbol(\"proto.stream.FrameDataNotify\", null, global);\r\n            goog.exportSymbol(\"proto.stream.FrameSyncNotify\", null, global);\r\n            goog.exportSymbol(\"proto.stream.Heartbeat\", null, global);\r\n            goog.exportSymbol(\"proto.stream.HeartbeatAck\", null, global);\r\n            goog.exportSymbol(\"proto.stream.Notify\", null, global);\r\n            goog.exportSymbol(\"proto.stream.Publish\", null, global);\r\n            goog.exportSymbol(\"proto.stream.PublishAck\", null, global);\r\n            goog.exportSymbol(\"proto.stream.PublishNotify\", null, global);\r\n            goog.exportSymbol(\"proto.stream.SDKHotelCmdID\", null, global);\r\n            goog.exportSymbol(\"proto.stream.SetFrameSyncRate\", null, global);\r\n            goog.exportSymbol(\"proto.stream.SetFrameSyncRateAck\", null, global);\r\n            goog.exportSymbol(\"proto.stream.SetFrameSyncRateNotify\", null, global);\r\n            goog.exportSymbol(\"proto.stream.SetUseTimeStamp\", null, global);\r\n            goog.exportSymbol(\"proto.stream.SetUseTimeStampAck\", null, global);\r\n            goog.exportSymbol(\"proto.stream.Subscribe\", null, global);\r\n            goog.exportSymbol(\"proto.stream.SubscribeAck\", null, global);\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.CheckIn = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.CheckIn, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.CheckIn.displayName = \"proto.stream.CheckIn\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.CheckIn.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.CheckIn.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.CheckIn} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.CheckIn.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        bookid: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\r\n                        key: jspb.Message.getFieldWithDefault(msg, 5, \"\")\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.CheckIn}\r\n             */\r\n            proto.stream.CheckIn.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.CheckIn;\r\n                return proto.stream.CheckIn.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.CheckIn} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.CheckIn}\r\n             */\r\n            proto.stream.CheckIn.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readString());\r\n                            msg.setBookid(value);\r\n                            break;\r\n                        case 5:\r\n                            var value = (reader.readString());\r\n                            msg.setKey(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.CheckIn.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.CheckIn.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.CheckIn} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.CheckIn.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getGameid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(2, f);\r\n                }\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n                f = message.getBookid();\r\n                if (f.length > 0) {\r\n                    writer.writeString(4, f);\r\n                }\r\n                f = message.getKey();\r\n                if (f.length > 0) {\r\n                    writer.writeString(5, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 gameID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.CheckIn.prototype.getGameid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.CheckIn.prototype.setGameid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.CheckIn.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.CheckIn.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint32 userID = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.CheckIn.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.CheckIn.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional string bookID = 4;\r\n             * @return {string}\r\n             */\r\n            proto.stream.CheckIn.prototype.getBookid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.CheckIn.prototype.setBookid = function (value) {\r\n                jspb.Message.setProto3StringField(this, 4, value);\r\n            };\r\n            /**\r\n             * optional string key = 5;\r\n             * @return {string}\r\n             */\r\n            proto.stream.CheckIn.prototype.getKey = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 5, \"\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.CheckIn.prototype.setKey = function (value) {\r\n                jspb.Message.setProto3StringField(this, 5, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.CheckInAck = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.CheckInAck.repeatedFields_, null);\r\n            };\r\n            goog.inherits(proto.stream.CheckInAck, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.CheckInAck.displayName = \"proto.stream.CheckInAck\";\r\n            }\r\n            /**\r\n             * List of repeated fields within this message type.\r\n             * @private {!Array<number>}\r\n             * @const\r\n             */\r\n            proto.stream.CheckInAck.repeatedFields_ = [3, 4];\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.CheckInAck.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.CheckInAck.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.CheckInAck} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.CheckInAck.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        bookid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\r\n                        checkinsList: jspb.Message.getRepeatedField(msg, 3),\r\n                        playersList: jspb.Message.getRepeatedField(msg, 4),\r\n                        maxplayers: jspb.Message.getFieldWithDefault(msg, 5, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.CheckInAck}\r\n             */\r\n            proto.stream.CheckInAck.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.CheckInAck;\r\n                return proto.stream.CheckInAck.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.CheckInAck} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.CheckInAck}\r\n             */\r\n            proto.stream.CheckInAck.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readString());\r\n                            msg.setBookid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readPackedUint32());\r\n                            msg.setCheckinsList(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readPackedUint32());\r\n                            msg.setPlayersList(value);\r\n                            break;\r\n                        case 5:\r\n                            var value = (reader.readUint32());\r\n                            msg.setMaxplayers(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.CheckInAck.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.CheckInAck.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.CheckInAck} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.CheckInAck.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getBookid();\r\n                if (f.length > 0) {\r\n                    writer.writeString(2, f);\r\n                }\r\n                f = message.getCheckinsList();\r\n                if (f.length > 0) {\r\n                    writer.writePackedUint32(3, f);\r\n                }\r\n                f = message.getPlayersList();\r\n                if (f.length > 0) {\r\n                    writer.writePackedUint32(4, f);\r\n                }\r\n                f = message.getMaxplayers();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(5, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 status = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.CheckInAck.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.CheckInAck.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional string bookID = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.CheckInAck.prototype.getBookid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.CheckInAck.prototype.setBookid = function (value) {\r\n                jspb.Message.setProto3StringField(this, 2, value);\r\n            };\r\n            /**\r\n             * repeated uint32 checkins = 3;\r\n             * @return {!Array.<number>}\r\n             */\r\n            proto.stream.CheckInAck.prototype.getCheckinsList = function () {\r\n                return (jspb.Message.getRepeatedField(this, 3));\r\n            };\r\n            /** @param {!Array.<number>} value */\r\n            proto.stream.CheckInAck.prototype.setCheckinsList = function (value) {\r\n                jspb.Message.setField(this, 3, value || []);\r\n            };\r\n            /**\r\n             * @param {!number} value\r\n             * @param {number=} opt_index\r\n             */\r\n            proto.stream.CheckInAck.prototype.addCheckins = function (value, opt_index) {\r\n                jspb.Message.addToRepeatedField(this, 3, value, opt_index);\r\n            };\r\n            proto.stream.CheckInAck.prototype.clearCheckinsList = function () {\r\n                this.setCheckinsList([]);\r\n            };\r\n            /**\r\n             * repeated uint32 players = 4;\r\n             * @return {!Array.<number>}\r\n             */\r\n            proto.stream.CheckInAck.prototype.getPlayersList = function () {\r\n                return (jspb.Message.getRepeatedField(this, 4));\r\n            };\r\n            /** @param {!Array.<number>} value */\r\n            proto.stream.CheckInAck.prototype.setPlayersList = function (value) {\r\n                jspb.Message.setField(this, 4, value || []);\r\n            };\r\n            /**\r\n             * @param {!number} value\r\n             * @param {number=} opt_index\r\n             */\r\n            proto.stream.CheckInAck.prototype.addPlayers = function (value, opt_index) {\r\n                jspb.Message.addToRepeatedField(this, 4, value, opt_index);\r\n            };\r\n            proto.stream.CheckInAck.prototype.clearPlayersList = function () {\r\n                this.setPlayersList([]);\r\n            };\r\n            /**\r\n             * optional uint32 maxPlayers = 5;\r\n             * @return {number}\r\n             */\r\n            proto.stream.CheckInAck.prototype.getMaxplayers = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.CheckInAck.prototype.setMaxplayers = function (value) {\r\n                jspb.Message.setProto3IntField(this, 5, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.Heartbeat = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.Heartbeat, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.Heartbeat.displayName = \"proto.stream.Heartbeat\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.Heartbeat.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.Heartbeat.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.Heartbeat} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.Heartbeat.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 3, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.Heartbeat}\r\n             */\r\n            proto.stream.Heartbeat.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.Heartbeat;\r\n                return proto.stream.Heartbeat.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.Heartbeat} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.Heartbeat}\r\n             */\r\n            proto.stream.Heartbeat.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.Heartbeat.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.Heartbeat.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.Heartbeat} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.Heartbeat.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getGameid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(2, f);\r\n                }\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 gameID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.Heartbeat.prototype.getGameid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.Heartbeat.prototype.setGameid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.Heartbeat.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.Heartbeat.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint32 userID = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.Heartbeat.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.Heartbeat.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.HeartbeatAck = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.HeartbeatAck, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.HeartbeatAck.displayName = \"proto.stream.HeartbeatAck\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.HeartbeatAck.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.HeartbeatAck.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.HeartbeatAck} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.HeartbeatAck.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.HeartbeatAck}\r\n             */\r\n            proto.stream.HeartbeatAck.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.HeartbeatAck;\r\n                return proto.stream.HeartbeatAck.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.HeartbeatAck} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.HeartbeatAck}\r\n             */\r\n            proto.stream.HeartbeatAck.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.HeartbeatAck.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.HeartbeatAck.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.HeartbeatAck} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.HeartbeatAck.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 status = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.HeartbeatAck.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.HeartbeatAck.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.Broadcast = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.Broadcast.repeatedFields_, null);\r\n            };\r\n            goog.inherits(proto.stream.Broadcast, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.Broadcast.displayName = \"proto.stream.Broadcast\";\r\n            }\r\n            /**\r\n             * List of repeated fields within this message type.\r\n             * @private {!Array<number>}\r\n             * @const\r\n             */\r\n            proto.stream.Broadcast.repeatedFields_ = [3];\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.Broadcast.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.Broadcast.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.Broadcast} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.Broadcast.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                        flag: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        dstuidsList: jspb.Message.getRepeatedField(msg, 3),\r\n                        cpproto: msg.getCpproto_asB64()\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.Broadcast}\r\n             */\r\n            proto.stream.Broadcast.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.Broadcast;\r\n                return proto.stream.Broadcast.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.Broadcast} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.Broadcast}\r\n             */\r\n            proto.stream.Broadcast.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setFlag(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readPackedUint32());\r\n                            msg.setDstuidsList(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readBytes());\r\n                            msg.setCpproto(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.Broadcast.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.Broadcast.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.Broadcast} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.Broadcast.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(1, f);\r\n                }\r\n                f = message.getFlag();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getDstuidsList();\r\n                if (f.length > 0) {\r\n                    writer.writePackedUint32(3, f);\r\n                }\r\n                f = message.getCpproto_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(4, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 1;\r\n             * @return {string}\r\n             */\r\n            proto.stream.Broadcast.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.Broadcast.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 flag = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.Broadcast.prototype.getFlag = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.Broadcast.prototype.setFlag = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * repeated uint32 dstUids = 3;\r\n             * @return {!Array.<number>}\r\n             */\r\n            proto.stream.Broadcast.prototype.getDstuidsList = function () {\r\n                return (jspb.Message.getRepeatedField(this, 3));\r\n            };\r\n            /** @param {!Array.<number>} value */\r\n            proto.stream.Broadcast.prototype.setDstuidsList = function (value) {\r\n                jspb.Message.setField(this, 3, value || []);\r\n            };\r\n            /**\r\n             * @param {!number} value\r\n             * @param {number=} opt_index\r\n             */\r\n            proto.stream.Broadcast.prototype.addDstuids = function (value, opt_index) {\r\n                jspb.Message.addToRepeatedField(this, 3, value, opt_index);\r\n            };\r\n            proto.stream.Broadcast.prototype.clearDstuidsList = function () {\r\n                this.setDstuidsList([]);\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.Broadcast.prototype.getCpproto = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.Broadcast.prototype.getCpproto_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getCpproto()));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.Broadcast.prototype.getCpproto_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getCpproto()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.Broadcast.prototype.setCpproto = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 4, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.BroadcastAck = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.BroadcastAck, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.BroadcastAck.displayName = \"proto.stream.BroadcastAck\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.BroadcastAck.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.BroadcastAck.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.BroadcastAck} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.BroadcastAck.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.BroadcastAck}\r\n             */\r\n            proto.stream.BroadcastAck.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.BroadcastAck;\r\n                return proto.stream.BroadcastAck.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.BroadcastAck} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.BroadcastAck}\r\n             */\r\n            proto.stream.BroadcastAck.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.BroadcastAck.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.BroadcastAck.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.BroadcastAck} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.BroadcastAck.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 status = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.BroadcastAck.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.BroadcastAck.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.CheckInNotify = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.CheckInNotify.repeatedFields_, null);\r\n            };\r\n            goog.inherits(proto.stream.CheckInNotify, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.CheckInNotify.displayName = \"proto.stream.CheckInNotify\";\r\n            }\r\n            /**\r\n             * List of repeated fields within this message type.\r\n             * @private {!Array<number>}\r\n             * @const\r\n             */\r\n            proto.stream.CheckInNotify.repeatedFields_ = [3, 4];\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.CheckInNotify.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.CheckInNotify.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.CheckInNotify} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.CheckInNotify.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        userid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        bookid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\r\n                        checkinsList: jspb.Message.getRepeatedField(msg, 3),\r\n                        playersList: jspb.Message.getRepeatedField(msg, 4),\r\n                        maxplayers: jspb.Message.getFieldWithDefault(msg, 5, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.CheckInNotify}\r\n             */\r\n            proto.stream.CheckInNotify.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.CheckInNotify;\r\n                return proto.stream.CheckInNotify.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.CheckInNotify} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.CheckInNotify}\r\n             */\r\n            proto.stream.CheckInNotify.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setUserid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readString());\r\n                            msg.setBookid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readPackedUint32());\r\n                            msg.setCheckinsList(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readPackedUint32());\r\n                            msg.setPlayersList(value);\r\n                            break;\r\n                        case 5:\r\n                            var value = (reader.readUint32());\r\n                            msg.setMaxplayers(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.CheckInNotify.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.CheckInNotify.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.CheckInNotify} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.CheckInNotify.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getUserid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getBookid();\r\n                if (f.length > 0) {\r\n                    writer.writeString(2, f);\r\n                }\r\n                f = message.getCheckinsList();\r\n                if (f.length > 0) {\r\n                    writer.writePackedUint32(3, f);\r\n                }\r\n                f = message.getPlayersList();\r\n                if (f.length > 0) {\r\n                    writer.writePackedUint32(4, f);\r\n                }\r\n                f = message.getMaxplayers();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(5, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 userID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.CheckInNotify.prototype.getUserid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.CheckInNotify.prototype.setUserid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional string bookID = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.CheckInNotify.prototype.getBookid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.CheckInNotify.prototype.setBookid = function (value) {\r\n                jspb.Message.setProto3StringField(this, 2, value);\r\n            };\r\n            /**\r\n             * repeated uint32 checkins = 3;\r\n             * @return {!Array.<number>}\r\n             */\r\n            proto.stream.CheckInNotify.prototype.getCheckinsList = function () {\r\n                return (jspb.Message.getRepeatedField(this, 3));\r\n            };\r\n            /** @param {!Array.<number>} value */\r\n            proto.stream.CheckInNotify.prototype.setCheckinsList = function (value) {\r\n                jspb.Message.setField(this, 3, value || []);\r\n            };\r\n            /**\r\n             * @param {!number} value\r\n             * @param {number=} opt_index\r\n             */\r\n            proto.stream.CheckInNotify.prototype.addCheckins = function (value, opt_index) {\r\n                jspb.Message.addToRepeatedField(this, 3, value, opt_index);\r\n            };\r\n            proto.stream.CheckInNotify.prototype.clearCheckinsList = function () {\r\n                this.setCheckinsList([]);\r\n            };\r\n            /**\r\n             * repeated uint32 players = 4;\r\n             * @return {!Array.<number>}\r\n             */\r\n            proto.stream.CheckInNotify.prototype.getPlayersList = function () {\r\n                return (jspb.Message.getRepeatedField(this, 4));\r\n            };\r\n            /** @param {!Array.<number>} value */\r\n            proto.stream.CheckInNotify.prototype.setPlayersList = function (value) {\r\n                jspb.Message.setField(this, 4, value || []);\r\n            };\r\n            /**\r\n             * @param {!number} value\r\n             * @param {number=} opt_index\r\n             */\r\n            proto.stream.CheckInNotify.prototype.addPlayers = function (value, opt_index) {\r\n                jspb.Message.addToRepeatedField(this, 4, value, opt_index);\r\n            };\r\n            proto.stream.CheckInNotify.prototype.clearPlayersList = function () {\r\n                this.setPlayersList([]);\r\n            };\r\n            /**\r\n             * optional uint32 maxPlayers = 5;\r\n             * @return {number}\r\n             */\r\n            proto.stream.CheckInNotify.prototype.getMaxplayers = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.CheckInNotify.prototype.setMaxplayers = function (value) {\r\n                jspb.Message.setProto3IntField(this, 5, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.Notify = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.Notify, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.Notify.displayName = \"proto.stream.Notify\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.Notify.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.Notify.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.Notify} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.Notify.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        srcuid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        priority: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        cpproto: msg.getCpproto_asB64()\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.Notify}\r\n             */\r\n            proto.stream.Notify.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.Notify;\r\n                return proto.stream.Notify.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.Notify} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.Notify}\r\n             */\r\n            proto.stream.Notify.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setSrcuid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setPriority(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readBytes());\r\n                            msg.setCpproto(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.Notify.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.Notify.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.Notify} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.Notify.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getSrcuid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getPriority();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getCpproto_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(3, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 srcUid = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.Notify.prototype.getSrcuid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.Notify.prototype.setSrcuid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 priority = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.Notify.prototype.getPriority = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.Notify.prototype.setPriority = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.Notify.prototype.getCpproto = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.Notify.prototype.getCpproto_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getCpproto()));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.Notify.prototype.getCpproto_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getCpproto()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.Notify.prototype.setCpproto = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 3, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.Subscribe = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.Subscribe.repeatedFields_, null);\r\n            };\r\n            goog.inherits(proto.stream.Subscribe, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.Subscribe.displayName = \"proto.stream.Subscribe\";\r\n            }\r\n            /**\r\n             * List of repeated fields within this message type.\r\n             * @private {!Array<number>}\r\n             * @const\r\n             */\r\n            proto.stream.Subscribe.repeatedFields_ = [3, 4];\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.Subscribe.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.Subscribe.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.Subscribe} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.Subscribe.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                        confirmsList: jspb.Message.getRepeatedField(msg, 3),\r\n                        cancelsList: jspb.Message.getRepeatedField(msg, 4)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.Subscribe}\r\n             */\r\n            proto.stream.Subscribe.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.Subscribe;\r\n                return proto.stream.Subscribe.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.Subscribe} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.Subscribe}\r\n             */\r\n            proto.stream.Subscribe.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readString());\r\n                            msg.addConfirms(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readString());\r\n                            msg.addCancels(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.Subscribe.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.Subscribe.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.Subscribe} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.Subscribe.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getGameid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(2, f);\r\n                }\r\n                f = message.getConfirmsList();\r\n                if (f.length > 0) {\r\n                    writer.writeRepeatedString(3, f);\r\n                }\r\n                f = message.getCancelsList();\r\n                if (f.length > 0) {\r\n                    writer.writeRepeatedString(4, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 gameID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.Subscribe.prototype.getGameid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.Subscribe.prototype.setGameid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.Subscribe.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.Subscribe.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 2, value);\r\n            };\r\n            /**\r\n             * repeated string confirms = 3;\r\n             * @return {!Array.<string>}\r\n             */\r\n            proto.stream.Subscribe.prototype.getConfirmsList = function () {\r\n                return (jspb.Message.getRepeatedField(this, 3));\r\n            };\r\n            /** @param {!Array.<string>} value */\r\n            proto.stream.Subscribe.prototype.setConfirmsList = function (value) {\r\n                jspb.Message.setField(this, 3, value || []);\r\n            };\r\n            /**\r\n             * @param {!string} value\r\n             * @param {number=} opt_index\r\n             */\r\n            proto.stream.Subscribe.prototype.addConfirms = function (value, opt_index) {\r\n                jspb.Message.addToRepeatedField(this, 3, value, opt_index);\r\n            };\r\n            proto.stream.Subscribe.prototype.clearConfirmsList = function () {\r\n                this.setConfirmsList([]);\r\n            };\r\n            /**\r\n             * repeated string cancels = 4;\r\n             * @return {!Array.<string>}\r\n             */\r\n            proto.stream.Subscribe.prototype.getCancelsList = function () {\r\n                return (jspb.Message.getRepeatedField(this, 4));\r\n            };\r\n            /** @param {!Array.<string>} value */\r\n            proto.stream.Subscribe.prototype.setCancelsList = function (value) {\r\n                jspb.Message.setField(this, 4, value || []);\r\n            };\r\n            /**\r\n             * @param {!string} value\r\n             * @param {number=} opt_index\r\n             */\r\n            proto.stream.Subscribe.prototype.addCancels = function (value, opt_index) {\r\n                jspb.Message.addToRepeatedField(this, 4, value, opt_index);\r\n            };\r\n            proto.stream.Subscribe.prototype.clearCancelsList = function () {\r\n                this.setCancelsList([]);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.SubscribeAck = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.SubscribeAck.repeatedFields_, null);\r\n            };\r\n            goog.inherits(proto.stream.SubscribeAck, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.SubscribeAck.displayName = \"proto.stream.SubscribeAck\";\r\n            }\r\n            /**\r\n             * List of repeated fields within this message type.\r\n             * @private {!Array<number>}\r\n             * @const\r\n             */\r\n            proto.stream.SubscribeAck.repeatedFields_ = [2];\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.SubscribeAck.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.SubscribeAck.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.SubscribeAck} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.SubscribeAck.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        groupsList: jspb.Message.getRepeatedField(msg, 2)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.SubscribeAck}\r\n             */\r\n            proto.stream.SubscribeAck.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.SubscribeAck;\r\n                return proto.stream.SubscribeAck.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.SubscribeAck} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.SubscribeAck}\r\n             */\r\n            proto.stream.SubscribeAck.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readString());\r\n                            msg.addGroups(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.SubscribeAck.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.SubscribeAck.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.SubscribeAck} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.SubscribeAck.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getGroupsList();\r\n                if (f.length > 0) {\r\n                    writer.writeRepeatedString(2, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 status = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.SubscribeAck.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.SubscribeAck.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * repeated string groups = 2;\r\n             * @return {!Array.<string>}\r\n             */\r\n            proto.stream.SubscribeAck.prototype.getGroupsList = function () {\r\n                return (jspb.Message.getRepeatedField(this, 2));\r\n            };\r\n            /** @param {!Array.<string>} value */\r\n            proto.stream.SubscribeAck.prototype.setGroupsList = function (value) {\r\n                jspb.Message.setField(this, 2, value || []);\r\n            };\r\n            /**\r\n             * @param {!string} value\r\n             * @param {number=} opt_index\r\n             */\r\n            proto.stream.SubscribeAck.prototype.addGroups = function (value, opt_index) {\r\n                jspb.Message.addToRepeatedField(this, 2, value, opt_index);\r\n            };\r\n            proto.stream.SubscribeAck.prototype.clearGroupsList = function () {\r\n                this.setGroupsList([]);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.Publish = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.Publish.repeatedFields_, null);\r\n            };\r\n            goog.inherits(proto.stream.Publish, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.Publish.displayName = \"proto.stream.Publish\";\r\n            }\r\n            /**\r\n             * List of repeated fields within this message type.\r\n             * @private {!Array<number>}\r\n             * @const\r\n             */\r\n            proto.stream.Publish.repeatedFields_ = [3];\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.Publish.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.Publish.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.Publish} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.Publish.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                        priority: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        groupsList: jspb.Message.getRepeatedField(msg, 3),\r\n                        cpproto: msg.getCpproto_asB64()\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.Publish}\r\n             */\r\n            proto.stream.Publish.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.Publish;\r\n                return proto.stream.Publish.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.Publish} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.Publish}\r\n             */\r\n            proto.stream.Publish.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setPriority(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readString());\r\n                            msg.addGroups(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readBytes());\r\n                            msg.setCpproto(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.Publish.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.Publish.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.Publish} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.Publish.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(1, f);\r\n                }\r\n                f = message.getPriority();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getGroupsList();\r\n                if (f.length > 0) {\r\n                    writer.writeRepeatedString(3, f);\r\n                }\r\n                f = message.getCpproto_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(4, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 1;\r\n             * @return {string}\r\n             */\r\n            proto.stream.Publish.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.Publish.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 priority = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.Publish.prototype.getPriority = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.Publish.prototype.setPriority = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * repeated string groups = 3;\r\n             * @return {!Array.<string>}\r\n             */\r\n            proto.stream.Publish.prototype.getGroupsList = function () {\r\n                return (jspb.Message.getRepeatedField(this, 3));\r\n            };\r\n            /** @param {!Array.<string>} value */\r\n            proto.stream.Publish.prototype.setGroupsList = function (value) {\r\n                jspb.Message.setField(this, 3, value || []);\r\n            };\r\n            /**\r\n             * @param {!string} value\r\n             * @param {number=} opt_index\r\n             */\r\n            proto.stream.Publish.prototype.addGroups = function (value, opt_index) {\r\n                jspb.Message.addToRepeatedField(this, 3, value, opt_index);\r\n            };\r\n            proto.stream.Publish.prototype.clearGroupsList = function () {\r\n                this.setGroupsList([]);\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.Publish.prototype.getCpproto = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.Publish.prototype.getCpproto_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getCpproto()));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.Publish.prototype.getCpproto_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getCpproto()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.Publish.prototype.setCpproto = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 4, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.PublishAck = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.PublishAck, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.PublishAck.displayName = \"proto.stream.PublishAck\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.PublishAck.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.PublishAck.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.PublishAck} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.PublishAck.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        dstnum: jspb.Message.getFieldWithDefault(msg, 2, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.PublishAck}\r\n             */\r\n            proto.stream.PublishAck.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.PublishAck;\r\n                return proto.stream.PublishAck.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.PublishAck} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.PublishAck}\r\n             */\r\n            proto.stream.PublishAck.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setDstnum(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.PublishAck.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.PublishAck.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.PublishAck} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.PublishAck.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getDstnum();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 status = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.PublishAck.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.PublishAck.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 dstNum = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.PublishAck.prototype.getDstnum = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.PublishAck.prototype.setDstnum = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.PublishNotify = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.PublishNotify.repeatedFields_, null);\r\n            };\r\n            goog.inherits(proto.stream.PublishNotify, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.PublishNotify.displayName = \"proto.stream.PublishNotify\";\r\n            }\r\n            /**\r\n             * List of repeated fields within this message type.\r\n             * @private {!Array<number>}\r\n             * @const\r\n             */\r\n            proto.stream.PublishNotify.repeatedFields_ = [3];\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.PublishNotify.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.PublishNotify.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.PublishNotify} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.PublishNotify.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        srcuid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        priority: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        groupsList: jspb.Message.getRepeatedField(msg, 3),\r\n                        cpproto: msg.getCpproto_asB64()\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.PublishNotify}\r\n             */\r\n            proto.stream.PublishNotify.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.PublishNotify;\r\n                return proto.stream.PublishNotify.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.PublishNotify} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.PublishNotify}\r\n             */\r\n            proto.stream.PublishNotify.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setSrcuid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setPriority(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readString());\r\n                            msg.addGroups(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readBytes());\r\n                            msg.setCpproto(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.PublishNotify.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.PublishNotify.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.PublishNotify} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.PublishNotify.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getSrcuid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getPriority();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getGroupsList();\r\n                if (f.length > 0) {\r\n                    writer.writeRepeatedString(3, f);\r\n                }\r\n                f = message.getCpproto_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(4, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 srcUid = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.PublishNotify.prototype.getSrcuid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.PublishNotify.prototype.setSrcuid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 priority = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.PublishNotify.prototype.getPriority = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.PublishNotify.prototype.setPriority = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * repeated string groups = 3;\r\n             * @return {!Array.<string>}\r\n             */\r\n            proto.stream.PublishNotify.prototype.getGroupsList = function () {\r\n                return (jspb.Message.getRepeatedField(this, 3));\r\n            };\r\n            /** @param {!Array.<string>} value */\r\n            proto.stream.PublishNotify.prototype.setGroupsList = function (value) {\r\n                jspb.Message.setField(this, 3, value || []);\r\n            };\r\n            /**\r\n             * @param {!string} value\r\n             * @param {number=} opt_index\r\n             */\r\n            proto.stream.PublishNotify.prototype.addGroups = function (value, opt_index) {\r\n                jspb.Message.addToRepeatedField(this, 3, value, opt_index);\r\n            };\r\n            proto.stream.PublishNotify.prototype.clearGroupsList = function () {\r\n                this.setGroupsList([]);\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.PublishNotify.prototype.getCpproto = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.PublishNotify.prototype.getCpproto_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getCpproto()));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 4;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.PublishNotify.prototype.getCpproto_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getCpproto()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.PublishNotify.prototype.setCpproto = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 4, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.SetUseTimeStamp = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.SetUseTimeStamp, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.SetUseTimeStamp.displayName = \"proto.stream.SetUseTimeStamp\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.SetUseTimeStamp.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.SetUseTimeStamp.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.SetUseTimeStamp} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.SetUseTimeStamp.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                        priority: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        usetimestamp: jspb.Message.getFieldWithDefault(msg, 4, false)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.SetUseTimeStamp}\r\n             */\r\n            proto.stream.SetUseTimeStamp.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.SetUseTimeStamp;\r\n                return proto.stream.SetUseTimeStamp.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.SetUseTimeStamp} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.SetUseTimeStamp}\r\n             */\r\n            proto.stream.SetUseTimeStamp.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setPriority(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readBool());\r\n                            msg.setUsetimestamp(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.SetUseTimeStamp.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.SetUseTimeStamp.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.SetUseTimeStamp} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.SetUseTimeStamp.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getGameid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(2, f);\r\n                }\r\n                f = message.getPriority();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n                f = message.getUsetimestamp();\r\n                if (f) {\r\n                    writer.writeBool(4, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 gameID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.SetUseTimeStamp.prototype.getGameid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.SetUseTimeStamp.prototype.setGameid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.SetUseTimeStamp.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.SetUseTimeStamp.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint32 priority = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.SetUseTimeStamp.prototype.getPriority = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.SetUseTimeStamp.prototype.setPriority = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional bool useTimeStamp = 4;\r\n             * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\r\n             * You should avoid comparisons like {@code val === true/false} in those cases.\r\n             * @return {boolean}\r\n             */\r\n            proto.stream.SetUseTimeStamp.prototype.getUsetimestamp = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, false));\r\n            };\r\n            /** @param {boolean} value */\r\n            proto.stream.SetUseTimeStamp.prototype.setUsetimestamp = function (value) {\r\n                jspb.Message.setProto3BooleanField(this, 4, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.SetUseTimeStampAck = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.SetUseTimeStampAck, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.SetUseTimeStampAck.displayName = \"proto.stream.SetUseTimeStampAck\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.SetUseTimeStampAck.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.SetUseTimeStampAck.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.SetUseTimeStampAck} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.SetUseTimeStampAck.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        timestamp: jspb.Message.getFieldWithDefault(msg, 2, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.SetUseTimeStampAck}\r\n             */\r\n            proto.stream.SetUseTimeStampAck.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.SetUseTimeStampAck;\r\n                return proto.stream.SetUseTimeStampAck.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.SetUseTimeStampAck} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.SetUseTimeStampAck}\r\n             */\r\n            proto.stream.SetUseTimeStampAck.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint64());\r\n                            msg.setTimestamp(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.SetUseTimeStampAck.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.SetUseTimeStampAck.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.SetUseTimeStampAck} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.SetUseTimeStampAck.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getTimestamp();\r\n                if (f !== 0) {\r\n                    writer.writeUint64(2, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 status = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.SetUseTimeStampAck.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.SetUseTimeStampAck.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint64 timeStamp = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.SetUseTimeStampAck.prototype.getTimestamp = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.SetUseTimeStampAck.prototype.setTimestamp = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.SetFrameSyncRate = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.SetFrameSyncRate, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.SetFrameSyncRate.displayName = \"proto.stream.SetFrameSyncRate\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.SetFrameSyncRate.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.SetFrameSyncRate.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.SetFrameSyncRate} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.SetFrameSyncRate.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                        priority: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        framerate: jspb.Message.getFieldWithDefault(msg, 4, 0),\r\n                        frameidx: jspb.Message.getFieldWithDefault(msg, 5, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.SetFrameSyncRate}\r\n             */\r\n            proto.stream.SetFrameSyncRate.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.SetFrameSyncRate;\r\n                return proto.stream.SetFrameSyncRate.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.SetFrameSyncRate} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.SetFrameSyncRate}\r\n             */\r\n            proto.stream.SetFrameSyncRate.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setGameid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setPriority(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readUint32());\r\n                            msg.setFramerate(value);\r\n                            break;\r\n                        case 5:\r\n                            var value = (reader.readUint32());\r\n                            msg.setFrameidx(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.SetFrameSyncRate.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.SetFrameSyncRate.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.SetFrameSyncRate} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.SetFrameSyncRate.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getGameid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(2, f);\r\n                }\r\n                f = message.getPriority();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n                f = message.getFramerate();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(4, f);\r\n                }\r\n                f = message.getFrameidx();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(5, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 gameID = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.SetFrameSyncRate.prototype.getGameid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.SetFrameSyncRate.prototype.setGameid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 2;\r\n             * @return {string}\r\n             */\r\n            proto.stream.SetFrameSyncRate.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.SetFrameSyncRate.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint32 priority = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.SetFrameSyncRate.prototype.getPriority = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.SetFrameSyncRate.prototype.setPriority = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional uint32 frameRate = 4;\r\n             * @return {number}\r\n             */\r\n            proto.stream.SetFrameSyncRate.prototype.getFramerate = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.SetFrameSyncRate.prototype.setFramerate = function (value) {\r\n                jspb.Message.setProto3IntField(this, 4, value);\r\n            };\r\n            /**\r\n             * optional uint32 frameIdx = 5;\r\n             * @return {number}\r\n             */\r\n            proto.stream.SetFrameSyncRate.prototype.getFrameidx = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.SetFrameSyncRate.prototype.setFrameidx = function (value) {\r\n                jspb.Message.setProto3IntField(this, 5, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.SetFrameSyncRateAck = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.SetFrameSyncRateAck, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.SetFrameSyncRateAck.displayName = \"proto.stream.SetFrameSyncRateAck\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.SetFrameSyncRateAck.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.SetFrameSyncRateAck.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.SetFrameSyncRateAck} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.SetFrameSyncRateAck.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.SetFrameSyncRateAck}\r\n             */\r\n            proto.stream.SetFrameSyncRateAck.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.SetFrameSyncRateAck;\r\n                return proto.stream.SetFrameSyncRateAck.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.SetFrameSyncRateAck} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.SetFrameSyncRateAck}\r\n             */\r\n            proto.stream.SetFrameSyncRateAck.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.SetFrameSyncRateAck.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.SetFrameSyncRateAck.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.SetFrameSyncRateAck} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.SetFrameSyncRateAck.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 status = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.SetFrameSyncRateAck.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.SetFrameSyncRateAck.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.SetFrameSyncRateNotify = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.SetFrameSyncRateNotify, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.SetFrameSyncRateNotify.displayName = \"proto.stream.SetFrameSyncRateNotify\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.SetFrameSyncRateNotify.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.SetFrameSyncRateNotify.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.SetFrameSyncRateNotify} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.SetFrameSyncRateNotify.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        priority: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        framerate: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        frameidx: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        timestamp: jspb.Message.getFieldWithDefault(msg, 4, \"0\")\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.SetFrameSyncRateNotify}\r\n             */\r\n            proto.stream.SetFrameSyncRateNotify.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.SetFrameSyncRateNotify;\r\n                return proto.stream.SetFrameSyncRateNotify.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.SetFrameSyncRateNotify} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.SetFrameSyncRateNotify}\r\n             */\r\n            proto.stream.SetFrameSyncRateNotify.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setPriority(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setFramerate(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setFrameidx(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setTimestamp(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.SetFrameSyncRateNotify.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.SetFrameSyncRateNotify.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.SetFrameSyncRateNotify} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.SetFrameSyncRateNotify.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getPriority();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getFramerate();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getFrameidx();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n                f = message.getTimestamp();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(4, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 priority = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.SetFrameSyncRateNotify.prototype.getPriority = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.SetFrameSyncRateNotify.prototype.setPriority = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 frameRate = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.SetFrameSyncRateNotify.prototype.getFramerate = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.SetFrameSyncRateNotify.prototype.setFramerate = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint32 frameIdx = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.SetFrameSyncRateNotify.prototype.getFrameidx = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.SetFrameSyncRateNotify.prototype.setFrameidx = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional uint64 timeStamp = 4;\r\n             * @return {string}\r\n             */\r\n            proto.stream.SetFrameSyncRateNotify.prototype.getTimestamp = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.SetFrameSyncRateNotify.prototype.setTimestamp = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 4, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.FrameBroadcast = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.FrameBroadcast, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.FrameBroadcast.displayName = \"proto.stream.FrameBroadcast\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.FrameBroadcast.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.FrameBroadcast.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.FrameBroadcast} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.FrameBroadcast.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                        priority: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        cpproto: msg.getCpproto_asB64()\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.FrameBroadcast}\r\n             */\r\n            proto.stream.FrameBroadcast.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.FrameBroadcast;\r\n                return proto.stream.FrameBroadcast.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.FrameBroadcast} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.FrameBroadcast}\r\n             */\r\n            proto.stream.FrameBroadcast.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setRoomid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setPriority(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readBytes());\r\n                            msg.setCpproto(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.FrameBroadcast.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.FrameBroadcast.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.FrameBroadcast} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.FrameBroadcast.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getRoomid();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(1, f);\r\n                }\r\n                f = message.getPriority();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getCpproto_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(3, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint64 roomID = 1;\r\n             * @return {string}\r\n             */\r\n            proto.stream.FrameBroadcast.prototype.getRoomid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.FrameBroadcast.prototype.setRoomid = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 priority = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.FrameBroadcast.prototype.getPriority = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.FrameBroadcast.prototype.setPriority = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.FrameBroadcast.prototype.getCpproto = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.FrameBroadcast.prototype.getCpproto_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getCpproto()));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.FrameBroadcast.prototype.getCpproto_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getCpproto()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.FrameBroadcast.prototype.setCpproto = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 3, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.FrameBroadcastAck = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.FrameBroadcastAck, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.FrameBroadcastAck.displayName = \"proto.stream.FrameBroadcastAck\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.FrameBroadcastAck.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.FrameBroadcastAck.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.FrameBroadcastAck} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.FrameBroadcastAck.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        status: jspb.Message.getFieldWithDefault(msg, 1, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.FrameBroadcastAck}\r\n             */\r\n            proto.stream.FrameBroadcastAck.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.FrameBroadcastAck;\r\n                return proto.stream.FrameBroadcastAck.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.FrameBroadcastAck} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.FrameBroadcastAck}\r\n             */\r\n            proto.stream.FrameBroadcastAck.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setStatus(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.FrameBroadcastAck.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.FrameBroadcastAck.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.FrameBroadcastAck} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.FrameBroadcastAck.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getStatus();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 status = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.FrameBroadcastAck.prototype.getStatus = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.FrameBroadcastAck.prototype.setStatus = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.FrameDataNotify = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.FrameDataNotify, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.FrameDataNotify.displayName = \"proto.stream.FrameDataNotify\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.FrameDataNotify.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.FrameDataNotify.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.FrameDataNotify} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.FrameDataNotify.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        srcuid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        priority: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        cpproto: msg.getCpproto_asB64(),\r\n                        timestamp: jspb.Message.getFieldWithDefault(msg, 4, \"0\"),\r\n                        frameidx: jspb.Message.getFieldWithDefault(msg, 5, 0)\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.FrameDataNotify}\r\n             */\r\n            proto.stream.FrameDataNotify.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.FrameDataNotify;\r\n                return proto.stream.FrameDataNotify.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.FrameDataNotify} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.FrameDataNotify}\r\n             */\r\n            proto.stream.FrameDataNotify.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setSrcuid(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setPriority(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readBytes());\r\n                            msg.setCpproto(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setTimestamp(value);\r\n                            break;\r\n                        case 5:\r\n                            var value = (reader.readUint32());\r\n                            msg.setFrameidx(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.FrameDataNotify.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.FrameDataNotify.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.FrameDataNotify} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.FrameDataNotify.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getSrcuid();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getPriority();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getCpproto_asU8();\r\n                if (f.length > 0) {\r\n                    writer.writeBytes(3, f);\r\n                }\r\n                f = message.getTimestamp();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(4, f);\r\n                }\r\n                f = message.getFrameidx();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(5, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 srcUid = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.FrameDataNotify.prototype.getSrcuid = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.FrameDataNotify.prototype.setSrcuid = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 priority = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.FrameDataNotify.prototype.getPriority = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.FrameDataNotify.prototype.setPriority = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * @return {!(string|Uint8Array)}\r\n             */\r\n            proto.stream.FrameDataNotify.prototype.getCpproto = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {string}\r\n             */\r\n            proto.stream.FrameDataNotify.prototype.getCpproto_asB64 = function () {\r\n                return (jspb.Message.bytesAsB64(this.getCpproto()));\r\n            };\r\n            /**\r\n             * optional bytes cpProto = 3;\r\n             * Note that Uint8Array is not supported on all browsers.\r\n             * @see http://caniuse.com/Uint8Array\r\n             * This is a type-conversion wrapper around `getCpproto()`\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.FrameDataNotify.prototype.getCpproto_asU8 = function () {\r\n                return (jspb.Message.bytesAsU8(this.getCpproto()));\r\n            };\r\n            /** @param {!(string|Uint8Array)} value */\r\n            proto.stream.FrameDataNotify.prototype.setCpproto = function (value) {\r\n                jspb.Message.setProto3BytesField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional uint64 timeStamp = 4;\r\n             * @return {string}\r\n             */\r\n            proto.stream.FrameDataNotify.prototype.getTimestamp = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.FrameDataNotify.prototype.setTimestamp = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 4, value);\r\n            };\r\n            /**\r\n             * optional uint32 frameIdx = 5;\r\n             * @return {number}\r\n             */\r\n            proto.stream.FrameDataNotify.prototype.getFrameidx = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.FrameDataNotify.prototype.setFrameidx = function (value) {\r\n                jspb.Message.setProto3IntField(this, 5, value);\r\n            };\r\n            /**\r\n             * Generated by JsPbCodeGenerator.\r\n             * @param {Array=} opt_data Optional initial data array, typically from a\r\n             * server response, or constructed directly in Javascript. The array is used\r\n             * in place and becomes part of the constructed object. It is not cloned.\r\n             * If no data is provided, the constructed object will be empty, but still\r\n             * valid.\r\n             * @extends {jspb.Message}\r\n             * @constructor\r\n             */\r\n            proto.stream.FrameSyncNotify = function (opt_data) {\r\n                jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n            };\r\n            goog.inherits(proto.stream.FrameSyncNotify, jspb.Message);\r\n            if (goog.DEBUG && !COMPILED) {\r\n                proto.stream.FrameSyncNotify.displayName = \"proto.stream.FrameSyncNotify\";\r\n            }\r\n            if (jspb.Message.GENERATE_TO_OBJECT) {\r\n                /**\r\n                 * Creates an object representation of this proto suitable for use in Soy templates.\r\n                 * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n                 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n                 * For the list of reserved names please see:\r\n                 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n                 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n                 *     for transitional soy proto support: http://goto/soy-param-migration\r\n                 * @return {!Object}\r\n                 */\r\n                proto.stream.FrameSyncNotify.prototype.toObject = function (opt_includeInstance) {\r\n                    return proto.stream.FrameSyncNotify.toObject(opt_includeInstance, this);\r\n                };\r\n                /**\r\n                 * Static version of the {@see toObject} method.\r\n                 * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n                 *     instance for transitional soy proto support:\r\n                 *     http://goto/soy-param-migration\r\n                 * @param {!proto.stream.FrameSyncNotify} msg The msg instance to transform.\r\n                 * @return {!Object}\r\n                 * @suppress {unusedLocalVariables} f is only used for nested messages\r\n                 */\r\n                proto.stream.FrameSyncNotify.toObject = function (includeInstance, msg) {\r\n                    var f, obj = {\r\n                        priority: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                        lastidx: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                        nextidx: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                        startts: jspb.Message.getFieldWithDefault(msg, 4, \"0\"),\r\n                        endts: jspb.Message.getFieldWithDefault(msg, 5, \"0\"),\r\n                        timestamp: jspb.Message.getFieldWithDefault(msg, 6, \"0\")\r\n                    };\r\n                    if (includeInstance) {\r\n                        obj.$jspbMessageInstance = msg;\r\n                    }\r\n                    return obj;\r\n                };\r\n            }\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format).\r\n             * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n             * @return {!proto.stream.FrameSyncNotify}\r\n             */\r\n            proto.stream.FrameSyncNotify.deserializeBinary = function (bytes) {\r\n                var reader = new jspb.BinaryReader(bytes);\r\n                var msg = new proto.stream.FrameSyncNotify;\r\n                return proto.stream.FrameSyncNotify.deserializeBinaryFromReader(msg, reader);\r\n            };\r\n            /**\r\n             * Deserializes binary data (in protobuf wire format) from the\r\n             * given reader into the given message object.\r\n             * @param {!proto.stream.FrameSyncNotify} msg The message object to deserialize into.\r\n             * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n             * @return {!proto.stream.FrameSyncNotify}\r\n             */\r\n            proto.stream.FrameSyncNotify.deserializeBinaryFromReader = function (msg, reader) {\r\n                while (reader.nextField()) {\r\n                    if (reader.isEndGroup()) {\r\n                        break;\r\n                    }\r\n                    var field = reader.getFieldNumber();\r\n                    switch (field) {\r\n                        case 1:\r\n                            var value = (reader.readUint32());\r\n                            msg.setPriority(value);\r\n                            break;\r\n                        case 2:\r\n                            var value = (reader.readUint32());\r\n                            msg.setLastidx(value);\r\n                            break;\r\n                        case 3:\r\n                            var value = (reader.readUint32());\r\n                            msg.setNextidx(value);\r\n                            break;\r\n                        case 4:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setStartts(value);\r\n                            break;\r\n                        case 5:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setEndts(value);\r\n                            break;\r\n                        case 6:\r\n                            var value = (reader.readUint64String());\r\n                            msg.setTimestamp(value);\r\n                            break;\r\n                        default:\r\n                            reader.skipField();\r\n                            break;\r\n                    }\r\n                }\r\n                return msg;\r\n            };\r\n            /**\r\n             * Serializes the message to binary data (in protobuf wire format).\r\n             * @return {!Uint8Array}\r\n             */\r\n            proto.stream.FrameSyncNotify.prototype.serializeBinary = function () {\r\n                var writer = new jspb.BinaryWriter();\r\n                proto.stream.FrameSyncNotify.serializeBinaryToWriter(this, writer);\r\n                return writer.getResultBuffer();\r\n            };\r\n            /**\r\n             * Serializes the given message to binary data (in protobuf wire\r\n             * format), writing to the given BinaryWriter.\r\n             * @param {!proto.stream.FrameSyncNotify} message\r\n             * @param {!jspb.BinaryWriter} writer\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.FrameSyncNotify.serializeBinaryToWriter = function (message, writer) {\r\n                var f = undefined;\r\n                f = message.getPriority();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(1, f);\r\n                }\r\n                f = message.getLastidx();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(2, f);\r\n                }\r\n                f = message.getNextidx();\r\n                if (f !== 0) {\r\n                    writer.writeUint32(3, f);\r\n                }\r\n                f = message.getStartts();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(4, f);\r\n                }\r\n                f = message.getEndts();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(5, f);\r\n                }\r\n                f = message.getTimestamp();\r\n                if (parseInt(f, 10) !== 0) {\r\n                    writer.writeUint64String(6, f);\r\n                }\r\n            };\r\n            /**\r\n             * optional uint32 priority = 1;\r\n             * @return {number}\r\n             */\r\n            proto.stream.FrameSyncNotify.prototype.getPriority = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.FrameSyncNotify.prototype.setPriority = function (value) {\r\n                jspb.Message.setProto3IntField(this, 1, value);\r\n            };\r\n            /**\r\n             * optional uint32 lastIdx = 2;\r\n             * @return {number}\r\n             */\r\n            proto.stream.FrameSyncNotify.prototype.getLastidx = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.FrameSyncNotify.prototype.setLastidx = function (value) {\r\n                jspb.Message.setProto3IntField(this, 2, value);\r\n            };\r\n            /**\r\n             * optional uint32 nextIdx = 3;\r\n             * @return {number}\r\n             */\r\n            proto.stream.FrameSyncNotify.prototype.getNextidx = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n            };\r\n            /** @param {number} value */\r\n            proto.stream.FrameSyncNotify.prototype.setNextidx = function (value) {\r\n                jspb.Message.setProto3IntField(this, 3, value);\r\n            };\r\n            /**\r\n             * optional uint64 startTS = 4;\r\n             * @return {string}\r\n             */\r\n            proto.stream.FrameSyncNotify.prototype.getStartts = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 4, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.FrameSyncNotify.prototype.setStartts = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 4, value);\r\n            };\r\n            /**\r\n             * optional uint64 endTS = 5;\r\n             * @return {string}\r\n             */\r\n            proto.stream.FrameSyncNotify.prototype.getEndts = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 5, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.FrameSyncNotify.prototype.setEndts = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 5, value);\r\n            };\r\n            /**\r\n             * optional uint64 timeStamp = 6;\r\n             * @return {string}\r\n             */\r\n            proto.stream.FrameSyncNotify.prototype.getTimestamp = function () {\r\n                return (jspb.Message.getFieldWithDefault(this, 6, \"0\"));\r\n            };\r\n            /** @param {string} value */\r\n            proto.stream.FrameSyncNotify.prototype.setTimestamp = function (value) {\r\n                jspb.Message.setProto3StringIntField(this, 6, value);\r\n            };\r\n            /**\r\n             * @enum {number}\r\n             */\r\n            proto.stream.SDKHotelCmdID = {\r\n                INVALIDSDKCMD: 0,\r\n                CHECKINCMDID: 1401,\r\n                CHECKINACKCMDID: 1402,\r\n                HEARTBEATCMDID: 1403,\r\n                HEARTBEATACKCMDID: 1404,\r\n                BROADCASTCMDID: 1405,\r\n                BROADCASTACKCMDID: 1406,\r\n                NOTIFYCMDID: 1408,\r\n                CHECKINNOTIFYCMDID: 1410,\r\n                SUBSCRIBECMDID: 1411,\r\n                SUBSCRIBEACKCMDID: 1412,\r\n                PUBLISHCMDID: 1413,\r\n                PUBLISHACKCMDID: 1414,\r\n                PUBLISHNOTIFYCMDID: 1416\r\n            };\r\n            goog.object.extend(exports, proto.stream);\r\n        }, { \"google-protobuf\": 1 }]\r\n}, {}, [3]);\r\n/* ================ matchvsdefine.js ================= */\r\n/**\r\n * 引擎错误码\r\n * @type object\r\n */\r\nvar MvsCode = {\r\n    NoLogin: -2,\r\n    CODE_201: 201,\r\n    CODE_400: 400,\r\n    CODE_401: 401,\r\n    CODE_402: 402,\r\n    CODE_403: 403,\r\n    CODE_404: 404,\r\n    CODE_405: 405,\r\n    CODE_406: 406,\r\n    CODE_500: 500,\r\n    CODE_502: 502,\r\n    CODE_503: 503,\r\n    CODE_504: 504,\r\n    CODE_507: 507,\r\n    CODE_521: 521,\r\n    CODE_522: 522,\r\n    CODE_527: 527,\r\n    CODE_1000: 1000,\r\n    NetWorkErr: 1001,\r\n    CODE_1005: 1005,\r\n    DataParseErr: 1606\r\n};\r\n/**\r\n * 错误码描述\r\n */\r\nvar MvsErrMsg = new (function () {\r\n    this[MvsCode.NoLogin] = \"you are not logined, please reference [http://www.matchvs.com/service?page=js]\";\r\n    this[MvsCode.NetWorkErr] = \"network error, please reference [http://www.matchvs.com/service?page=egretGuide]\";\r\n    this[MvsCode.CODE_1000] = \"netwrk closed normal \";\r\n    this[MvsCode.CODE_1005] = \"netwrk closed no status \";\r\n    this[MvsCode.DataParseErr] = \"you data parse error \";\r\n    this[MvsCode.CODE_400] = \"bad request \";\r\n    this[MvsCode.CODE_401] = \"invaild appkey \";\r\n    this[MvsCode.CODE_402] = \"invaild sign [http://www.matchvs.com/service?page=js]\";\r\n    this[MvsCode.CODE_403] = \"forbidden\";\r\n    this[MvsCode.CODE_404] = \"not found anything, please reference [ http://www.matchvs.com/service?page=js ]\";\r\n    this[MvsCode.CODE_405] = \"room have full, please reference [ http://www.matchvs.com/service?page=js ]\";\r\n    this[MvsCode.CODE_406] = \"room had joinOver, please reference [ http://www.matchvs.com/service?page=js ]\";\r\n    this[MvsCode.CODE_500] = \"server error, please reference [ http://www.matchvs.com/service?page=egretGuide ]\";\r\n    this[MvsCode.CODE_502] = \"service stoped,the license expires or the account is in arrears. please reference [ http://www.matchvs.com/price ]\";\r\n    this[MvsCode.CODE_503] = \"the ccu exceed the limit. please reference [ http://www.matchvs.com/price ]\";\r\n    this[MvsCode.CODE_504] = \"your traffic is running out today,please recharge [ http://www.matchvs.com/price ]\";\r\n    this[MvsCode.CODE_507] = \"room does not exist\";\r\n    this[MvsCode.CODE_521] = \"gameServer not exist, please check your gameserver is ok http://www.matchvs.com/service?page=gameServer\";\r\n    this[MvsCode.CODE_522] = \"frame sync is close, please call the api 'setFrameSync' [http://www.matchvs.com/service?page=js]\";\r\n    this[MvsCode.CODE_527] = \"sending message too often ,  can't exceed 500 times per second\";\r\n    this[MvsCode.CODE_201] = \"reconnect not in room http://www.matchvs.com/service?page=js\";\r\n});\r\nfunction MsCreateRoomInfo(roomName, maxPlayer, mode, canWatch, visibility, roomProperty) {\r\n    this.roomName = roomName;\r\n    this.maxPlayer = maxPlayer;\r\n    this.mode = mode;\r\n    this.canWatch = canWatch;\r\n    this.visibility = visibility;\r\n    this.roomProperty = roomProperty;\r\n    this.toString = function () {\r\n        return \"roomName:\" + this.roomName\r\n            + \" maxPlayer:\" + this.maxPlayer\r\n            + \" mode:\" + this.mode\r\n            + \" canWatch:\" + this.canWatch\r\n            + \" visibility:\" + this.visibility\r\n            + \" roomProperty:\" + this.roomProperty;\r\n    };\r\n    MatchvsLog.logI(this + \" MsCreateRoomInfo:\" + JSON.stringify(this));\r\n}\r\nfunction MsEnum() { }\r\n/**\r\n *      joinSpecialRoom = 1;\t\t//扩展接口,param(roomID, userProfile)\r\n *      joinRoomWithProperty = 2;\t//扩展接口,param(roomProperty, userProfil\r\n *      joinRandomRoom = 3;\t\t\t//基本接口,param(maxPlayer, userProfile)\r\n * @type {{NoJoin: number, joinSpecialRoom: number, joinRoomWithProperty: number, joinRandomRoom: number}}\r\n */\r\nMsEnum.JoinRoomType = { NoJoin: 0, joinSpecialRoom: 1, joinRoomWithProperty: 2, joinRandomRoom: 3, reconnect: 4 };\r\nfunction MsRoomJoin(joinType, userID, roomID, gameID, maxPlayer, mode, canWatch, userProfile, tags) {\r\n    this.joinType = joinType;\r\n    this.userID = userID;\r\n    this.roomID = roomID;\r\n    this.gameID = gameID;\r\n    this.maxPlayer = maxPlayer;\r\n    this.mode = mode;\r\n    this.canWatch = canWatch;\r\n    this.tags = tags; //k-v map as json object  ex:[{dd:'SB',AA:'dd',re1:123},{cc:'dd',lk:'1qw'}];\r\n    this.userProfile = userProfile;\r\n    MatchvsLog.logI(this + \" MsRoomJoin:\" + JSON.stringify(this));\r\n}\r\nfunction MsJoinOverRsp(status, cpProto) {\r\n    this.status = status;\r\n    this.cpProto = cpProto;\r\n    MatchvsLog.logI(this + \" MsJoinOverRsp:\" + JSON.stringify(this));\r\n}\r\n/**\r\n *\r\n * @param roomID    {string}\r\n * @param srcUserID {number}\r\n * @param cpProto   {string}\r\n * @constructor\r\n */\r\nfunction MsJoinOverNotifyInfo(roomID, srcUserID, cpProto) {\r\n    this.roomID = roomID;\r\n    this.srcUserID = srcUserID;\r\n    this.cpProto = cpProto;\r\n    MatchvsLog.logI(this + \" MsJoinOverNotifyInfo:\" + JSON.stringify(this));\r\n}\r\n/**\r\n *\r\n * @param status\r\n * @param roomID\r\n * @param owner\r\n * @constructor\r\n */\r\nfunction MsCreateRoomRsp(status, roomID, owner) {\r\n    this.status = status;\r\n    this.roomID = roomID;\r\n    this.owner = owner;\r\n    MatchvsLog.logI(this + \" MsCreateRoomRsp:\" + JSON.stringify(this));\r\n}\r\n/**\r\n *\r\n * @param gameID {number}\r\n * @param roomID {string}\r\n * @param userID {number}\r\n * @param bookID {string}\r\n * @param book_key {string}\r\n * @param hotelInfo {string}\r\n * @constructor\r\n */\r\nfunction MsCheckIn(gameID, roomID, userID, bookID, book_key, hotelInfo) {\r\n    this.gameID = gameID;\r\n    this.roomID = roomID;\r\n    this.userID = userID;\r\n    this.bookID = bookID;\r\n    this.bookKey = book_key;\r\n    this.hotelInfo = hotelInfo;\r\n}\r\n/**\r\n *\r\n * @param maxplayer {number}\r\n * @param mode {number}\r\n * @param canWatch {number}\r\n * @param tags {object}\r\n * @constructor\r\n */\r\nfunction MsMatchInfo(maxplayer, mode, canWatch, tags) {\r\n    this.maxPlayer = maxplayer;\r\n    this.mode = mode;\r\n    this.canWatch = canWatch;\r\n    this.tags = {};\r\n    this.tags = tags;\r\n    MatchvsLog.logI(this + \" MsMatchInfo:\" + JSON.stringify(this));\r\n}\r\n/**\r\n *  房间信息\r\n * @param roomID\r\n * @param roomProperty\r\n * @param ownerID\r\n * @param state\r\n * @constructor\r\n */\r\nfunction MsRoomInfo(roomID, roomProperty, ownerID, state) {\r\n    this.roomID = roomID; // string\r\n    this.roomProperty = roomProperty; //\r\n    this.ownerId = ownerID;\r\n    this.owner = ownerID;\r\n    this.state = state;\r\n    MatchvsLog.logI(this + \" MsRoomInfo:\" + JSON.stringify(this));\r\n}\r\n/**\r\n * 房间用户信息\r\n * @param userID\r\n * @param userProfile\r\n * @constructor\r\n */\r\nfunction MsRoomUserInfo(userID, userProfile) {\r\n    this.userId = userID;\r\n    this.userID = userID;\r\n    this.userProfile = userProfile;\r\n    MatchvsLog.logI(this + \" MsRoomUserInfo:\" + JSON.stringify(this));\r\n}\r\n/**\r\n * 离开房间返回信息\r\n * @param status\r\n * @param roomID\r\n * @param userID\r\n * @param cpProto\r\n * @constructor\r\n */\r\nfunction MsLeaveRoomRsp(status, roomID, userID, cpProto) {\r\n    this.status = status;\r\n    this.roomID = roomID;\r\n    this.userId = userID;\r\n    this.userID = userID; //新增兼容\r\n    this.cpProto = cpProto;\r\n    MatchvsLog.logI(this + \" MsLeaveRoomRsp:\" + JSON.stringify(this));\r\n}\r\n/**\r\n *\r\n * @param userID {number}\r\n * @param roomID {string}\r\n * @param owner  {number}\r\n * @param cpProto{string}\r\n * @constructor\r\n */\r\nfunction MsLeaveRoomNotify(roomID, userID, owner, cpProto) {\r\n    this.userId = userID;\r\n    this.userID = userID;\r\n    this.roomID = roomID;\r\n    this.owner = owner;\r\n    this.cpProto = cpProto;\r\n    MatchvsLog.logI(this + \" MsLeaveRoomNotify:\" + JSON.stringify(this));\r\n}\r\n/**\r\n *\r\n * @param status\r\n * @param groups\r\n * @constructor\r\n */\r\nfunction MsSubscribeEventGroupRsp(status, groups) {\r\n    this.status = status; //number\r\n    this.groups = groups; // array<string>\r\n}\r\n/**\r\n *\r\n */\r\nfunction MsSendEventGroupNotify(srcUserID, groups, cpProto) {\r\n    this.srcUid = srcUserID; // number\r\n    this.srcUserID = srcUserID; // number\r\n    this.groups = groups; // array<string>\r\n    this.cpProto = cpProto; // string\r\n}\r\n/**\r\n *\r\n * @param status\r\n * @param userID\r\n * @param token\r\n * @param name\r\n * @param avatar\r\n * @constructor\r\n */\r\nfunction MsRegistRsp(status, userID, token, name, avatar) {\r\n    this.status = status;\r\n    this.id = userID;\r\n    this.userID = userID;\r\n    this.token = token;\r\n    this.name = name;\r\n    this.avatar = avatar;\r\n    MatchvsLog.logI(\"MsRegistRsp\" + \":\" + JSON.stringify(this));\r\n}\r\nfunction MsLoginRsp(status, roomID) {\r\n    this.status = status; //int\r\n    this.roomID = roomID; //unsigned long long\r\n    MatchvsLog.logI(\"MsLoginRsp:\" + \":\" + JSON.stringify(this));\r\n}\r\nfunction MsPublicMemberArgs(channle, platform, userID, token, gameID, gameVersion, appkey, secretKey, deviceID, gatewayID) {\r\n    this.userID = userID;\r\n    this.token = token;\r\n    this.gameID = gameID;\r\n    this.gameVersion = gameVersion;\r\n    this.appKey = appkey;\r\n    this.secretKey = secretKey;\r\n    this.deviceID = deviceID;\r\n    this.gatewayID = gatewayID;\r\n    this.channel = channle;\r\n    this.platform = platform;\r\n    MatchvsLog.logI(this + \":\" + JSON.stringify(this));\r\n}\r\n/**\r\n *\r\n * @param userID {number}\r\n * @param checkins {array<number>}\r\n * @param players {array<number>}\r\n * @param maxPlayers {number}\r\n * @constructor\r\n */\r\nfunction MsCheckInNotify(userID, checkins, players, maxPlayer) {\r\n    this.userID = userID;\r\n    this.checkins = checkins;\r\n    this.players = players;\r\n    this.maxPlayers = maxPlayer;\r\n    this.maxPlayer = maxPlayer;\r\n    MatchvsLog.logI(this + \":\" + JSON.stringify(this));\r\n}\r\n/**\r\n *\r\n * @param srcUserID {number}\r\n * @param cpProto {string}\r\n * @constructor\r\n */\r\nfunction MsSendEventNotify(srcUserID, cpProto) {\r\n    this.srcUserId = srcUserID;\r\n    this.srcUserID = srcUserID;\r\n    this.cpProto = cpProto;\r\n}\r\n/**\r\n *\r\n * @param srcUserID {number}\r\n * @param cpProto {string}\r\n * @constructor\r\n */\r\nfunction MsGameServerNotifyInfo(srcUserID, cpProto) {\r\n    this.srcUserId = srcUserID;\r\n    this.srcUserID = srcUserID;\r\n    this.cpProto = cpProto;\r\n}\r\n/**\r\n *\r\n * @param status {number}\r\n * @param sequence {number}\r\n * @constructor\r\n */\r\nfunction MsSendEventRsp(status, sequence) {\r\n    this.status = status;\r\n    this.sequence = sequence;\r\n}\r\n/**\r\n * 房间信息列表\r\n * @param roomID {string}\r\n * @param roomName {string}\r\n * @param maxplayer {number}\r\n * @param mode {number}\r\n * @param canWatch {number}\r\n * @param roomProperty {string}\r\n * @constructor\r\n */\r\nfunction MsRoomInfoEx(roomID, roomName, maxplayer, mode, canWatch, roomProperty) {\r\n    this.roomID = roomID;\r\n    this.roomName = roomName;\r\n    this.maxPlayer = maxplayer;\r\n    this.mode = mode;\r\n    this.canWatch = canWatch;\r\n    this.roomProperty = roomProperty;\r\n    MatchvsLog.logI(\" MsRoomInfoEx\" + \":\" + JSON.stringify(this));\r\n}\r\n/**\r\n * 获取房间信息列表返回\r\n * @param status {number}\r\n * @param roomInfos {Array<MsRoomInfoEx>}\r\n * @constructor\r\n */\r\nfunction MsRoomListRsp(status, roomInfos) {\r\n    this.status = status;\r\n    this.roomInfos = roomInfos;\r\n    MatchvsLog.logI(this + \" MsRoomListRsp:\" + JSON.stringify(this));\r\n}\r\n/**\r\n *\r\n * @param userID {number}\r\n * @param srcUserID {number}\r\n * @param data {string}\r\n * @param owner {number}\r\n * @constructor\r\n */\r\nfunction MsKickPlayerNotify(userID, srcUserID, data, owner) {\r\n    this.userId = userID;\r\n    this.userID = userID;\r\n    this.srcUserId = srcUserID;\r\n    this.srcUserID = srcUserID;\r\n    this.cpProto = data;\r\n    this.owner = owner;\r\n    MatchvsLog.logI(this + \" MsKickPlayerNotify:\" + JSON.stringify(this));\r\n}\r\nfunction MsKickPlayerRsp(status, owner, userID) {\r\n    this.status = status;\r\n    this.owner = owner;\r\n    this.userID = userID;\r\n    MatchvsLog.logI(this + \" MsKickPlayerRsp:\" + JSON.stringify(this));\r\n}\r\n/**\r\n *\r\n * @param status {Number} 200 is ok\r\n * @constructor\r\n */\r\nfunction MsSetChannelFrameSyncRsp(status) {\r\n    this.status = status;\r\n}\r\n/**\r\n *\r\n * @param status {Number} 200 is ok\r\n * @constructor\r\n */\r\nfunction MsSendFrameEventRsp(status) {\r\n    this.status = status;\r\n}\r\n/**\r\n * message RoomFilter\r\n *{\r\n *    uint32 maxPlayer = 1;\r\n *    int32 mode = 2;\r\n *    int32 canWatch = 3;\r\n *    bytes roomProperty = 4;\r\n *}\r\n * @param maxPlayer {int}\r\n * @param mode {int}\r\n * @param canWatch {int}\r\n * @param roomProperty {String}\r\n * @constructor\r\n */\r\nfunction MsRoomFilter(maxPlayer, mode, canWatch, roomProperty) {\r\n    this.maxPlayer = maxPlayer;\r\n    this.mode = mode;\r\n    this.canWatch = canWatch;\r\n    this.roomProperty = roomProperty;\r\n    MatchvsLog.logI(this + \" MsRoomFilter:\" + JSON.stringify(this));\r\n}\r\n/**\r\n *\r\n * @param maxPlayer {number}\r\n * @param mode {number}\r\n * @param canWatch {number}\r\n * @param roomProperty {string}\r\n * @param full {number} 0-全部 1-满 2-未满\r\n * @param state {number} 0-StateNil 1-StateOpen 2-StateClosed\r\n * @param sort  {number} 0-RoomSortNil 1-RoomSortCreateTime 2-SortPlayerNum 3-SortState\r\n * @param order {number} 0-SortAsc 1-SortDesc\r\n * @param pageNo {number}\r\n * @param pageSize {number}\r\n * @constructor\r\n */\r\nfunction MsRoomFilterEx(maxPlayer, mode, canWatch, roomProperty, full, state, sort, order, pageNo, pageSize) {\r\n    this.maxPlayer = maxPlayer;\r\n    this.mode = mode;\r\n    this.canWatch = canWatch;\r\n    this.roomProperty = roomProperty;\r\n    this.full = full;\r\n    this.state = state;\r\n    this.sort = sort;\r\n    this.order = order;\r\n    this.pageNo = pageNo;\r\n    this.pageSize = pageSize ? pageSize : 10;\r\n    MatchvsLog.logI(this + \" MsRoomFilterEx:\" + JSON.stringify(this));\r\n}\r\n/**\r\n *\r\n * @param status\r\n * @param state\r\n * @param maxPlayer\r\n * @param mode\r\n * @param canWatch\r\n * @param roomProperty\r\n * @param owner\r\n * @param createFlag\r\n * @param userInfos {Array<MsRoomUserInfo>}\r\n * @constructor\r\n */\r\nfunction MsGetRoomDetailRsp(status, state, maxPlayer, mode, canWatch, roomProperty, owner, createFlag, userInfos) {\r\n    this.status = status;\r\n    this.state = state;\r\n    this.maxPlayer = maxPlayer;\r\n    this.mode = mode;\r\n    this.canWatch = canWatch;\r\n    this.roomProperty = roomProperty;\r\n    this.owner = owner;\r\n    this.createFlag = createFlag;\r\n    this.userInfos = [];\r\n    this.userInfos = userInfos;\r\n    MatchvsLog.logI(this + \" MsGetRoomDetailRsp:\" + JSON.stringify(this));\r\n}\r\n/**\r\n *\r\n * @param roomID        {string}\r\n * @param roomName      {string}\r\n * @param maxPlayer     {number}\r\n * @param gamePlayer    {number}\r\n * @param watchPlaer    {number}\r\n * @param mode          {number}\r\n * @param canWatch      {number}\r\n * @param roomProperty  {string}\r\n * @param owner         {number}\r\n * @param state         {number}\r\n * @param createTime    {string}\r\n * @constructor\r\n */\r\nfunction MsRoomAttribute(roomID, roomName, maxPlayer, gamePlayer, watchPlaer, mode, canWatch, roomProperty, owner, state, createTime) {\r\n    this.roomID = roomID;\r\n    this.roomName = roomName;\r\n    this.maxPlayer = maxPlayer;\r\n    this.gamePlayer = gamePlayer;\r\n    this.watchPlayer = watchPlaer;\r\n    this.mode = mode;\r\n    this.canWatch = canWatch;\r\n    this.roomProperty = roomProperty;\r\n    this.owner = owner;\r\n    this.state = state;\r\n    this.createTime = createTime;\r\n    MatchvsLog.logI(this + \" MsRoomAttribute:\" + JSON.stringify(this));\r\n}\r\n/**\r\n *\r\n * @param status {number}\r\n * @param total {number}\r\n * @param roomAttrs {Array<MsRoomAttribute>}\r\n * @constructor\r\n */\r\nfunction MsGetRoomListExRsp(status, total, roomAttrs) {\r\n    this.status = status;\r\n    this.total = total;\r\n    this.roomAttrs = [];\r\n    this.roomAttrs = roomAttrs;\r\n    MatchvsLog.logI(this + \" MsGetRoomListExRsp:\" + JSON.stringify(this));\r\n}\r\n/**\r\n *\r\n * @param srcUserID {Number}\r\n * @param cpProto {String}\r\n * @param timestamp {String} ms\r\n * @constructor\r\n */\r\nfunction MsFrameItem(srcUserID, cpProto, timestamp) {\r\n    this.srcUserID = srcUserID;\r\n    this.cpProto = cpProto;\r\n    this.timestamp = timestamp;\r\n}\r\n/**\r\n *\r\n * @param frameIndex {Number}\r\n * @param frameItems {MsFrameItem[]}\r\n * @param frameWaitCount {Number}\r\n * @constructor\r\n */\r\nfunction MsFrameData(frameIndex, frameItems, frameWaitCount) {\r\n    this.frameIndex = frameIndex;\r\n    this.frameItems = frameItems;\r\n    this.frameWaitCount = frameWaitCount;\r\n}\r\n/**\r\n *\r\n * @param roomID {string}\r\n * @param userID {number}\r\n * @param state {number} 1-网络异常，正在重连  2-重连成功 3-重连失败，退出房间\r\n * @param owner {number}\r\n * @constructor {number}\r\n */\r\nfunction MsNetworkStateNotify(roomID, userID, state, owner) {\r\n    this.roomID = roomID;\r\n    this.userID = userID;\r\n    this.state = state;\r\n    this.owner = owner;\r\n}\r\n/**\r\n * 设置房间属性返回值\r\n * @param status {number}\r\n * @param roomID {string}\r\n * @param userID {number}\r\n * @param roomProperty {string}\r\n * @constructor\r\n */\r\nfunction MsSetRoomPropertyRspInfo(status, roomID, userID, roomProperty) {\r\n    this.status = status;\r\n    this.roomID = roomID;\r\n    this.userID = userID;\r\n    this.roomProperty = roomProperty;\r\n    MatchvsLog.logI(this + \" MsSetRoomPropertyRspInfo:\" + JSON.stringify(this));\r\n}\r\n/**\r\n *\r\n * @param roomID {string}\r\n * @param userID {number}\r\n * @param roomProperty {string}\r\n * @constructor\r\n */\r\nfunction MsRoomPropertyNotifyInfo(roomID, userID, roomProperty) {\r\n    this.roomID = roomID;\r\n    this.userID = userID;\r\n    this.roomProperty = roomProperty;\r\n    MatchvsLog.logI(this + \" MsRoomPropertyNotifyInfo:\" + JSON.stringify(this));\r\n}\r\nfunction MsHeartBeatResponse(gameID, gsExist) {\r\n    this.gameID = gameID;\r\n    this.gsExist = gsExist;\r\n}\r\nfunction MsGatewaySpeedResponse(Status, Seq) {\r\n    this.status = Status;\r\n    this.seq = Seq;\r\n}\r\nfunction MsReopenRoomResponse(Status, cpProto) {\r\n    this.status = Status;\r\n    this.cpProto = cpProto;\r\n    MatchvsLog.logI(this + \" MsReopenRoomResponse:\" + JSON.stringify(this));\r\n}\r\nfunction MsReopenRoomNotify(roomID, userID, cpProto) {\r\n    this.roomID = roomID;\r\n    this.userID = userID;\r\n    this.cpProto = cpProto;\r\n    MatchvsLog.logI(this + \" MsReopenRoomNotify:\" + JSON.stringify(this));\r\n} /* ================ matchvsnetwork.js ================= */\r\nfunction MatchvsNetWorkCallBack() {\r\n    /**\r\n     *\r\n     * @param buf DataView\r\n     */\r\n    this.onMsg = function (buf) {\r\n    };\r\n    /**\r\n     *\r\n     * @param errCode int\r\n     * @param errMsg String\r\n     */\r\n    this.onErr = function (errCode, errMsg) {\r\n    };\r\n}\r\nvar MatchvsNetWork;\r\nvar MatchvsHttp;\r\ntry {\r\n    if (typeof (wx) !== \"undefined\") {\r\n        console.log(\"network api->WX\");\r\n        MatchvsNetWork = function MatchvsNetWork(host, callback) {\r\n            /**\r\n             * WebSocket 任务，可通过 wx.connectSocket() 接口创建返回。\r\n             * @type {socket}\r\n             */\r\n            this.socket = wx.connectSocket({\r\n                url: host,\r\n                header: {\r\n                    \"engine\": \"WeiXinGame\"\r\n                }\r\n            });\r\n            this.socketOpen = false;\r\n            var socketMsgQueue = [];\r\n            var mCallBack = callback;\r\n            var mHost = host;\r\n            var that = this;\r\n            this.close = function () {\r\n                if (this.socket) {\r\n                    this.socket.close({\r\n                        code: 1000,\r\n                        reason: \"normal\"\r\n                    });\r\n                }\r\n            };\r\n            /**\r\n             * msg {DataView}\r\n             */\r\n            this.send = function (msg) {\r\n                if (this.socketOpen) {\r\n                    this.socket.send({\r\n                        data: msg.buffer\r\n                    });\r\n                }\r\n                else {\r\n                    //只缓存一百\r\n                    if (socketMsgQueue.length < 100) {\r\n                        socketMsgQueue.push(msg);\r\n                    }\r\n                }\r\n            };\r\n            // function connect() {\r\n            //     socket =\r\n            // }\r\n            //\r\n            // connect();\r\n            this.socket.onOpen(function (res) {\r\n                MatchvsLog.logI(\"[wx.WebSocket][connect]:\" + res);\r\n                that.socketOpen = true;\r\n                while (socketMsgQueue.length > 0) {\r\n                    that.send(socketMsgQueue.pop());\r\n                }\r\n                mCallBack.onConnect && mCallBack.onConnect(mHost);\r\n            });\r\n            this.socket.onClose(function (e) {\r\n                that.socketOpen = false;\r\n                mCallBack.onDisConnect && mCallBack.onDisConnect(mHost, e);\r\n                MatchvsLog.logI(\"[wx.WebSocket] [onClose] case:\" + JSON.stringify(e));\r\n            });\r\n            this.socket.onMessage(function (res) {\r\n                var dataView = new DataView(res.data);\r\n                mCallBack.onMsg(dataView);\r\n            });\r\n            this.socket.onError(function (event) {\r\n                mCallBack.onDisConnect && mCallBack.onDisConnect(mHost, event);\r\n                MatchvsLog.logI(\"[wx.WebSocket] [onError] case:\" + JSON.stringify(event));\r\n            });\r\n        };\r\n        MatchvsHttp = function MatchvsHttp(callback) {\r\n            this.mCallback = callback;\r\n            function send(url, callback, isPost, params) {\r\n                var contentType = isPost ? \"application/json\" : \"application/x-www-form-urlencoded\";\r\n                wx.request({\r\n                    url: url,\r\n                    data: params,\r\n                    header: {\r\n                        \"content-type\": contentType\r\n                    },\r\n                    success: function (res) {\r\n                        var rsp = JSON.stringify(res.data);\r\n                        MatchvsLog.logI(\"http success:\" + rsp);\r\n                        callback.onMsg(rsp);\r\n                    },\r\n                    fail: function (res) {\r\n                        MatchvsLog.logI(\"http fail:\" + res.errMsg);\r\n                        callback.onErr(0, res.errMsg);\r\n                    }\r\n                });\r\n            }\r\n            /**\r\n             * HTTP GET\r\n             * @param url {String} ex:\"http://testpay.matchvs.com/wc3/submitOrder.do?key=fa\"\r\n             */\r\n            this.get = function (url) {\r\n                send(url, this.mCallback, false, null);\r\n            };\r\n            /**\r\n             * HTTP POST\r\n             * @param url {String} ex:\"http://testpay.matchvs.com/wc3/submitOrder.do\"\r\n             * @param params {String} ex:\"lorem=ipsum&name=binny\";\r\n             */\r\n            this.post = function (url, params) {\r\n                send(url, this.mCallback, true, params);\r\n            };\r\n        };\r\n    }\r\n    else if (typeof (BK) !== \"undefined\") {\r\n        console.log(\"network api->BK\");\r\n        MatchvsNetWork = function MatchvsNetWork(host, callback) {\r\n            var mCallBack = callback;\r\n            var mHost = host;\r\n            var socketMsgQueue = [];\r\n            var socketOpen = false;\r\n            var socket = new BK.WebSocket(host);\r\n            var that = this;\r\n            this.send = function (msg) {\r\n                if (socketOpen) {\r\n                    socket.send(msg.buffer);\r\n                }\r\n                else {\r\n                    if (socketMsgQueue.length < 100) {\r\n                        socketMsgQueue.push(msg);\r\n                    }\r\n                }\r\n            };\r\n            this.close = function () {\r\n                if (socket) {\r\n                    socket.close();\r\n                }\r\n            };\r\n            socket.onOpen = function (res) {\r\n                socketOpen = true;\r\n                MatchvsLog.logI(\"[BK.WebSocket][connect]:\" + res);\r\n                while (socketMsgQueue.length > 0) {\r\n                    that.send(socketMsgQueue.pop());\r\n                }\r\n                mCallBack.onConnect && mCallBack.onConnect(mHost);\r\n            };\r\n            socket.onClose = function (res) {\r\n                socketOpen = false;\r\n                var e = { code: 1000, message: \" close normal\" };\r\n                mCallBack.onDisConnect && mCallBack.onDisConnect(mHost, e);\r\n                MatchvsLog.logI(\"[BK.WebSocket] [onClose] case:\" + JSON.stringify(res));\r\n            };\r\n            socket.onError = function (err) {\r\n                if (socket && socketOpen) {\r\n                    socketOpen = false;\r\n                    socket.close();\r\n                }\r\n                var e = { code: err.getErrorCode(), message: err.getErrorString() };\r\n                // if(e.code === 65535){\r\n                //     e.code = 1000;\r\n                // }\r\n                mCallBack.onDisConnect && mCallBack.onDisConnect(mHost, e);\r\n                MatchvsLog.logI(\"[BK.WebSocket] [onError] case:\" + JSON.stringify(err));\r\n            };\r\n            socket.onMessage = function (res, data) {\r\n                var buf = data.data;\r\n                buf.rewind();\r\n                var ab = new ArrayBuffer(buf.length);\r\n                var dataView = new DataView(ab);\r\n                while (!buf.eof) {\r\n                    dataView.setUint8(buf.pointer, buf.readUint8Buffer());\r\n                }\r\n                mCallBack.onMsg && mCallBack.onMsg(dataView);\r\n            };\r\n            if (socket) {\r\n                socket.connect();\r\n            }\r\n        };\r\n        MatchvsHttp = function MatchvsHttp(callback) {\r\n            this.mCallback = callback;\r\n            function send(url, call, isPost, params) {\r\n                var http = new BK.HttpUtil(url);\r\n                http.setHttpMethod(isPost ? \"post\" : \"get\");\r\n                http.setHttpHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n                http.requestAsync(function (res, code) {\r\n                    if (code === 200) {\r\n                        var dt = res.readAsString(true);\r\n                        call.onMsg(dt);\r\n                        MatchvsLog.logI(\"[HTTP:](\" + url + \")+\" + dt);\r\n                    }\r\n                    else {\r\n                        call.onErr(code, res.readAsString(true));\r\n                    }\r\n                });\r\n                if (isPost) {\r\n                    http.setHttpPostData(params);\r\n                }\r\n                else {\r\n                    http.setHttpUrl(url);\r\n                }\r\n            }\r\n            /**\r\n             * HTTP GET\r\n             * @param url {String} ex:\"http://testpay.matchvs.com/wc3/submitOrder.do?key=fa\"\r\n             */\r\n            this.get = function (url) {\r\n                send(url, this.mCallback, false, null);\r\n            };\r\n            /**\r\n             * HTTP POST\r\n             * @param url {String} ex:\"http://testpay.matchvs.com/wc3/submitOrder.do\"\r\n             * @param params {String} ex:\"lorem=ipsum&name=binny\";\r\n             */\r\n            this.post = function (url, params) {\r\n                send(url, this.mCallback, true, params);\r\n            };\r\n        };\r\n    }\r\n    else {\r\n        console.log(\"network api->browser\");\r\n        MatchvsNetWork = function MatchvsNetWork(host, callback) {\r\n            this.socket = null;\r\n            this.mCallBack = callback;\r\n            this.mHost = host;\r\n            var bufQueue = [];\r\n            this.send = function (message) {\r\n                if (!window.WebSocket) {\r\n                    return;\r\n                }\r\n                if (isIE()) {\r\n                    var uint8A = new Uint8Array(message.buffer.byteLength);\r\n                    for (var i = 0; i < uint8A.length; i++) {\r\n                        uint8A[i] = (message.getUint8(i));\r\n                    }\r\n                    message = uint8A;\r\n                }\r\n                if (this.socket.readyState === WebSocket.OPEN) {\r\n                    //log(message);\r\n                    this.socket.send(message.buffer);\r\n                }\r\n                else {\r\n                    bufQueue.push(message);\r\n                }\r\n            };\r\n            this.close = function () {\r\n                if (this.socket) {\r\n                    if (typeof cc !== \"undefined\" && typeof cc.Component !== \"undefined\") {\r\n                        this.socket.close();\r\n                    }\r\n                    else {\r\n                        this.socket.close(1000, \"\");\r\n                    }\r\n                }\r\n            };\r\n            if (!window.WebSocket) {\r\n                window.WebSocket = window.MozWebSocket;\r\n            }\r\n            if (window.WebSocket) {\r\n                this.socket = new WebSocket(host);\r\n                this.socket.hashcode = new Date().getMilliseconds();\r\n                MatchvsLog.logI(\"try to create a socket:\" + this.mHost + \" socket is \" + this.socket.hashcode);\r\n                this.socket.onmessage = function (event) {\r\n                    if (typeof FileReader !== 'undefined' && (event.data instanceof Blob)) {\r\n                        var reader = new FileReader();\r\n                        reader.readAsArrayBuffer(event.data);\r\n                        //  当读取操作成功完成时调用.\r\n                        reader.onload = function (evt) {\r\n                            if (evt.target.readyState === FileReader.DONE) {\r\n                                var dataView = new DataView(reader.result);\r\n                                this.mCallBack.onMsg(dataView);\r\n                            }\r\n                            else {\r\n                                this.mCallBack.onErr(MvsCode.DataParseErr, \"[err]parse fail\");\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else if (event.data instanceof ArrayBuffer) {\r\n                        //for CC jsb_websocket.cpp.onMessage()\r\n                        // console.log(\"[INFO] event \"+event +\" json:\"+JSON.stringify(event));\r\n                        var dataView = new DataView(event.data);\r\n                        this.mCallBack.onMsg(dataView);\r\n                    }\r\n                    else {\r\n                        console.log(\"[error] unknown event :\" + event + \" => \" + JSON.stringify(event));\r\n                        this.mCallBack.onErr(MvsCode.DataParseErr, \"[err]parse fail\");\r\n                    }\r\n                }.bind(this);\r\n                this.socket.onopen = function (event) {\r\n                    MatchvsLog.logI(\"Create the socket is success :\" + this.mHost + \" socket is \" + this.socket.hashcode);\r\n                    while (bufQueue.length > 0) {\r\n                        this.send(bufQueue.pop());\r\n                    }\r\n                    this.mCallBack.onConnect && this.mCallBack.onConnect(this.mHost);\r\n                }.bind(this);\r\n                this.socket.onclose = function (e) {\r\n                    if (typeof cc !== \"undefined\" && typeof cc.Component !== \"undefined\") {\r\n                        e = { \"code\": 1000, \"reason\": \"jsb friend close \" };\r\n                    }\r\n                    MatchvsLog.logI(\"socket on closed ,code:\" + e.code + \"(1000:NORMAL,1005:CLOSE_NO_STATUS,1006:RESET,1009:CLOSE_TOO_LARGE) err:\" + JSON.stringify(e));\r\n                    this.mCallBack.onDisConnect && this.mCallBack.onDisConnect(this.mHost, e);\r\n                }.bind(this);\r\n                this.socket.onerror = function (event) {\r\n                    MatchvsLog.logI(\"socket on error ,event:\" + JSON.stringify(event));\r\n                    this.mCallBack.onDisConnect && this.mCallBack.onDisConnect(this.mHost, event);\r\n                }.bind(this);\r\n            }\r\n            else {\r\n                alert(\"Not Support the WebSocket！\");\r\n            }\r\n        };\r\n        MatchvsHttp = function MatchvsHttp(callback) {\r\n            this.mCallback = callback;\r\n            function send(url, callback, isPost, params) {\r\n                var http = new XMLHttpRequest();\r\n                http.open(isPost ? \"POST\" : \"GET\", url, true);\r\n                http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n                http.onreadystatechange = function () {\r\n                    if (http.readyState === 4) {\r\n                        if (http.status === 200) {\r\n                            callback.onMsg(http.responseText);\r\n                            MatchvsLog.logI(\"[HTTP:](\" + url + \")+\" + http.responseText);\r\n                        }\r\n                        else {\r\n                            callback.onErr(http.status, http.statusText);\r\n                        }\r\n                    }\r\n                };\r\n                if (isPost) {\r\n                    http.send(params);\r\n                }\r\n                else {\r\n                    http.send(null);\r\n                }\r\n            }\r\n            /**\r\n             * HTTP GET\r\n             * @param url {String} ex:\"http://testpay.matchvs.com/wc3/submitOrder.do?key=fa\"\r\n             */\r\n            this.get = function (url) {\r\n                send(url, this.mCallback, false, null);\r\n            };\r\n            /**\r\n             * HTTP POST\r\n             * @param url {String} ex:\"http://testpay.matchvs.com/wc3/submitOrder.do\"\r\n             * @param params {String} ex:\"lorem=ipsum&name=binny\";\r\n             */\r\n            this.post = function (url, params) {\r\n                send(url, this.mCallback, true, params);\r\n            };\r\n        };\r\n    }\r\n}\r\ncatch (e) {\r\n    console.warn(\"network adapter warning:\" + e.message);\r\n}\r\n/* ================ matchvsprotocol.js ================= */\r\n//================== CMD =======================\r\nvar MATCHVS_USER_GATEWAY_SPEED_REQ = 1001;\r\nvar MATCHVS_USER_GATEWAY_SPEED_RSP = 1002;\r\nvar MATCHVS_USER_LOGIN_REQ = 1101;\r\nvar MATCHVS_USER_LOGIN_RSP = 1102;\r\nvar MATCHVS_USER_HEARTBEAT_REQ = 1103;\r\nvar MATCHVS_USER_HEARTBEAT_RSP = 1103;\r\nvar MATCHVS_NOTICE_USER_RELOGIN = 1104;\r\nvar MATCHVS_USER_LOGOUT_REQ = 1105;\r\nvar MATCHVS_USER_LOGOUT_RSP = 1106;\r\nvar MATCHVS_NETWORK_STATE_NOTIFY = 1122;\r\nvar MATCHVS_ROOM_CREATE_REQ = 1203;\r\nvar MATCHVS_ROOM_CREATE_RSP = 1204;\r\nvar MATCHVS_ROOM_JOIN_REQ = 1201;\r\nvar MATCHVS_ROOM_JOIN_RSP = 1202;\r\nvar MATCHVS_ROOM_JOIN_OVER_REQ = 1213;\r\nvar MATCHVS_ROOM_JOIN_OVER_RSP = 1214;\r\nvar MATCHVS_ROOM_JOIN_OVER_NOTIFY = 1306;\r\nvar MATCHVS_ROOM_LEAVE_REQ = 1205;\r\nvar MATCHVS_ROOM_LEAVE_RSP = 1206;\r\nvar MATCHVS_ROOM_NOTICE_USER_JOIN = 1301;\r\nvar MATCHVS_ROOM_NOTICE_USER_LEAVE = 1302;\r\nvar MATCHVS_ROOM_CHECK_IN_REQ = 1401;\r\nvar MATCHVS_ROOM_CHECK_IN_RSP = 1402;\r\nvar MATCHVS_HEARTBEAT_HOTEL_REQ = 1403;\r\nvar MATCHVS_HEARTBEAT_HOTEL_RSP = 1404;\r\nvar MATCHVS_BROADCAST_HOTEL_REQ = 1405;\r\nvar MATCHVS_BROADCAST_HOTEL_RSP = 1406;\r\nvar MATCHVS_HOTEL_NOTIFY = 1408;\r\nvar MATCHVS_ROOM_CHECKIN_NOTIFY = 1410;\r\nvar CMD_GET_ROOM_LIST_REQ = 1207;\r\nvar CMD_GET_ROOM_LIST_RSP = 1208;\r\nvar CMD_GET_ROOM_DETAIL_REQ = 1209;\r\nvar CMD_GET_ROOM_DETAIL_RSP = 1210;\r\nvar CMD_GET_ROOM_LIST_EX_REQ = 1215;\r\nvar CMD_GET_ROOM_LIST_EX_RSP = 1216;\r\nvar CMD_SET_ROOM_PROPERTY_REQ = 1219;\r\nvar CMD_SET_ROOM_PROPERTY_RSP = 1220;\r\nvar CMD_SET_ROOM_PROPERTY_NOTIFY = 1307;\r\nvar CMD_DISCONNECT_REQ = 1107;\r\nvar CMD_DISCONNECT_RSP = 1108;\r\nvar CMD_KICK_PLAYER_REQ = 1303;\r\nvar CMD_KICK_PLAYER_RSP = 1304;\r\nvar CMD_KICK_PLAYER_NOTIFY = 1305;\r\nvar CMD_SUBSCRIBE_CMDID = 1411;\r\nvar CMD_SUBSCRIBE_ACK_CMDID = 1412;\r\nvar CMD_PUBLISH_CMDID = 1413;\r\nvar CMD_PUBLISH_ACKCMDID = 1414;\r\nvar CMD_PUBLISH_NOTIFYCMDID = 1416;\r\nvar CMD_SET_USE_TIMESTAMP_CMDID = 1417;\r\nvar CMD_SET_USE_TIMESTAMPACK_CMDID = 1418;\r\nvar CMD_SET_FRAME_SYNCRATE_CMDID = 1419;\r\nvar CMD_SET_FRAME_SYNCRATEACK_CMDID = 1420;\r\nvar CMD_SET_FRAME_SYNCRATENOTIFY_CMDID = 1422;\r\nvar CMD_FRAME_BROADCAST_CMDID = 1423;\r\nvar CMD_FRAME_BROADCASTACK_CMDID = 1424;\r\nvar CMD_FRAME_DATANOTIFY_CMDID = 1426;\r\nvar CMD_FRAME_SYNCNOTIFY_CMDID = 1428;\r\nvar CMD_ROOM_JOIN_OPEN_REQ = 1221;\r\nvar CMD_ROOM_JOIN_OPEN_RSP = 1222;\r\nvar CMD_ROOM_JOIN_OPEN_NOT = 1308;\r\n//================== CMD =======================\r\nvar FIXED_HEAD_SIZE = 16;\r\nvar VERSION = 2;\r\nfunction Packet() {\r\n    var header; //{MatchvsHeader}\r\n    var payload; //*\r\n    var buf; //{DataView}\r\n}\r\nfunction MatchvsHeader() {\r\n    this.size = 0;\r\n    this.seq = 0;\r\n    this.cmd = 0;\r\n    this.version = 0;\r\n    this.userID = 0;\r\n    this.toString = function () {\r\n        return \" this.size   \" + this.size\r\n            + \" this.seq    \" + this.seq\r\n            + \" this.cmd    \" + this.cmd\r\n            + \" this.version\" + this.version\r\n            + \" this.userID \" + this.userID;\r\n    };\r\n}\r\nfunction MatchvsProtoMap() {\r\n    return MatchvsProtoMap.prototype;\r\n}\r\nvar MsProtoMapDesc = new MatchvsProtoMap();\r\nMsProtoMapDesc[MATCHVS_USER_LOGIN_RSP] = proto.stream.LoginRsp;\r\nMsProtoMapDesc[MATCHVS_USER_LOGIN_RSP] = proto.stream.LoginRsp;\r\nMsProtoMapDesc[MATCHVS_ROOM_JOIN_RSP] = proto.stream.JoinRoomRsp;\r\nMsProtoMapDesc[MATCHVS_ROOM_CHECK_IN_RSP] = proto.stream.CheckInAck;\r\nMsProtoMapDesc[MATCHVS_ROOM_CREATE_RSP] = proto.stream.CreateRoomRsp;\r\nMsProtoMapDesc[MATCHVS_ROOM_CHECKIN_NOTIFY] = proto.stream.CheckInNotify;\r\nMsProtoMapDesc[MATCHVS_ROOM_JOIN_OVER_RSP] = proto.stream.JoinOverRsp;\r\nMsProtoMapDesc[MATCHVS_ROOM_LEAVE_RSP] = proto.stream.LeaveRoomRsp;\r\nMsProtoMapDesc[MATCHVS_ROOM_NOTICE_USER_JOIN] = proto.stream.NoticeJoin;\r\nMsProtoMapDesc[MATCHVS_HEARTBEAT_HOTEL_RSP] = proto.stream.HeartbeatAck;\r\nMsProtoMapDesc[MATCHVS_ROOM_NOTICE_USER_LEAVE] = proto.stream.NoticeLeave;\r\nMsProtoMapDesc[MATCHVS_BROADCAST_HOTEL_RSP] = proto.stream.BroadcastAck;\r\nMsProtoMapDesc[CMD_SUBSCRIBE_ACK_CMDID] = proto.stream.SubscribeAck;\r\nMsProtoMapDesc[MATCHVS_HOTEL_NOTIFY] = proto.stream.Notify;\r\nMsProtoMapDesc[CMD_PUBLISH_ACKCMDID] = proto.stream.PublishAck;\r\n//MsProtoMapDesc[MATCHVS_USER_GATEWAY_SPEED_RSP      ] = dataView;\r\nMsProtoMapDesc[CMD_PUBLISH_NOTIFYCMDID] = proto.stream.PublishNotify;\r\nMsProtoMapDesc[MATCHVS_USER_HEARTBEAT_RSP] = proto.stream.HeartbeatRsp;\r\nMsProtoMapDesc[CMD_GET_ROOM_LIST_RSP] = proto.stream.GetRoomListRsp;\r\nMsProtoMapDesc[MATCHVS_USER_LOGOUT_RSP] = proto.stream.LogoutRsp;\r\nMsProtoMapDesc[CMD_DISCONNECT_RSP] = proto.stream.DisconnectRsp;\r\nMsProtoMapDesc[CMD_KICK_PLAYER_NOTIFY] = proto.stream.KickPlayerNotify;\r\nMsProtoMapDesc[CMD_KICK_PLAYER_RSP] = proto.stream.KickPlayerRsp;\r\nMsProtoMapDesc[CMD_SET_FRAME_SYNCRATEACK_CMDID] = proto.stream.SetFrameSyncRateAck;\r\nMsProtoMapDesc[CMD_FRAME_BROADCASTACK_CMDID] = proto.stream.FrameBroadcastAck;\r\nMsProtoMapDesc[CMD_SET_FRAME_SYNCRATENOTIFY_CMDID] = proto.stream.SetFrameSyncRateNotify;\r\nMsProtoMapDesc[CMD_FRAME_DATANOTIFY_CMDID] = proto.stream.FrameDataNotify;\r\nMsProtoMapDesc[MATCHVS_NETWORK_STATE_NOTIFY] = proto.stream.NetworkStateNotify;\r\nMsProtoMapDesc[CMD_FRAME_SYNCNOTIFY_CMDID] = proto.stream.FrameSyncNotify;\r\nMsProtoMapDesc[CMD_GET_ROOM_LIST_EX_RSP] = proto.stream.GetRoomListExRsp;\r\nMsProtoMapDesc[MATCHVS_ROOM_JOIN_OVER_NOTIFY] = proto.stream.JoinOverNotify;\r\nMsProtoMapDesc[CMD_GET_ROOM_DETAIL_RSP] = proto.stream.GetRoomDetailRsp;\r\nMsProtoMapDesc[CMD_SET_ROOM_PROPERTY_RSP] = proto.stream.SetRoomPropertyRsp;\r\nMsProtoMapDesc[CMD_ROOM_JOIN_OPEN_RSP] = proto.stream.JoinOpenRsp;\r\nMsProtoMapDesc[CMD_SET_ROOM_PROPERTY_NOTIFY] = proto.stream.NoticeRoomProperty;\r\nMsProtoMapDesc[CMD_ROOM_JOIN_OPEN_NOT] = proto.stream.JoinOpenNotify;\r\n/**\r\n * Encoder && Decoder\r\n * @constructor\r\n */\r\nfunction MatchvsProtocol() {\r\n    this.seq = 1;\r\n    var mUserID = 0;\r\n    this.msProtoMap = new MatchvsProtoMap();\r\n    /**\r\n     *\r\n     * @param dataArray uint array\r\n     * @param cmd int\r\n     * @returns {DataView}\r\n     */\r\n    this.fillHeader = function (dataArray, cmd) {\r\n        var buffer = new ArrayBuffer(FIXED_HEAD_SIZE + dataArray.length);\r\n        var dataView = new DataView(buffer);\r\n        dataView.setInt32(0, buffer.byteLength, true); //size; +4\r\n        dataView.setInt32(4, this.seq++, true); //seq +4\r\n        dataView.setInt16(8, cmd, true); //cmd; +2\r\n        dataView.setInt16(10, VERSION, true); //version +2\r\n        dataView.setInt32(12, Number(mUserID), true); //userID +4\r\n        var length = dataArray.length;\r\n        //append unsigned int Array to end\r\n        for (var i = 0; i < length; i++) {\r\n            dataView.setUint8(i + FIXED_HEAD_SIZE, dataArray[i]);\r\n        }\r\n        return dataView;\r\n    };\r\n    /**\r\n     *\r\n     * @param msg {DataView}\r\n     * @returns {MatchvsHeader}\r\n     */\r\n    this.parseHeader = function (msg) {\r\n        var dataView = msg;\r\n        var head = new MatchvsHeader();\r\n        head.size = dataView.getInt32(0, true); //size; +4\r\n        head.seq = dataView.getInt32(4, true); //seq +4\r\n        head.cmd = dataView.getInt16(8, true); //cmd; +2\r\n        head.version = dataView.getInt16(10, true); //version +2\r\n        head.userID = dataView.getInt32(12, true); //userID +4\r\n        return head;\r\n    };\r\n    /**\r\n     *\r\n     * @param msg {DataView}\r\n     * @returns {*}\r\n     */\r\n    this.handleMsg = function (msg) {\r\n        var dataView = msg;\r\n        var header = this.parseHeader(msg);\r\n        var ext = new Uint8Array(header.size - FIXED_HEAD_SIZE);\r\n        for (var i = 0; i < ext.length; i++) {\r\n            ext[i] = msg.getUint8(FIXED_HEAD_SIZE + i);\r\n        }\r\n        // var protoMap = this.msProtoMap.getValue(header.cmd);\r\n        var protoMap = MsProtoMapDesc[header.cmd];\r\n        var packet = new Packet();\r\n        packet.header = header;\r\n        packet.buf = dataView;\r\n        if (protoMap) {\r\n            packet.payload = protoMap.deserializeBinary && protoMap.deserializeBinary(msg.buffer.slice(FIXED_HEAD_SIZE, msg.buffer.byteLength));\r\n        }\r\n        else {\r\n            MatchvsLog.logI(\"[WARN]unknown msg,Head:\" + header);\r\n        }\r\n        return packet;\r\n    };\r\n    this.init = function () {\r\n    };\r\n    /**\r\n     * 登录\r\n     * @userID {uint32} value 用户ID\r\n     * @userToken {uint64} value 用户的token值\r\n     * @gameID {uint32} value 游戏ID\r\n     * @gameVersion {uint16} value  游戏版本\r\n     * @app_key { !Array.<string> } app_key 游戏key,通过官网注册获得\r\n     * @app_secret { !Array.<string>  app_secret 游戏secret，通过官网注册获得\r\n     * @deviceID { !Array.<string> } deviceID 设备ID\r\n     * @gateway_id gateway_id\r\n     * @returns {DataView}\r\n     */\r\n    this.login = function (userID, userToken, gameID, gameVersion, app_key, app_secret, deviceID, gateway_id) {\r\n        var toMd5 = format(\"%s&UserID=%s&GameID=%s&VersionSdk=%d&%s\", app_key, userID, gameID, VERSION, app_secret);\r\n        mUserID = userID;\r\n        var md5 = hex_md5(toMd5);\r\n        MatchvsLog.logI(\"[Sign]\" + toMd5 + \"->\" + md5);\r\n        var message = new proto.stream.LoginReq();\r\n        message.setGameid(Number(gameID));\r\n        message.setAppkey(app_key);\r\n        message.setDeviceid(deviceID);\r\n        message.setSign(md5);\r\n        var dataArray = message.serializeBinary();\r\n        //append binary head and proto buffer;\r\n        MatchvsLog.logI(\"[REQ]login...userID:\" + userID);\r\n        return this.fillHeader(dataArray, MATCHVS_USER_LOGIN_REQ);\r\n    };\r\n    /**\r\n     * 用户网关速度暂时不使用\r\n     * @userID {uint32} value 用户ID\r\n     * @gameID {uint32} value 游戏ID\r\n     * @userToken {uint64} value 用户的token值\r\n     * @versionSDK {uint16} value sdk版本号\r\n     * @gameVersion {uint16} value  游戏版本\r\n     * @returns {DataView}\r\n     */\r\n    this.speed = function (userID, gameID, userToken, versionSDK, gameVersion) {\r\n        var buffer = new ArrayBuffer(48 + 1);\r\n        var dataView = new DataView(buffer);\r\n        var _user = Number(userID);\r\n        var _gameID = Number(gameID);\r\n        dataView.setUint32(0, _user, true); //userID\r\n        dataView.setUint32(4, _gameID, true); //gameID\r\n        for (var i = 0; i < 32; i++) {\r\n            dataView.setUint8(8 + i, userToken.charCodeAt(i)); //token\r\n        }\r\n        dataView.setUint16(8 + 32, versionSDK, true); //version sdk\r\n        dataView.setUint16(8 + 32 + 2, gameVersion, true); //game version\r\n        dataView.setUint32(8 + 32 + 2 + 2, 1, true); //echo size\r\n        dataView.setUint8(8 + 32 + 2 + 2 + 4, 0x01); //echo\r\n        var array = new Uint8Array(dataView.byteLength);\r\n        for (var j = 0; j < dataView.byteLength; j++) {\r\n            array[j] = dataView.getUint8(j);\r\n        }\r\n        //append binary head and proto buffer;\r\n        return this.fillHeader(array, MATCHVS_USER_GATEWAY_SPEED_REQ);\r\n    };\r\n    this.roomCreate = function (maxUser, flag, gameID, pRoomInfo, pPlayInfo) {\r\n        var message = new proto.stream.CreateRoom();\r\n        message.setGameid(Number(gameID));\r\n        var pi = new proto.stream.PlayerInfo();\r\n        pi.setUserid(pPlayInfo.userID);\r\n        pi.setUserprofile(stringToUtf8ByteArray(pPlayInfo.userProfile));\r\n        message.setPlayerinfo(pi);\r\n        var roomInfo = new proto.stream.RoomInfo();\r\n        roomInfo.setMaxplayer(Number(pRoomInfo.maxPlayer));\r\n        roomInfo.setCanwatch(pRoomInfo.canWatch);\r\n        roomInfo.setMode(pRoomInfo.mode);\r\n        roomInfo.setVisibility(pRoomInfo.visibility);\r\n        roomInfo.setRoomname(pRoomInfo.roomName);\r\n        roomInfo.setRoomproperty(stringToUtf8ByteArray(pRoomInfo.roomProperty));\r\n        message.setRoominfo(roomInfo);\r\n        var bytes = message.serializeBinary();\r\n        return this.fillHeader(bytes, MATCHVS_ROOM_CREATE_REQ);\r\n    };\r\n    this.joinRandomRoom = function (roomJoin) {\r\n        var message = new proto.stream.JoinRoomReq();\r\n        message.setGameid(Number(roomJoin.gameID));\r\n        message.setJointype(proto.stream.JoinRoomType.JOINRANDOMROOM);\r\n        message.setCpproto(stringToUtf8ByteArray(roomJoin.userProfile));\r\n        var playInfo = new proto.stream.PlayerInfo();\r\n        playInfo.setUserid(roomJoin.userID);\r\n        playInfo.setUserprofile(stringToUtf8ByteArray(roomJoin.userProfile));\r\n        message.setPlayerinfo(playInfo);\r\n        var roomInfo = new proto.stream.RoomInfo();\r\n        roomInfo.setMaxplayer(roomJoin.maxPlayer);\r\n        roomInfo.setCanwatch(roomJoin.canWatch);\r\n        roomInfo.setMode(roomJoin.mode);\r\n        roomInfo.setVisibility(0);\r\n        message.setRoominfo(roomInfo);\r\n        var bytes = message.serializeBinary();\r\n        return this.fillHeader(bytes, MATCHVS_ROOM_JOIN_REQ);\r\n    };\r\n    /**\r\n     * 加入指定房间roomID\r\n     * @param roomJoin\r\n     * @returns {DataView}\r\n     */\r\n    this.joinRoomSpecial = function (roomJoin) {\r\n        var message = new proto.stream.JoinRoomReq();\r\n        message.setGameid(Number(roomJoin.gameID));\r\n        message.setJointype(roomJoin.joinType);\r\n        message.setCpproto(stringToUtf8ByteArray(roomJoin.userProfile));\r\n        var playInfo = new proto.stream.PlayerInfo();\r\n        playInfo.setUserid(roomJoin.userID);\r\n        playInfo.setUserprofile(stringToUtf8ByteArray(roomJoin.userProfile));\r\n        message.setPlayerinfo(playInfo);\r\n        var roomInfo = new proto.stream.RoomInfo();\r\n        roomInfo.setMaxplayer(roomJoin.maxPlayer);\r\n        roomInfo.setCanwatch(roomJoin.canWatch);\r\n        roomInfo.setMode(roomJoin.mode);\r\n        roomInfo.setVisibility(0);\r\n        roomInfo.setRoomid(roomJoin.roomID);\r\n        message.setRoominfo(roomInfo);\r\n        var bytes = message.serializeBinary();\r\n        return this.fillHeader(bytes, MATCHVS_ROOM_JOIN_REQ);\r\n    };\r\n    /**\r\n     * 属性加入房间\r\n     * @param roomJoin {MsRoomJoin}\r\n     * @returns {DataView}\r\n     */\r\n    this.joinRoomWithProperties = function (roomJoin) {\r\n        var message = new proto.stream.JoinRoomReq();\r\n        var kvtags = [];\r\n        var temp = roomJoin.tags;\r\n        var num = 0;\r\n        for (var k in temp) {\r\n            var tag = new proto.stream.keyValue();\r\n            tag.setKey(k);\r\n            tag.setValue(temp[k]);\r\n            kvtags[num++] = tag;\r\n        }\r\n        message.setTagsList(kvtags);\r\n        message.setGameid(roomJoin.gameID);\r\n        message.setJointype(proto.stream.JoinRoomType.JOINROOMWITHPROPERTY);\r\n        message.setCpproto(stringToUtf8ByteArray(roomJoin.userProfile));\r\n        var playInfo = new proto.stream.PlayerInfo();\r\n        playInfo.setUserid(roomJoin.userID);\r\n        playInfo.setUserprofile(stringToUtf8ByteArray(roomJoin.userProfile));\r\n        message.setPlayerinfo(playInfo);\r\n        var roomInfo = new proto.stream.RoomInfo();\r\n        roomInfo.setMaxplayer(roomJoin.maxPlayer);\r\n        roomInfo.setCanwatch(roomJoin.canWatch);\r\n        roomInfo.setMode(roomJoin.mode);\r\n        roomInfo.setVisibility(0);\r\n        roomInfo.setRoomid(roomJoin.roomID);\r\n        message.setRoominfo(roomInfo);\r\n        var bytes = message.serializeBinary();\r\n        return this.fillHeader(bytes, MATCHVS_ROOM_JOIN_REQ);\r\n    };\r\n    this.roomCheckIn = function (bookInfo, roomInfo, userID, gameID) {\r\n        var pkg = new proto.stream.CheckIn();\r\n        pkg.setGameid(Number(gameID));\r\n        pkg.setRoomid(roomInfo.getRoomid());\r\n        pkg.setUserid(Number(userID));\r\n        pkg.setBookid(bookInfo.getBookid());\r\n        pkg.setKey(bookInfo.getBookkey());\r\n        var bytes = pkg.serializeBinary();\r\n        return this.fillHeader(bytes, MATCHVS_ROOM_CHECK_IN_REQ);\r\n    };\r\n    this.getRoomList = function (gameID, filter) {\r\n        var pkg = new proto.stream.GetRoomList();\r\n        var roomFilter = new proto.stream.RoomFilter();\r\n        roomFilter.setCanwatch(filter.canWatch);\r\n        roomFilter.setMaxplayer(filter.maxPlayer);\r\n        roomFilter.setMode(Number(filter.mode));\r\n        roomFilter.setRoomproperty(stringToUtf8ByteArray(filter.roomProperty));\r\n        pkg.setGameid(gameID);\r\n        pkg.setRoomfilter(roomFilter);\r\n        var bytes = pkg.serializeBinary();\r\n        return this.fillHeader(bytes, CMD_GET_ROOM_LIST_REQ);\r\n    };\r\n    /**\r\n     * 获取房间信息扩展接口\r\n     * @param gameID {number}\r\n     * @param filter {MsRoomFilterEx}\r\n     */\r\n    this.getRoomListEx = function (gameID, filter) {\r\n        var pkg = new proto.stream.GetRoomListExReq();\r\n        var roomFilter = new proto.stream.RoomFilter();\r\n        roomFilter.setMaxplayer(filter.maxPlayer);\r\n        roomFilter.setMode(Number(filter.mode));\r\n        roomFilter.setFull(filter.full);\r\n        roomFilter.setCanwatch(filter.canWatch);\r\n        roomFilter.setRoomproperty(stringToUtf8ByteArray(filter.roomProperty));\r\n        roomFilter.setState(filter.state);\r\n        pkg.setGameid(gameID);\r\n        pkg.setRoomfilter(roomFilter);\r\n        pkg.setSort(filter.sort);\r\n        pkg.setOrder(filter.order);\r\n        pkg.setPageno(filter.pageNo);\r\n        pkg.setPagesize(filter.pageSize);\r\n        var bytes = pkg.serializeBinary();\r\n        return this.fillHeader(bytes, CMD_GET_ROOM_LIST_EX_REQ);\r\n    };\r\n    /**\r\n     *\r\n     * @param gameID {number}\r\n     * @param roomID {string}\r\n     */\r\n    this.getRoomDetail = function (gameID, roomID) {\r\n        var pkg = new proto.stream.GetRoomDetailReq();\r\n        pkg.setGameid(gameID);\r\n        pkg.setRoomid(roomID);\r\n        var bytes = pkg.serializeBinary();\r\n        return this.fillHeader(bytes, CMD_GET_ROOM_DETAIL_REQ);\r\n    };\r\n    this.joinOver = function (gameID, roomID, cpproto, userID) {\r\n        var pkg = new proto.stream.JoinOverReq();\r\n        pkg.setGameid(gameID);\r\n        pkg.setRoomid(roomID);\r\n        pkg.setCpproto(cpproto);\r\n        pkg.setUserid(userID);\r\n        var bytes = pkg.serializeBinary();\r\n        return this.fillHeader(bytes, MATCHVS_ROOM_JOIN_OVER_REQ);\r\n    };\r\n    this.leaveRoom = function (gameID, userID, roomID, cpproto) {\r\n        var pkg = new proto.stream.LeaveRoomReq();\r\n        pkg.setGameid(gameID);\r\n        pkg.setUserid(userID);\r\n        pkg.setRoomid(roomID);\r\n        pkg.setCpproto(stringToUtf8ByteArray(cpproto));\r\n        var bytes = pkg.serializeBinary();\r\n        return this.fillHeader(bytes, MATCHVS_ROOM_LEAVE_REQ);\r\n    };\r\n}\r\n/**\r\n * message PlayerInfo\r\n *{\r\n *    uint32 userID = 1;\r\n *    bytes userProfile = 2;\r\n *}\r\n * @param userID uint32\r\n * @param userProfile bytes\r\n * @constructor\r\n */\r\nfunction PlayerInfo(userID, userProfile) {\r\n    this.userID = userID;\r\n    this.userProfile = userProfile;\r\n}\r\n/**\r\n * message RoomInfo\r\n *{\r\n *    uint64 roomID = 1;\r\n *    string roomName = 2;\r\n *    uint32 maxPlayer = 3;\r\n *    int32 mode = 4;\r\n *    int32 canWatch = 5;\r\n *    int32 visibility = 6;\r\n *    bytes roomProperty = 7;\r\n *    uint32 owner = 8;\r\n *}\r\n * @param roomID\r\n * @param roomName\r\n * @param maxPlayer\r\n * @param mode\r\n * @param canWatch\r\n * @param visibility\r\n * @param roomProperty\r\n * @param owner\r\n * @constructor\r\n */\r\nfunction RoomInfo(roomID, roomName, maxPlayer, mode, canWatch, visibility, roomProperty, owner) {\r\n    this.roomID = roomID;\r\n    this.roomName = roomName;\r\n    this.maxPlayer = maxPlayer;\r\n    this.mode = mode;\r\n    this.canWatch = canWatch;\r\n    this.visibility = visibility;\r\n    this.roomProperty = roomProperty;\r\n    this.owner = owner;\r\n}\r\n/**\r\n * 心跳\r\n * @gameID {uint32} value 游戏ID\r\n * @roomID {string} value 房间ID\r\n * @returns {DataView}\r\n */\r\nMatchvsProtocol.prototype.heartBeat = function (gameID, roomID) {\r\n    var pkg = new proto.stream.HeartbeatReq();\r\n    pkg.setGameid(gameID);\r\n    pkg.setRoomid(roomID);\r\n    var dataArray = pkg.serializeBinary();\r\n    return this.fillHeader(dataArray, MATCHVS_USER_HEARTBEAT_REQ);\r\n};\r\n/**\r\n * 注销账号\r\n * @param  cpProto {string}\r\n * @returns {DataView}\r\n */\r\nMatchvsProtocol.prototype.logout = function (cpProto) {\r\n    var buf = stringToUtf8ByteArray(cpProto);\r\n    return this.fillHeader(buf, MATCHVS_USER_LOGOUT_REQ);\r\n};\r\n/**\r\n * file describe : this file include some Submodule control of MatchvsProtocol in matchvsprotocol.js\r\n */\r\n/**\r\n * 发送数据\r\n * @destType   { number } value : number 0-包含destUids  1-排除destUids\r\n * @destUids   {!Array<number>} value : 玩家ID集合 [1,2,3,4,5]\r\n * @roomID     { number } value : 房间号\r\n * @msgType    { number } value : 0-客户端+not CPS  1-not客户端+ CPS   2-客户端 + CPS\r\n * @data       { string } value : cp 数据\r\n */\r\nMatchvsProtocol.prototype.broadCast = function (roomID, destUids, destType, msgType, data) {\r\n    var broadcast = new proto.stream.Broadcast();\r\n    broadcast.setRoomid(roomID);\r\n    broadcast.setDstuidsList(destUids);\r\n    broadcast.setCpproto(data); //cp 数据\r\n    // 低8位 由 0-3  | destType |msgType 组合 0000|00|00\r\n    var priority = 2;\r\n    var flag = ((priority & 0x0F) << 4) + ((destType & 0x03) << 2) + (msgType & 0x03);\r\n    broadcast.setFlag(flag);\r\n    var bytes = broadcast.serializeBinary();\r\n    return this.fillHeader(bytes, MATCHVS_BROADCAST_HOTEL_REQ);\r\n};\r\n/**\r\n * 玩家订阅或取消订阅一批groups，（支持批量和同时订阅和取消），支持同事订阅和取消订阅，\r\n * 是因为游戏角色从一个区域跨越到另一个区域时需要这种原子切换\r\n * @gameID {uint32} value 游戏ID\r\n * @roomID {uint64} value 房间号\r\n * @confirms {!Array.<string>} value  要订阅的分组集合\r\n * @cancels {!Array.<string>} value  要取消的分组集合\r\n */\r\nMatchvsProtocol.prototype.subscribeEventGroup = function (gameID, roomID, confirms, cancels) {\r\n    var subscribe = new proto.stream.Subscribe();\r\n    subscribe.setRoomid(roomID);\r\n    subscribe.setGameid(gameID);\r\n    subscribe.setCancelsList(cancels);\r\n    subscribe.setConfirmsList(confirms);\r\n    var bytes = subscribe.serializeBinary();\r\n    return this.fillHeader(bytes, CMD_SUBSCRIBE_CMDID);\r\n};\r\n/**\r\n *\r\n * @userID { number } value 用户ID\r\n * @roomID { number } value 房间号\r\n * @priority { number } value\r\n * @groups { !Array.<string> } value\r\n * @cpproto { !Array.<string> } value\r\n */\r\nMatchvsProtocol.prototype.sendEventGroup = function (userID, roomID, priority, groups, cpproto) {\r\n    var sendevnt = new proto.stream.Publish();\r\n    sendevnt.setRoomid(roomID);\r\n    sendevnt.setPriority(priority);\r\n    sendevnt.setCpproto(stringToUtf8ByteArray(cpproto));\r\n    sendevnt.setGroupsList(groups);\r\n    var bytes = sendevnt.serializeBinary();\r\n    return this.fillHeader(bytes, CMD_PUBLISH_CMDID);\r\n};\r\n/**\r\n *\r\n * @userID { number } value 游戏ID\r\n * @gameID { number } value 房间号\r\n * @roomID { number } value  要订阅的分组集合\r\n * @userID { !Array.<string> } value\r\n */\r\nMatchvsProtocol.prototype.hotelHeartBeat = function (gameID, roomID, userID) {\r\n    var heartbeat = new proto.stream.Heartbeat();\r\n    heartbeat.setGameid(gameID);\r\n    heartbeat.setRoomid(roomID);\r\n    heartbeat.setUserid(userID);\r\n    var bytes = heartbeat.serializeBinary();\r\n    return this.fillHeader(bytes, MATCHVS_HEARTBEAT_HOTEL_REQ);\r\n};\r\nMatchvsProtocol.prototype.disConnect = function (userID, gameID, roomId) {\r\n    var paker = new proto.stream.DisconnectReq;\r\n    paker.setGameid(gameID);\r\n    paker.setRoomid(roomId);\r\n    paker.setUserid(userID);\r\n    var bytes = paker.serializeBinary();\r\n    return this.fillHeader(bytes, CMD_DISCONNECT_REQ);\r\n    //TODO 扩展接口\r\n};\r\n/**\r\n * 剔除用户\r\n * @param userid {number} 发起踢人操作者\r\n * @param srcUserId {number} 被踢除者\r\n * @param roomid {string} 房间号\r\n * @param data {string} 附带的消息\r\n */\r\nMatchvsProtocol.prototype.kickPlayer = function (userid, srcUserId, roomid, data) {\r\n    var kick = new proto.stream.KickPlayer;\r\n    kick.setRoomid(roomid);\r\n    kick.setSrcuserid(srcUserId);\r\n    kick.setUserid(userid);\r\n    kick.setCpproto(stringToUtf8ByteArray(data));\r\n    var bytes = kick.serializeBinary();\r\n    return this.fillHeader(bytes, CMD_KICK_PLAYER_REQ);\r\n};\r\n/**\r\n *\r\n * @param frameRate {number} 同步帧速率\r\n * @param roomID {String} 房间ID\r\n * @param gameID {number}\r\n * @param priority {number} default is 0\r\n * @param frameidx {number} must > 0\r\n * @returns {DataView}\r\n */\r\nMatchvsProtocol.prototype.setFrameSync = function (frameRate, roomID, gameID, priority, frameidx) {\r\n    var reqEx = new proto.stream.SetFrameSyncRate();\r\n    reqEx.setGameid(gameID);\r\n    reqEx.setRoomid(roomID);\r\n    reqEx.setPriority(priority);\r\n    reqEx.setFramerate(frameRate);\r\n    reqEx.setFrameidx(frameidx);\r\n    var bytes = reqEx.serializeBinary();\r\n    return this.fillHeader(bytes, CMD_SET_FRAME_SYNCRATE_CMDID);\r\n};\r\n/**\r\n *\r\n * @param roomID {String} 房间ID\r\n * @param priority {number} default is 0\r\n * @param cpProto {String} Payload\r\n * @returns {DataView}\r\n */\r\nMatchvsProtocol.prototype.sendFrameEvent = function (roomID, priority, cpProto) {\r\n    var reqEx = new proto.stream.FrameBroadcast();\r\n    reqEx.setRoomid(roomID);\r\n    reqEx.setPriority(priority);\r\n    reqEx.setCpproto(stringToUtf8ByteArray(cpProto));\r\n    var bytes = reqEx.serializeBinary();\r\n    return this.fillHeader(bytes, CMD_FRAME_BROADCAST_CMDID);\r\n};\r\nMatchvsProtocol.prototype.setRoomProperty = function (gameID, userID, roomID, roomProperty) {\r\n    var reqEx = new proto.stream.SetRoomPropertyReq();\r\n    reqEx.setGameid(gameID);\r\n    reqEx.setRoomid(roomID);\r\n    reqEx.setUserid(userID);\r\n    reqEx.setRoomproperty(stringToUtf8ByteArray(roomProperty));\r\n    var bytes = reqEx.serializeBinary();\r\n    return this.fillHeader(bytes, CMD_SET_ROOM_PROPERTY_REQ);\r\n};\r\nMatchvsProtocol.prototype.joinOpen = function (gameID, userID, roomID, cpProto) {\r\n    var reqEx = new proto.stream.JoinOpenReq();\r\n    reqEx.setRoomid(roomID);\r\n    reqEx.setGameid(gameID);\r\n    reqEx.setUserid(userID);\r\n    reqEx.setCpproto(stringToUtf8ByteArray(cpProto));\r\n    var bytes = reqEx.serializeBinary();\r\n    return this.fillHeader(bytes, CMD_ROOM_JOIN_OPEN_REQ);\r\n}; /* ================ EngineWork.js ================= */\r\n/**\r\n * 接口数据解析对象映射类型，不同指令使用不同对象解析数据，key为指令，value 为指令执行者\r\n * @constructor\r\n */\r\nfunction EngineNetworkMap() {\r\n    this[MATCHVS_USER_LOGIN_RSP] = new LoginRspWork();\r\n    this[MATCHVS_ROOM_JOIN_RSP] = new JoinRoomRspWork();\r\n    this[MATCHVS_ROOM_NOTICE_USER_JOIN] = new JoinRoomNotifyWork();\r\n    this[MATCHVS_ROOM_CHECK_IN_RSP] = new CheckInRoomRspWork();\r\n    this[MATCHVS_ROOM_CREATE_RSP] = new CreateRoomRspWork();\r\n    this[MATCHVS_ROOM_CHECKIN_NOTIFY] = new CheckInRoomNtfyWork();\r\n    this[MATCHVS_ROOM_JOIN_OVER_RSP] = new JoinOverRspWork();\r\n    this[MATCHVS_ROOM_JOIN_OVER_NOTIFY] = new JoinOverNotifyWork();\r\n    this[MATCHVS_ROOM_LEAVE_RSP] = new LeaveRoomRspWork();\r\n    this[MATCHVS_ROOM_NOTICE_USER_LEAVE] = new LeaveRoomNotifyWork();\r\n    this[MATCHVS_USER_HEARTBEAT_RSP] = new HeartBeatGatewayRspWork();\r\n    this[MATCHVS_HEARTBEAT_HOTEL_RSP] = new HeartBeatHotelRspWork();\r\n    this[MATCHVS_BROADCAST_HOTEL_RSP] = new SendEventRspWork();\r\n    this[MATCHVS_HOTEL_NOTIFY] = new SendEventNotifyWork();\r\n    this[CMD_SUBSCRIBE_ACK_CMDID] = new SubscribeEventGroupRspWork();\r\n    this[CMD_PUBLISH_ACKCMDID] = new SendEventGroupRspWork();\r\n    this[CMD_PUBLISH_NOTIFYCMDID] = new SendEventGroupNotifyWork();\r\n    this[MATCHVS_USER_GATEWAY_SPEED_RSP] = new GatewaySpeedRspWork();\r\n    this[CMD_GET_ROOM_LIST_RSP] = new GetRoomListRspWork();\r\n    this[MATCHVS_USER_LOGOUT_RSP] = new LoginOutRspWork();\r\n    this[CMD_DISCONNECT_RSP] = new DisConnectRspWork();\r\n    this[CMD_KICK_PLAYER_NOTIFY] = new KickPlayerNotifyWork();\r\n    this[CMD_KICK_PLAYER_RSP] = new KickPlayerRspWork();\r\n    this[CMD_SET_FRAME_SYNCRATEACK_CMDID] = new SetFrameSyncRspWork();\r\n    this[CMD_FRAME_BROADCASTACK_CMDID] = new SendFrameEventRspWork();\r\n    this[CMD_SET_FRAME_SYNCRATENOTIFY_CMDID] = new SetFrameSyncNotifyWork();\r\n    this[CMD_FRAME_DATANOTIFY_CMDID] = new FrameDataNotifyWork();\r\n    this[CMD_FRAME_SYNCNOTIFY_CMDID] = new FrameSyncNotifyWork();\r\n    this[MATCHVS_NETWORK_STATE_NOTIFY] = new NetworkStateNotifyWork();\r\n    this[CMD_GET_ROOM_LIST_EX_RSP] = new GetRoomListRspWork_Ex();\r\n    this[CMD_GET_ROOM_DETAIL_RSP] = new GetRoomDetailRspWork();\r\n    this[CMD_SET_ROOM_PROPERTY_RSP] = new SetRoomPropertyRspWokr();\r\n    this[CMD_SET_ROOM_PROPERTY_NOTIFY] = new SetRoomPropertyNotifyWork();\r\n    this[CMD_ROOM_JOIN_OPEN_RSP] = new JoinOpenRspWork();\r\n    this[CMD_ROOM_JOIN_OPEN_NOT] = new JoinOpenNotifyWork();\r\n}\r\n/**\r\n * 错误处理函数，收到回调错误码，需要使用这个对象check 错误码对应的错误消息。\r\n * 对所有错误码统一管理\r\n * @param ErrCall\r\n * @param code\r\n * @param message\r\n * @constructor\r\n */\r\nvar ErrorRspWork = function (ErrCall, code, message) {\r\n    var tempmsg = \"\";\r\n    if (MvsErrMsg[code] !== undefined) {\r\n        tempmsg = message + \". \" + MvsErrMsg[code];\r\n    }\r\n    else {\r\n        tempmsg = message;\r\n    }\r\n    MatchvsLog.logI(\"[error code:\" + code + \"] \" + tempmsg);\r\n    ErrCall && ErrCall(code, tempmsg);\r\n};\r\n/**\r\n * 接口请求回调 body 数据解析，再次封装为外部对接接口协议数据格式。\r\n * @param engine\r\n * @constructor\r\n */\r\nvar NetWorkCallBackImp = function (engine) {\r\n    MSExtend(this, MatchvsNetWork);\r\n    this.engineWorkMap = new EngineNetworkMap();\r\n    this.gtwTimer = 0;\r\n    this.mHotelTimer = 0;\r\n    this.frameCache = [];\r\n    this.hbTimers = []; //所有心跳定时器集合\r\n    /**\r\n     * Turn off all heartbeat timers\r\n     */\r\n    this.clearAllBeatTimer = function () {\r\n        while (this.hbTimers.length > 0) {\r\n            // if(\"undefined\" !== typeof (BK)){\r\n            //     BK.Director.ticker.removeInterval(this.hbTimers.pop());\r\n            // }else{\r\n            //     clearInterval(this.hbTimers.pop());\r\n            // }\r\n            MVS.ticker.clearInterval(this.hbTimers.pop());\r\n        }\r\n    };\r\n    this.onMsg = function (dataView) {\r\n        var packet = engine.mProtocol.handleMsg(dataView);\r\n        var roomInfo = new proto.stream.RoomInfo();\r\n        var event = {\r\n            hotelTimer: this.mHotelTimer,\r\n            payload: packet.payload,\r\n            seq: packet.header.seq,\r\n            roomInfo: roomInfo,\r\n            frameCache: this.frameCache\r\n        };\r\n        var dohandle = this.engineWorkMap[packet.header.cmd];\r\n        if (dohandle) {\r\n            dohandle.doSubHandle(event, engine);\r\n        }\r\n        else {\r\n            MatchvsLog.logE(\"no the cmd: \", packet.header.cmd);\r\n        }\r\n    };\r\n    this.onErr = function (errCode, errMsg) {\r\n        ErrorRspWork(engine.mRsp.errorResponse, errCode, errMsg);\r\n    };\r\n    /**\r\n     * 建立网络连接回调\r\n     * @param host\r\n     */\r\n    this.onConnect = function (host) {\r\n        if (HttpConf.HOST_HOTEL_ADDR !== \"\" && host.indexOf(HttpConf.HOST_HOTEL_ADDR) >= 0) {\r\n            this.mHotelTimer = MVS.ticker.setInterval(engine.hotelHeartBeat, HEART_BEAT_INTERVAL);\r\n            this.hbTimers.push(this.mHotelTimer);\r\n        }\r\n        else if (HttpConf.HOST_GATWAY_ADDR !== \"\" && host.indexOf(HttpConf.HOST_GATWAY_ADDR) >= 0) {\r\n            this.gtwTimer = MVS.ticker.setInterval(engine.heartBeat, HEART_BEAT_INTERVAL);\r\n            this.hbTimers.push(this.gtwTimer);\r\n        }\r\n        engine.mRsp.onConnect && engine.mRsp.onConnect(host);\r\n    };\r\n    /**\r\n     * 断开网络回调\r\n     * @param host\r\n     * @param event\r\n     */\r\n    this.onDisConnect = function (host, event) {\r\n        engine.mRsp.onDisConnect && engine.mRsp.onDisConnect(host);\r\n        if (host.endsWith(HttpConf.HOST_GATWAY_ADDR)) {\r\n            engine.mEngineState = ENGE_STATE.HAVE_INIT;\r\n            if (event && event.code && (event.code === MvsCode.CODE_1000 || event.code === MvsCode.CODE_1005)) {\r\n                MatchvsLog.logI(\"gateway close is friend\");\r\n            }\r\n            else {\r\n                this.clearAllBeatTimer();\r\n                engine.mHotelNetWork && engine.mHotelNetWork.close();\r\n                ErrorRspWork(engine.mRsp.errorResponse, MvsCode.NetWorkErr, \"(\" + event.code + \") \" + \"gateway network error\");\r\n            }\r\n            MVS.ticker.clearInterval(this.gtwTimer);\r\n        }\r\n        else if (host.endsWith(HttpConf.HOST_HOTEL_ADDR)) {\r\n            MatchvsLog.logI(\"hotel disconnect\");\r\n            if (event && event.code && (event.code === MvsCode.CODE_1000 || event.code === MvsCode.CODE_1005)) {\r\n                MatchvsLog.logI(\"hotel close is friend\");\r\n            }\r\n            else {\r\n                engine.mEngineState = ENGE_STATE.HAVE_INIT;\r\n                this.clearAllBeatTimer();\r\n                engine.mNetWork && engine.mNetWork.close();\r\n                ErrorRspWork(engine.mRsp.errorResponse, MvsCode.NetWorkErr, \"(\" + event.code + \") \" + \"hotel network error\");\r\n            }\r\n            //如果房间服务器断开了(包括异常断开情况)就把定时器关掉\r\n            MVS.ticker.clearInterval(this.mHotelTimer);\r\n            //退出房间状态取消,这里只能一个个状态取消，不能使用 = 号，不然出现先断开gateway 再断开 hotel状态码就不对\r\n            engine.mEngineState &= ~ENGE_STATE.JOIN_ROOMING;\r\n            engine.mEngineState &= ~ENGE_STATE.LEAVE_ROOMING;\r\n            engine.mEngineState &= ~ENGE_STATE.IN_ROOM;\r\n            engine.mEngineState &= ~ENGE_STATE.CREATEROOM;\r\n        }\r\n        MatchvsLog.logI(\"EngineState\", engine.mEngineState);\r\n    };\r\n};\r\nfunction LoginRspWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        var status = event.payload.getStatus();\r\n        if (status === 200) {\r\n            engine.mEngineState |= ENGE_STATE.HAVE_LOGIN;\r\n        }\r\n        else {\r\n            engine.mEngineState &= ~ENGE_STATE.LOGINING;\r\n            engine.mEngineState &= ~ENGE_STATE.RECONNECTING;\r\n            ErrorRspWork(engine.mRsp.errorResponse, status, \"login is fail\");\r\n        }\r\n        engine.mEngineState &= ~ENGE_STATE.LOGINING;\r\n        engine.mRecntRoomID = event.payload.getRoomid();\r\n        if (((engine.mEngineState & ENGE_STATE.RECONNECTING) === ENGE_STATE.RECONNECTING)) {\r\n            if (engine.mRecntRoomID !== \"0\") {\r\n                var roomJoin = new MsRoomJoin(MsEnum.JoinRoomType.reconnect, engine.mMsPubArgs.userID, engine.mRecntRoomID, engine.mMsPubArgs.gameID, 0, 0, 0, \"reconnect\", [{ name: \"MatchVS\" }]);\r\n                var reconbuf = engine.mProtocol && engine.mProtocol.joinRoomSpecial(roomJoin);\r\n                engine.mNetWork && engine.mNetWork.send(reconbuf);\r\n            }\r\n            else {\r\n                engine.mEngineState &= ~ENGE_STATE.RECONNECTING;\r\n                //201 重连成功但是不在房间\r\n                engine.mRsp.reconnectResponse && engine.mRsp.reconnectResponse(MvsCode.CODE_201, null, null);\r\n            }\r\n        }\r\n        else {\r\n            engine.mRsp.loginResponse(new MsLoginRsp(status, engine.mRecntRoomID));\r\n        }\r\n    };\r\n}\r\nfunction JoinRoomRspWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        var status = event.payload.getStatus();\r\n        if (status === 200) {\r\n            var mBookInfo = event.payload.getBookinfo();\r\n            engine.mRoomInfo = event.payload.getRoominfo();\r\n            engine.mUserListForJoinRoomRsp = event.payload.getUsersList();\r\n            HttpConf.HOST_HOTEL_ADDR = getHotelUrl(mBookInfo);\r\n            engine.roomCheckIn(event.payload.getBookinfo(), event.payload.getRoominfo());\r\n        }\r\n        else {\r\n            engine.mEngineState &= ~ENGE_STATE.JOIN_ROOMING;\r\n            engine.mEngineState &= ~ENGE_STATE.RECONNECTING;\r\n            ErrorRspWork(engine.mRsp.errorResponse, status, \"join room failed \");\r\n            engine.mRsp.joinRoomResponse && engine.mRsp.joinRoomResponse(status, null, null);\r\n        }\r\n    };\r\n}\r\nfunction CreateRoomRspWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        if (event.payload.getStatus() === 200) {\r\n            var mBookInfo = event.payload.getBookinfo();\r\n            event.roomInfo.setRoomid(event.payload.getRoomid());\r\n            event.roomInfo.setOwner(event.payload.getOwner());\r\n            engine.mRoomInfo = event.roomInfo;\r\n            HttpConf.HOST_HOTEL_ADDR = getHotelUrl(mBookInfo);\r\n            engine.roomCheckIn(event.payload.getBookinfo(), event.roomInfo);\r\n        }\r\n        else {\r\n            engine.mEngineState &= ~ENGE_STATE.CREATEROOM;\r\n            ErrorRspWork(engine.mRsp.errorResponse, event.payload.getStatus(), \"\");\r\n            engine.mRsp.createRoomResponse && engine.mRsp.createRoomResponse(new MsCreateRoomRsp(event.payload.getStatus(), \"\", 0));\r\n        }\r\n    };\r\n}\r\nfunction CheckInRoomRspWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        var status = event.payload.getStatus();\r\n        if (status !== 200) {\r\n            engine.mEngineState = ENGE_STATE.HAVE_INIT;\r\n            engine.mEngineState |= ENGE_STATE.HAVE_LOGIN;\r\n            ErrorRspWork(engine.mRsp.errorResponse, status, \"check in error\");\r\n            engine.mHotelNetWork && engine.mHotelNetWork.close();\r\n        }\r\n        else {\r\n            engine.mAllPlayers = event.payload.getCheckinsList(); //checkins;\r\n            var roomUserList = [];\r\n            engine.mUserListForJoinRoomRsp.forEach(function (user) {\r\n                var roomuser = new MsRoomUserInfo(user.getUserid(), utf8ByteArrayToString(user.getUserprofile()));\r\n                roomUserList.push(roomuser);\r\n            });\r\n            //房间信息\r\n            var roominfo = new MsRoomInfo(engine.mRoomInfo.getRoomid(), utf8ByteArrayToString(engine.mRoomInfo.getRoomproperty()), engine.mRoomInfo.getOwner(), engine.mRoomInfo.getState());\r\n            engine.mEngineState |= ENGE_STATE.IN_ROOM;\r\n            if ((engine.mEngineState & ENGE_STATE.CREATEROOM) === ENGE_STATE.CREATEROOM) {\r\n                engine.mEngineState &= ~ENGE_STATE.CREATEROOM;\r\n                //创建房间\r\n                engine.mRsp.createRoomResponse && engine.mRsp.createRoomResponse(new MsCreateRoomRsp(status, engine.mRoomInfo.getRoomid(), engine.mRoomInfo.getOwner()));\r\n            }\r\n            else if ((engine.mEngineState & ENGE_STATE.JOIN_ROOMING) === ENGE_STATE.JOIN_ROOMING) {\r\n                engine.mEngineState &= ~ENGE_STATE.JOIN_ROOMING;\r\n                //加入房间\r\n                engine.mRsp.joinRoomResponse && engine.mRsp.joinRoomResponse(status, roomUserList, roominfo);\r\n            }\r\n            else if ((engine.mEngineState & ENGE_STATE.RECONNECTING) === ENGE_STATE.RECONNECTING) {\r\n                engine.mEngineState &= ~ENGE_STATE.RECONNECTING;\r\n                engine.mRsp.reconnectResponse && engine.mRsp.reconnectResponse(status, roomUserList, roominfo);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction CheckInRoomNtfyWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        if (engine.joinRoomNotifyInfo) {\r\n            engine.mRsp.joinRoomNotify && engine.mRsp.joinRoomNotify(engine.joinRoomNotifyInfo);\r\n        }\r\n        engine.mAllPlayers = event.payload.getCheckinsList();\r\n        engine.mRsp.roomCheckInNotify && engine.mRsp.roomCheckInNotify(new MsCheckInNotify(event.payload.getUserid(), event.payload.getCheckinsList(), event.payload.getPlayersList(), event.payload.getMaxplayers()));\r\n        engine.joinRoomNotifyInfo = null;\r\n    };\r\n}\r\nfunction LeaveRoomRspWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        engine.mEngineState &= ~ENGE_STATE.LEAVE_ROOMING;\r\n        if (event.payload.getStatus() !== 200) {\r\n            ErrorRspWork(engine.mRsp.errorResponse, event.payload.getStatus(), \"leave room fail\");\r\n        }\r\n        event.roomInfo.setRoomid(\"0\");\r\n        engine.mRoomInfo = event.roomInfo;\r\n        var leaveRoomRsp = new MsLeaveRoomRsp(event.payload.getStatus(), event.payload.getRoomid(), event.payload.getUserid(), event.payload.getCpproto());\r\n        engine.mRsp.leaveRoomResponse && engine.mRsp.leaveRoomResponse(leaveRoomRsp);\r\n        engine.mEngineState &= ~ENGE_STATE.IN_ROOM;\r\n    };\r\n}\r\nfunction JoinOverRspWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        if (event.payload.getStatus() !== 200) {\r\n            ErrorRspWork(engine.mRsp.errorResponse, event.payload.getStatus(), \"join over fail\");\r\n        }\r\n        engine.mRsp.joinOverResponse && engine.mRsp.joinOverResponse(new MsJoinOverRsp(event.payload.getStatus(), utf8ByteArrayToString(event.payload.getCpproto())));\r\n    };\r\n}\r\nfunction JoinOverNotifyWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        var joinoverNotifyInfo = new MsJoinOverNotifyInfo(event.payload.getRoomid(), event.payload.getSrcuserid(), utf8ByteArrayToString(event.payload.getCpproto()));\r\n        engine.mRsp.joinOverNotify && engine.mRsp.joinOverNotify(joinoverNotifyInfo);\r\n    };\r\n}\r\nfunction JoinRoomNotifyWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        engine.joinRoomNotifyInfo = new MsRoomUserInfo(event.payload.getUser().getUserid(), utf8ByteArrayToString(event.payload.getUser().getUserprofile()));\r\n    };\r\n}\r\nfunction LeaveRoomNotifyWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        var leaveRoomInfo = new MsLeaveRoomNotify(event.payload.getRoomid(), event.payload.getUserid(), event.payload.getOwner(), utf8ByteArrayToString(event.payload.getCpproto()));\r\n        engine.mRsp.leaveRoomNotify && engine.mRsp.leaveRoomNotify(leaveRoomInfo);\r\n    };\r\n}\r\nfunction HeartBeatHotelRspWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        //房间的心跳返回\r\n        engine.mRsp.hotelHeartBeatRsp && engine.mRsp.hotelHeartBeatRsp(event.payload.getStatus());\r\n        MatchvsLog.logI(\"hotelHeartBeatRsp\");\r\n    };\r\n}\r\nfunction SendEventRspWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        if (event.payload.getStatus() !== 200) {\r\n            ErrorRspWork(engine.mRsp.errorResponse, event.payload.getStatus(), \"send event fail\");\r\n        }\r\n        engine.mRsp.sendEventResponse && engine.mRsp.sendEventResponse(new MsSendEventRsp(event.payload.getStatus(), event.seq));\r\n    };\r\n}\r\nfunction SendEventNotifyWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        var srcUserID = event.payload.getSrcuid();\r\n        if (srcUserID === 0) {\r\n            engine.mRsp.gameServerNotify && engine.mRsp.gameServerNotify(new MsGameServerNotifyInfo(event.payload.getSrcuid(), utf8ByteArrayToString(event.payload.getCpproto())));\r\n        }\r\n        else {\r\n            engine.mRsp.sendEventNotify && engine.mRsp.sendEventNotify(new MsSendEventNotify(event.payload.getSrcuid(), utf8ByteArrayToString(event.payload.getCpproto())));\r\n        }\r\n    };\r\n}\r\nfunction SubscribeEventGroupRspWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        engine.mRsp.subscribeEventGroupResponse && engine.mRsp.subscribeEventGroupResponse(event.payload.getStatus(), event.payload.getGroupsList());\r\n    };\r\n}\r\nfunction SendEventGroupRspWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        engine.mRsp.sendEventGroupResponse && engine.mRsp.sendEventGroupResponse(event.payload.getStatus(), event.payload.getDstnum());\r\n    };\r\n}\r\nfunction SendEventGroupNotifyWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        engine.mRsp.sendEventGroupNotify && engine.mRsp.sendEventGroupNotify(event.payload.getSrcuid(), event.payload.getGroupsList(), utf8ByteArrayToString(event.payload.getCpproto()));\r\n    };\r\n}\r\nfunction GatewaySpeedRspWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        var status = event.payload.getStatus();\r\n        var seq = event.payload.getSeq();\r\n        engine.mRsp.gatewaySpeedResponse && engine.mRsp.gatewaySpeedResponse(new MsGatewaySpeedResponse(status, seq));\r\n    };\r\n}\r\nfunction HeartBeatGatewayRspWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        var gameid = event.payload.getGameid();\r\n        var gsExist = event.payload.getGsexist();\r\n        //如果心跳存在视为已登录状态\r\n        engine.mEngineState |= ENGE_STATE.HAVE_LOGIN;\r\n        engine.mRsp.heartBeatResponse && engine.mRsp.heartBeatResponse(new MsHeartBeatResponse(gameid, gsExist));\r\n        MatchvsLog.logI(\"gatewayHeartBeatResponse\");\r\n    };\r\n}\r\nfunction LoginOutRspWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        engine.mNetWork.close();\r\n        engine.mRsp.logoutResponse && engine.mRsp.logoutResponse(event.payload.getStatus());\r\n    };\r\n}\r\nfunction GetRoomListRspWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        var status = event.payload.getStatus();\r\n        if (status !== 200) {\r\n            engine.mRsp.getRoomListResponse && engine.mRsp.getRoomListResponse(event.payload.getStatus(), null);\r\n            ErrorRspWork(engine.mRsp.errorResponse, event.payload.getStatus(), \"get room list error \");\r\n        }\r\n        var roominfolist = event.payload.getRoominfoList();\r\n        var roomList = [];\r\n        for (var i = 0; i < roominfolist.length; i++) {\r\n            roomList[i] = new MsRoomInfoEx(roominfolist[i].getRoomid(), roominfolist[i].getRoomname(), roominfolist[i].getMaxplayer(), roominfolist[i].getMode(), roominfolist[i].getCanwatch(), utf8ByteArrayToString(roominfolist[i].getRoomproperty()));\r\n        }\r\n        engine.mRsp.getRoomListResponse && engine.mRsp.getRoomListResponse(status, roomList);\r\n    };\r\n}\r\nfunction DisConnectRspWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        engine.mRsp.disConnectResponse && engine.mRsp.disConnectResponse(event.payload.getStatus());\r\n    };\r\n}\r\nfunction KickPlayerRspWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        var status = event.payload.getStatus();\r\n        if (status != 200) {\r\n            ErrorRspWork(engine.mRsp.errorResponse, event.payload.getStatus(), \"kick player error \");\r\n        }\r\n        engine.mRsp.kickPlayerResponse && engine.mRsp.kickPlayerResponse(new MsKickPlayerRsp(event.payload.getStatus(), event.payload.getOwner(), event.payload.getUserid()));\r\n    };\r\n}\r\nfunction KickPlayerNotifyWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        if (event.payload.getUserid().toString() === (\"\" + engine.mUserID) && event.hotelTimer != null) {\r\n            MVS.ticker.clearInterval(event.hotelTimer);\r\n            engine.mEngineState &= ~ENGE_STATE.IN_ROOM;\r\n            engine.mEngineState |= ENGE_STATE.HAVE_LOGIN;\r\n            engine.mHotelNetWork.close();\r\n        }\r\n        engine.mRsp.kickPlayerNotify && engine.mRsp.kickPlayerNotify(new MsKickPlayerNotify(event.payload.getUserid(), event.payload.getSrcuserid(), utf8ByteArrayToString(event.payload.getCpproto()), event.payload.getOwner()));\r\n    };\r\n}\r\nfunction SetFrameSyncRspWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        MatchvsLog.logI(\"SetFrameSyncRateAck:\" + event.payload);\r\n        engine.mRsp.setFrameSyncResponse && engine.mRsp.setFrameSyncResponse(new MsSetChannelFrameSyncRsp(event.payload.getStatus()));\r\n    };\r\n}\r\nfunction SetFrameSyncNotifyWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        //MatchvsLog.logI(\"SetFrameSyncRateNotify:\"+event.payload);\r\n    };\r\n}\r\nfunction SendFrameEventRspWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        //MatchvsLog.logI(\"FrameBroadcastAck:\"+event.payload);\r\n        engine.mRsp.sendFrameEventResponse && engine.mRsp.sendFrameEventResponse(new MsSendFrameEventRsp(event.payload.getStatus()));\r\n    };\r\n}\r\nfunction FrameDataNotifyWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        event.frameCache.push(new MsFrameItem(event.payload.getSrcuid(), utf8ByteArrayToString(event.payload.getCpproto()), event.payload.getTimestamp()));\r\n    };\r\n}\r\nfunction FrameSyncNotifyWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        var frameData = [];\r\n        while (event.frameCache.length > 0) {\r\n            frameData.push(event.frameCache.pop());\r\n        }\r\n        var msFrameData = new MsFrameData(event.payload.getLastidx(), frameData, frameData.length);\r\n        engine.mRsp.frameUpdate && engine.mRsp.frameUpdate(msFrameData);\r\n    };\r\n}\r\nfunction NetworkStateNotifyWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        engine.mRsp.networkStateNotify && engine.mRsp.networkStateNotify(new MsNetworkStateNotify(event.payload.getRoomid(), event.payload.getUserid(), event.payload.getState(), event.payload.getOwner()));\r\n    };\r\n}\r\nfunction GetRoomListRspWork_Ex() {\r\n    this.doSubHandle = function (event, engine) {\r\n        var roomInfoList = event.payload.getRoominfoexList();\r\n        var roomAttrs = [];\r\n        roomInfoList.forEach(function (roominfo) {\r\n            var roomAttr = new MsRoomAttribute(roominfo.getRoomid(), roominfo.getRoomname(), roominfo.getMaxplayer(), roominfo.getGameplayer(), roominfo.getWatchplayer(), roominfo.getMode(), roominfo.getCanwatch(), utf8ByteArrayToString(roominfo.getRoomproperty()), roominfo.getOwner(), roominfo.getState(), roominfo.getCreatetime().toString());\r\n            roomAttrs.push(roomAttr);\r\n        });\r\n        var roomListExInfo = new MsGetRoomListExRsp(event.payload.getStatus(), event.payload.getTotal(), roomAttrs);\r\n        engine.mRsp.getRoomListExResponse && engine.mRsp.getRoomListExResponse(roomListExInfo);\r\n    };\r\n}\r\nfunction GetRoomDetailRspWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        if (event.payload.getStatus() !== 200) {\r\n            engine.mRsp.getRoomDetailResponse && engine.mRsp.getRoomDetailResponse(new MsGetRoomDetailRsp(event.payload.getStatus()));\r\n            ErrorRspWork(engine.mRsp.errorResponse, event.payload.getStatus(), \"\");\r\n        }\r\n        var roomDetail = event.payload.getRoomdetail();\r\n        var userInfos = [];\r\n        var playerlist = roomDetail.getPlayerinfosList();\r\n        playerlist.forEach(function (player) {\r\n            var userinfo = new MsRoomUserInfo(player.getUserid(), utf8ByteArrayToString(player.getUserprofile()));\r\n            userInfos.push(userinfo);\r\n        });\r\n        var roomDetailRsp = new MsGetRoomDetailRsp(event.payload.getStatus(), roomDetail.getState(), roomDetail.getMaxplayer(), roomDetail.getMode(), roomDetail.getCanwatch(), utf8ByteArrayToString(roomDetail.getRoomproperty()), roomDetail.getOwner(), roomDetail.getCreateflag(), userInfos);\r\n        engine.mRsp.getRoomDetailResponse && engine.mRsp.getRoomDetailResponse(roomDetailRsp);\r\n    };\r\n}\r\nfunction SetRoomPropertyRspWokr() {\r\n    this.doSubHandle = function (event, engine) {\r\n        if (event.payload.getStatus() !== 200) {\r\n            ErrorRspWork(engine.errorResponse, event.payload.getStatus(), \"set room property fail\");\r\n        }\r\n        engine.mRsp.setRoomPropertyResponse && engine.mRsp.setRoomPropertyResponse(new MsSetRoomPropertyRspInfo(event.payload.getStatus(), event.payload.getRoomid(), event.payload.getUserid(), utf8ByteArrayToString(event.payload.getRoomproperty())));\r\n    };\r\n}\r\nfunction SetRoomPropertyNotifyWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        engine.mRsp.setRoomPropertyNotify && engine.mRsp.setRoomPropertyNotify(new MsRoomPropertyNotifyInfo(event.payload.getRoomid(), event.payload.getUserid(), utf8ByteArrayToString(event.payload.getRoomproperty())));\r\n    };\r\n}\r\nfunction JoinOpenRspWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        engine.mRsp.joinOpenResponse && engine.mRsp.joinOpenResponse(new MsReopenRoomResponse(event.payload.getStatus(), utf8ByteArrayToString(event.payload.getCpproto())));\r\n    };\r\n}\r\nfunction JoinOpenNotifyWork() {\r\n    this.doSubHandle = function (event, engine) {\r\n        engine.mRsp.joinOpenNotify && engine.mRsp.joinOpenNotify(new MsReopenRoomNotify(event.payload.getRoomid(), event.payload.getUserid(), utf8ByteArrayToString(event.payload.getCpproto())));\r\n    };\r\n}\r\n/* ================ matchvs.js ================= */\r\nvar M_ENGINE;\r\nfunction MatchvsEngine() {\r\n    M_ENGINE = this;\r\n    this.mChannel = \"MatchVS\";\r\n    this.mPlatform = \"release\";\r\n    this.mMsPubArgs = new MsPublicMemberArgs();\r\n    this.mEngineState = ENGE_STATE.NONE;\r\n    this.mAllPlayers = [];\r\n    this.mRecntRoomID = 0;\r\n    this.mUserListForJoinRoomRsp = []; //加入房间收到回调，等checkin成后作为调用joinRoomResponse参数\r\n    this.joinRoomNotifyInfo = null; //加入房间收到回调，等checkinNotify成后作为调用joinRoomNotify参数\r\n    this.mNetWork = null; //gateway net\r\n    this.mHotelNetWork = null; //hotel net\r\n    this.mProtocol = new MatchvsProtocol();\r\n    this.init = function (response, channel, platform, gameID) {\r\n        this.mRsp = response;\r\n        this.mChannel = channel;\r\n        this.mPlatform = platform;\r\n        this.mGameID = gameID;\r\n        this.mMsPubArgs.channel = channel;\r\n        this.mMsPubArgs.platform = platform;\r\n        this.mEngineState = ENGE_STATE.INITING;\r\n        this.mProtocol.init();\r\n        this.getHostList();\r\n        return 0;\r\n    };\r\n    /**\r\n     * 独立部署使用的初始化接口\r\n     * @param {MatchvsResponse} response\r\n     * @param {string} endPoint\r\n     * @param {number} gameID\r\n     */\r\n    this.premiseInit = function (response, endPoint, gameID) {\r\n        if (undefined === endPoint || endPoint === \"\") {\r\n            return -1;\r\n        }\r\n        this.mRsp = response;\r\n        this.mGameID = gameID;\r\n        HttpConf.HOST_GATWAY_ADDR = \"wss://\" + endPoint;\r\n        this.mEngineState = ENGE_STATE.HAVE_INIT;\r\n        this.mRsp.initResponse(200);\r\n        return 0;\r\n    };\r\n    this.reconnect = function () {\r\n        if ((this.mEngineState & ENGE_STATE.HAVE_INIT) !== ENGE_STATE.HAVE_INIT)\r\n            return -2;\r\n        if ((this.mEngineState & ENGE_STATE.RECONNECTING) === ENGE_STATE.RECONNECTING)\r\n            return -9;\r\n        if (this.mRecntRoomID !== \"0\" && (this.mEngineState & ENGE_STATE.HAVE_LOGIN) === ENGE_STATE.HAVE_LOGIN) {\r\n            this.mEngineState |= ENGE_STATE.RECONNECTING;\r\n            var roomJoin = new MsRoomJoin(MsEnum.JoinRoomType.reconnect, this.mMsPubArgs.userID, this.mRecntRoomID, this.mMsPubArgs.gameID, 0, 0, 0, \"reconnect\", [{ name: \"MatchVS\" }]);\r\n            var buf = this.mProtocol.joinRoomSpecial(roomJoin);\r\n            this.mNetWork.send(buf);\r\n            this.mRecntRoomID = \"0\";\r\n            return 0;\r\n        }\r\n        if (undefined === this.mMsPubArgs.gameID || undefined === this.mMsPubArgs.secretKey || undefined === this.mMsPubArgs.appKey) {\r\n            return -1;\r\n        }\r\n        if ((this.mEngineState & ENGE_STATE.HAVE_LOGIN) === ENGE_STATE.HAVE_LOGIN)\r\n            return -6;\r\n        if (!(undefined === this.mNetWork || null === this.mNetWork)) {\r\n            this.mNetWork.close();\r\n        }\r\n        //登录状态\r\n        this.mEngineState |= ENGE_STATE.LOGINING;\r\n        //重连状态\r\n        this.mEngineState |= ENGE_STATE.RECONNECTING;\r\n        this.mNetWorkCallBackImp = new NetWorkCallBackImp(this);\r\n        this.mNetWork = new MatchvsNetWork(HttpConf.HOST_GATWAY_ADDR, this.mNetWorkCallBackImp);\r\n        var loginbuf = this.mProtocol.login(this.mMsPubArgs.userID, this.mMsPubArgs.token, this.mMsPubArgs.gameID, this.mMsPubArgs.gameVersion, this.mMsPubArgs.appKey, this.mMsPubArgs.secretKey, this.mMsPubArgs.deviceID, this.mMsPubArgs.gatewayID);\r\n        this.mNetWork.send(loginbuf);\r\n        return 0;\r\n    };\r\n    /**\r\n     * 登录\r\n     * @pUserID {uint32} value 用户ID\r\n     * @pToken {uint64} value 用户的token值\r\n     * @pGameID {uint32} pGameID 游戏ID\r\n     * @pGameVersion {uint16} value  游戏版本\r\n     * @pAppKey { !Array.<string> } app_key 游戏key,通过官网注册获得\r\n     * @pSecretKey pSecretKey 游戏secret，通过官网注册获得\r\n     * @pDeviceID { !Array.<string> } deviceID 设备ID\r\n     * @pGatewayID pGatewayID\r\n     */\r\n    this.login = function (userID, token, pGameID, pGameVersion, pAppKey, pSecretKey, deviceID, gatewayID) {\r\n        if ((this.mEngineState & ENGE_STATE.HAVE_INIT) !== ENGE_STATE.HAVE_INIT)\r\n            return -2; //未初始化\r\n        if ((this.mEngineState & ENGE_STATE.INITING) === ENGE_STATE.INITING)\r\n            return -3; //正在初始化\r\n        if ((this.mEngineState & ENGE_STATE.LOGINING) === ENGE_STATE.LOGINING)\r\n            return -5; //正在登录\r\n        if ((this.mEngineState & ENGE_STATE.HAVE_LOGIN) === ENGE_STATE.HAVE_LOGIN)\r\n            return -6; // 已经登录，请勿重复登录\r\n        if ((this.mEngineState & ENGE_STATE.LOGOUTING) === ENGE_STATE.LOGOUTING)\r\n            return -11; // 正在登出\r\n        var ak = new MVS.AppKeyCheck();\r\n        if (!ak.isInvailed(pAppKey)) {\r\n            return -26;\r\n        }\r\n        if (!(undefined === this.mNetWork || null === this.mNetWork)) {\r\n            this.mNetWork.close();\r\n        }\r\n        this.mNetWorkCallBackImp = new NetWorkCallBackImp(this);\r\n        this.mNetWork = new MatchvsNetWork(HttpConf.HOST_GATWAY_ADDR, this.mNetWorkCallBackImp);\r\n        this.mUserID = userID;\r\n        this.mToken = token;\r\n        this.mGameID = pGameID;\r\n        this.mGameVersion = pGameVersion;\r\n        this.mAppKey = pAppKey;\r\n        this.mMsPubArgs.userID = userID;\r\n        this.mMsPubArgs.token = token;\r\n        this.mMsPubArgs.gameID = pGameID;\r\n        this.mMsPubArgs.gameVersion = pGameVersion;\r\n        this.mMsPubArgs.appKey = pAppKey;\r\n        this.mMsPubArgs.deviceID = deviceID;\r\n        this.mMsPubArgs.gatewayID = gatewayID;\r\n        this.mMsPubArgs.secretKey = pSecretKey;\r\n        var buf = this.mProtocol.login(userID, token, pGameID, pGameVersion, pAppKey, pSecretKey, deviceID, gatewayID);\r\n        this.mEngineState |= ENGE_STATE.LOGINING;\r\n        this.mNetWork.send(buf);\r\n        MatchvsLog.logI(\"login,userID\" + userID + \", token:\" + token);\r\n        return 0;\r\n    };\r\n    /**\r\n     * 用户网关速度，暂时先不使用\r\n     */\r\n    this.speed = function () {\r\n        if ((this.mEngineState & ENGE_STATE.HAVE_LOGIN) !== ENGE_STATE.HAVE_LOGIN) {\r\n            return -4; //未登录\r\n        }\r\n        var buf = this.mProtocol.speed(this.mUserID, this.mGameID, this.mToken, VERSION, this.mGameVersion);\r\n        this.mNetWork.send(buf);\r\n        return 0;\r\n    };\r\n    /**\r\n     *\r\n     * @param cinfo {MsCreateRoomInfo}\r\n     * @param userProfile\r\n     * @returns {number}\r\n     */\r\n    this.createRoom = function (cinfo, userProfile) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 2);\r\n        if (ret !== 0)\r\n            return ret;\r\n        if (userProfile.length > 512)\r\n            return -21;\r\n        if (cinfo.maxPlayer > MVSCONFIG.MAXPLAYER_LIMIT || cinfo.maxPlayer < MVSCONFIG.MINPLAYER_LIMIT)\r\n            return -20;\r\n        var roomInfo = new RoomInfo(0, cinfo.roomName, cinfo.maxPlayer, cinfo.mode, cinfo.canWatch, cinfo.visibility, cinfo.roomProperty, 0);\r\n        var playInfo = new PlayerInfo(this.mUserID, userProfile);\r\n        var buf = this.mProtocol.roomCreate(cinfo.maxPlayer, 0, this.mGameID, roomInfo, playInfo);\r\n        if (buf.byteLength > 1024 || userProfile.length > 512)\r\n            return -21;\r\n        this.mEngineState |= ENGE_STATE.CREATEROOM; //设置用户正在创建房间\r\n        this.mNetWork.send(buf);\r\n        MatchvsLog.logI(\"create room\");\r\n        return 0;\r\n    };\r\n    this.getVersion = function () {\r\n        return \"MatchVS-SDK-JS_v1.3.0.beta.201805016\";\r\n    };\r\n    this.uninit = function () {\r\n        this.mEngineState = ENGE_STATE.NONE;\r\n        MatchvsLog.logI(\"unInit \");\r\n        return 0;\r\n    };\r\n    /**\r\n     * getRoomList\r\n     * @param filter {MsRoomFilter}\r\n     */\r\n    this.getRoomList = function (filter) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 2);\r\n        if (ret !== 0)\r\n            return ret;\r\n        var buf = this.mProtocol.getRoomList(this.mGameID, filter);\r\n        if (buf.byteLength > 1024)\r\n            return -21;\r\n        this.mNetWork.send(buf);\r\n        return 0;\r\n    };\r\n    /**\r\n     * create a connect with room and check the room is exist.\r\n     * @param bookInfo {object} build connect information that are from join room protocol\r\n     * @param roomInfo {object} room information\r\n     * @returns {number}\r\n     */\r\n    this.roomCheckIn = function (bookInfo, roomInfo) {\r\n        //建立hotel网络\r\n        this.mHotelNetWork = new MatchvsNetWork(HttpConf.HOST_HOTEL_ADDR, this.mNetWorkCallBackImp);\r\n        var buf = this.mProtocol.roomCheckIn(bookInfo, roomInfo, this.mUserID, this.mGameID);\r\n        this.mHotelNetWork.send(buf);\r\n        return 0;\r\n    };\r\n    /**\r\n     * int joinRandomRoom(int iMaxPlayer, const MsString userProfile);\r\n     */\r\n    this.joinRandomRoom = function (maxPlayer, userProfile) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 2);\r\n        if (ret !== 0)\r\n            return ret;\r\n        if (maxPlayer > MVSCONFIG.MAXPLAYER_LIMIT || maxPlayer < MVSCONFIG.MINPLAYER_LIMIT)\r\n            return -20;\r\n        if (userProfile.length > 512)\r\n            return -21;\r\n        var roomJoin = new MsRoomJoin(MsEnum.JoinRoomType.joinRandomRoom, this.mUserID, 0, this.mGameID, maxPlayer, 0, 0, userProfile, [{ name: \"matchvs\" }]);\r\n        var buf = this.mProtocol.joinRandomRoom(roomJoin);\r\n        this.mEngineState |= ENGE_STATE.JOIN_ROOMING;\r\n        this.mNetWork.send(buf);\r\n        return 0;\r\n    };\r\n    /**\r\n     *\r\n     * @param matchinfo {MsMatchInfo}\r\n     * @param userProfile {string}\r\n     * @returns {number}\r\n     */\r\n    this.joinRoomWithProperties = function (matchinfo, userProfile) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 2);\r\n        if (ret !== 0)\r\n            return ret;\r\n        if (userProfile.length > 512)\r\n            return -21;\r\n        if (typeof matchinfo !== \"object\")\r\n            return -1;\r\n        if (typeof userProfile !== \"string\")\r\n            return -1;\r\n        if (matchinfo.maxPlayer > MVSCONFIG.MAXPLAYER_LIMIT || matchinfo.maxPlayer < MVSCONFIG.MINPLAYER_LIMIT)\r\n            return -20;\r\n        var roomJoin = new MsRoomJoin(MsEnum.JoinRoomType.joinRoomWithProperty, this.mUserID, 1, this.mGameID, matchinfo.maxPlayer, matchinfo.mode, matchinfo.canWatch, userProfile, matchinfo.tags);\r\n        var buf = this.mProtocol.joinRoomWithProperties(roomJoin);\r\n        this.mEngineState |= ENGE_STATE.JOIN_ROOMING;\r\n        this.mNetWork.send(buf);\r\n        return 0;\r\n    };\r\n    /**\r\n     *\r\n     * @param roomID {string}\r\n     * @param userProfile {string}\r\n     * @returns {number}\r\n     */\r\n    this.joinRoom = function (roomID, userProfile) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 2);\r\n        if (ret !== 0)\r\n            return ret;\r\n        if (!(/^[0-9]+$/.test(roomID)))\r\n            return -1; //判断必须是全为数字\r\n        var roomId = String(roomID).trim();\r\n        if (0 === roomId || roomId === \"\")\r\n            return -1;\r\n        var roomJoin = new MsRoomJoin(MsEnum.JoinRoomType.joinSpecialRoom, this.mUserID, roomID, this.mGameID, 0, 0, 0, userProfile, [{ name: \"MatchVS\" }]);\r\n        var buf = this.mProtocol.joinRoomSpecial(roomJoin);\r\n        this.mEngineState |= ENGE_STATE.JOIN_ROOMING;\r\n        this.mNetWork.send(buf);\r\n        MatchvsLog.logI(\"join room\");\r\n        return 0;\r\n    };\r\n    /**\r\n     *\r\n     * @param cpProto {string}\r\n     * @returns {number}\r\n     */\r\n    this.joinOver = function (cpProto) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 1);\r\n        if (ret !== 0)\r\n            return ret;\r\n        if (cpProto.byteLength > 1024)\r\n            return -21;\r\n        var buf = this.mProtocol.joinOver(this.mGameID, this.mRoomInfo.getRoomid(), stringToUtf8ByteArray(cpProto), this.mUserID);\r\n        this.mNetWork.send(buf);\r\n        return 0;\r\n    };\r\n    /**\r\n     *\r\n     * @param cpProto {string}\r\n     * @returns {number}\r\n     */\r\n    this.leaveRoom = function (cpProto) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 3);\r\n        if (ret !== 0)\r\n            return ret;\r\n        var roomid = this.mRecntRoomID;\r\n        if (this.mRoomInfo && this.mRoomInfo.getRoomid) {\r\n            roomid = this.mRoomInfo.getRoomid();\r\n        }\r\n        if (cpProto.length > 1024) {\r\n            return -21;\r\n        }\r\n        var buf = this.mProtocol.leaveRoom(this.mGameID, this.mUserID, roomid, cpProto);\r\n        this.mNetWork.send(buf);\r\n        //设置为正在退出房间\r\n        this.mEngineState |= ENGE_STATE.LEAVE_ROOMING;\r\n        if (this.mHotelNetWork) {\r\n            this.mHotelNetWork.close();\r\n        }\r\n        MatchvsLog.logI(\"leaveRoom\");\r\n        return 0;\r\n    };\r\n    /**\r\n     *\r\n     * @param userID {number} 被剔除者userID\r\n     * @param cpProto {string}\r\n     * @returns {number} 0 成功，1失败\r\n     */\r\n    this.kickPlayer = function (userID, cpProto) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 1);\r\n        if (ret !== 0)\r\n            return ret;\r\n        if (cpProto.length > 1024)\r\n            return -21;\r\n        var buf = this.mProtocol.kickPlayer(userID, this.mUserID, this.mRoomInfo.getRoomid(), cpProto);\r\n        this.mNetWork.send(buf);\r\n        return 0;\r\n    };\r\n    /**\r\n     *\r\n     * @param frameRate ex:10/s . = 0 is off,>0 is on.\r\n     * @returns {number}\r\n     */\r\n    this.setFrameSync = function (frameRate) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 1);\r\n        if (ret !== 0)\r\n            return ret;\r\n        if (frameRate > 20 || frameRate < 0)\r\n            return -20;\r\n        var buf = this.mProtocol.setFrameSync(Number(frameRate), this.mRoomInfo.getRoomid(), this.mGameID, 0, 1);\r\n        this.mHotelNetWork.send(buf);\r\n        return 0;\r\n    };\r\n    /**\r\n     *\r\n     * @param cpProto {String} payload\r\n     * @returns {number}\r\n     */\r\n    this.sendFrameEvent = function (cpProto) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 1);\r\n        if (ret !== 0)\r\n            return ret;\r\n        if (cpProto.length > 1024)\r\n            return -21;\r\n        var buf = this.mProtocol.sendFrameEvent(this.mRoomInfo.getRoomid(), 0, cpProto);\r\n        this.mHotelNetWork.send(buf);\r\n        return 0;\r\n    };\r\n    this.joinOpen = function (cpProto) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 1);\r\n        if (ret !== 0)\r\n            return ret;\r\n        var buf = this.mProtocol.joinOpen(this.mGameID, this.mUserID, this.mRoomInfo.getRoomid(), cpProto);\r\n        this.mNetWork.send(buf);\r\n        return 0;\r\n    };\r\n}\r\nfunction MatchvsResponse() {\r\n    /**\r\n     *\r\n     * @param userInfo {MsRegistRsp}\r\n     */\r\n    this.registerUserResponse = function (userInfo) {\r\n    };\r\n    /**\r\n     *\r\n     * @param loginRsp {MsLoginRsp}\r\n     */\r\n    this.loginResponse = function (loginRsp) {\r\n    };\r\n    /**\r\n     * MsLogoutRsp\r\n     * @param status {number}\r\n     */\r\n    this.logoutResponse = function (status) {\r\n    };\r\n    /**\r\n     *\r\n     * @param rsp {MsCreateRoomRsp}\r\n     */\r\n    this.createRoomResponse = function (rsp) {\r\n    };\r\n    /**\r\n     *\r\n     * @param status {number}\r\n     * @param roomInfos {Array<MsRoomInfoEx>}\r\n     */\r\n    this.getRoomListResponse = function (status, roomInfos) {\r\n    };\r\n    /**\r\n     *\r\n     * @param status\r\n     * @param roomUserInfoList\r\n     * @param roomInfo {MsRoomInfo}\r\n     */\r\n    this.joinRoomResponse = function (status, roomUserInfoList, roomInfo) {\r\n    };\r\n    /**\r\n     * message NoticeJoin\r\n     *{\r\n     *    PlayerInfo user = 1;\r\n     *}\r\n     * message PlayerInfo\r\n     *{\r\n     *    uint32 userID = 1;\r\n     *    bytes userProfile = 2;\r\n     *}\r\n     * @param roomUserInfo {MsRoomUserInfo}\r\n     */\r\n    this.joinRoomNotify = function (roomUserInfo) {\r\n    };\r\n    /**\r\n     * message NoticeLeave\r\n     *{\r\n     *    uint32 userID = 1;\r\n     *    uint64 roomID = 2;\r\n     *    uint32 owner = 3;\r\n     *}\r\n     * @type rsp {NoticeLeave}\r\n     */\r\n    this.joinOverResponse = function (rsp) {\r\n    };\r\n    /**\r\n     *\r\n     * @param notifyInfo {MsJoinOverNotifyInfo}\r\n     */\r\n    this.joinOverNotify = function (notifyInfo) {\r\n    };\r\n    /**\r\n     * message LeaveRoomRsp\r\n     *{\r\n     *    ErrorCode status = 1;//200.成功 | 403.房间关闭 | 404.房间不存在 | 500.服务器错误\r\n     *    uint64 roomID = 2;\r\n     *    uint32 userID = 3;\r\n     *    bytes cpProto = 4;\r\n     *}\r\n     * @param rsp {LeaveRoomRsp}\r\n     */\r\n    this.leaveRoomResponse = function (rsp) {\r\n    };\r\n    /**\r\n     *\r\n     * @param leaveRoomInfo {MsLeaveRoomNotify}\r\n     */\r\n    this.leaveRoomNotify = function (leaveRoomInfo) {\r\n    };\r\n    /**\r\n     * MsKickPlayerRsp\r\n     * @param rsp {MsKickPlayerRsp}\r\n     */\r\n    this.kickPlayerResponse = function (rsp) {\r\n    };\r\n    /**\r\n     *\r\n     * @param notify {MsKickPlayerNotify}\r\n     */\r\n    this.kickPlayerNotify = function (notify) {\r\n    };\r\n    /**\r\n     *\r\n     * @param rsp {MsSendEventRsp}\r\n     */\r\n    this.sendEventResponse = function (rsp) {\r\n    };\r\n    /**\r\n     *\r\n     * @param tRsp {MsSendEventNotify}\r\n     */\r\n    this.sendEventNotify = function (tRsp) {\r\n    };\r\n    /**\r\n     *\r\n     * @param tRsp {MsGameServerNotifyInfo}\r\n     */\r\n    this.gameServerNotify = function (tRsp) {\r\n    };\r\n    /**\r\n     *\r\n     * @param errCode {Number}\r\n     * @param errMsg {string}\r\n     */\r\n    this.errorResponse = function (errCode, errMsg) {\r\n    };\r\n    /**\r\n     * status==200 is success.other is fail;\r\n     * @param status {int}\r\n     */\r\n    this.initResponse = function (status) {\r\n    };\r\n    /**\r\n     *\r\n     * @param int\r\n     */\r\n    // this.networkDelay = function (delay) {\r\n    //\r\n    // };\r\n    /**\r\n     *\r\n     * @param notify{MsNetworkStateNotify}\r\n     */\r\n    this.networkStateNotify = function (notify) {\r\n    };\r\n    /**\r\n     *\r\n     * @param status {number}\r\n     * @param groups {Array<string>}\r\n     */\r\n    this.subscribeEventGroupResponse = function (status, groups) {\r\n    };\r\n    /**\r\n     *\r\n     * @param status {number}\r\n     * @param dstNum {number}\r\n     */\r\n    this.sendEventGroupResponse = function (status, dstNum) {\r\n    };\r\n    /**\r\n     *\r\n     * @param srcUserID {number}\r\n     * @param groups {Array<string>}\r\n     * @param cpProto {string}\r\n     */\r\n    this.sendEventGroupNotify = function (srcUserID, groups, cpProto) {\r\n    };\r\n    /**\r\n     *\r\n     * @param rsp {MsSetChannelFrameSyncRsp}\r\n     */\r\n    this.setFrameSyncResponse = function (rsp) {\r\n    };\r\n    /**\r\n     *\r\n     * @param rsp {MsSendFrameEventRsp}\r\n     */\r\n    this.sendFrameEventResponse = function (rsp) {\r\n    };\r\n    /**\r\n     *\r\n     * @param data {MsFrameData}\r\n     */\r\n    this.frameUpdate = function (data) {\r\n    };\r\n    /**\r\n     *\r\n     * @param data {number}\r\n     */\r\n    this.hotelHeartBeatRsp = function (data) {\r\n    };\r\n    /**\r\n     *\r\n     * @param rsp {MsGatewaySpeedResponse}\r\n     */\r\n    this.gatewaySpeedResponse = function (rsp) {\r\n    };\r\n    /**\r\n     *\r\n     * @param rsp\r\n     */\r\n    this.heartBeatResponse = function (rsp) {\r\n    };\r\n    /**\r\n     *\r\n     * @param rsp\r\n     */\r\n    this.roomCheckInNotify = function (rsp) {\r\n    };\r\n    /**\r\n     * 主动断开网络接口回调\r\n     * @param rep\r\n     */\r\n    this.disConnectResponse = function (rep) {\r\n    };\r\n    /**\r\n     * 获取房间详细信息回调\r\n     * @param rsp {MsGetRoomDetailRsp}\r\n     */\r\n    this.getRoomDetailResponse = function (rsp) {\r\n    };\r\n    /**\r\n     * 获取房间扩展信息返回\r\n     * @param rsp {MsGetRoomListExRsp}\r\n     */\r\n    this.getRoomListExResponse = function (rsp) {\r\n    };\r\n    /**\r\n     *\r\n     * @param rsp {MsSetRoomPropertyRspInfo}\r\n     */\r\n    this.setRoomPropertyResponse = function (rsp) {\r\n    };\r\n    /**\r\n     *\r\n     * @param notify\r\n     */\r\n    this.setRoomPropertyNotify = function (notify) {\r\n    };\r\n    /**\r\n     *\r\n     * @param status\r\n     * @param roomUserInfoList\r\n     * @param roomInfo\r\n     */\r\n    this.reconnectResponse = function (status, roomUserInfoList, roomInfo) {\r\n    };\r\n    this.joinOpenNotify = function (rsp) {\r\n    };\r\n    this.joinOpenResponse = function (notify) {\r\n    };\r\n}\r\n/**\r\n * 注销登录\r\n * @param cpProto {string}\r\n * @returns {number}\r\n */\r\nMatchvsEngine.prototype.logout = function (cpProto) {\r\n    if ((this.mEngineState & ENGE_STATE.HAVE_LOGIN) !== ENGE_STATE.HAVE_LOGIN)\r\n        return -4;\r\n    if ((this.mEngineState & ENGE_STATE.IN_ROOM) === ENGE_STATE.IN_ROOM) {\r\n        this.mEngineState |= ENGE_STATE.LEAVE_ROOMING;\r\n        this.leaveRoom(\"user logout\");\r\n        this.mHotelNetWork && this.mHotelNetWork.close();\r\n    }\r\n    var buf = this.mProtocol.logout(cpProto);\r\n    this.mEngineState |= ENGE_STATE.LOGOUTING;\r\n    this.mNetWork.send(buf);\r\n    return 0;\r\n};\r\n/**\r\n * 心跳\r\n */\r\nMatchvsEngine.prototype.heartBeat = function () {\r\n    var Instance = M_ENGINE;\r\n    if (Instance.mGameID === undefined || Instance.mGameID === \"\" || Instance.mGameID === 0) {\r\n        return;\r\n    }\r\n    var roomID;\r\n    if (Instance.mRoomInfo === undefined) {\r\n        roomID = 0;\r\n    }\r\n    else {\r\n        roomID = Instance.mRoomInfo.getRoomid();\r\n    }\r\n    if ((Instance.mEngineState & ENGE_STATE.LOGOUTING) === ENGE_STATE.LOGOUTING) {\r\n        return;\r\n    }\r\n    var buf = Instance.mProtocol.heartBeat(Instance.mGameID, roomID);\r\n    Instance.mNetWork.send(buf);\r\n    MatchvsLog.logI(\"gateway heartBeat\");\r\n};\r\n/**\r\n * 发送数据\r\n * @destType    : number 0-包含destUids  1-排除destUids\r\n * @destUids    : 玩家ID集合 [1,2,3,4,5]\r\n * @roomID      : 房间号\r\n * @msgType     : 0-客户端+not CPS  1-not客户端+ CPS   2-客户端 + CPS\r\n * @data        : cp 数据\r\n */\r\nMatchvsEngine.prototype.sendEvent = function (data) {\r\n    if ((this.mEngineState & ENGE_STATE.HAVE_INIT) !== ENGE_STATE.HAVE_INIT)\r\n        return {\r\n            sequence: this.mProtocol.seq - 1,\r\n            result: -2\r\n        }; //未初始化\r\n    if ((this.mEngineState & ENGE_STATE.HAVE_LOGIN) !== ENGE_STATE.HAVE_LOGIN)\r\n        return {\r\n            sequence: this.mProtocol.seq - 1,\r\n            result: -4\r\n        }; //未登录\r\n    if ((this.mEngineState & ENGE_STATE.IN_ROOM) !== ENGE_STATE.IN_ROOM)\r\n        return {\r\n            sequence: this.mProtocol.seq - 1,\r\n            result: -6\r\n        }; //没有进入房间\r\n    if ((this.mEngineState & ENGE_STATE.INITING) === ENGE_STATE.INITING)\r\n        return {\r\n            sequence: this.mProtocol.seq - 1,\r\n            result: -3\r\n        }; //正在初始化\r\n    if ((this.mEngineState & ENGE_STATE.CREATEROOM) === ENGE_STATE.CREATEROOM)\r\n        return {\r\n            sequence: this.mProtocol.seq - 1,\r\n            result: -7\r\n        }; //在创建房间\r\n    if ((this.mEngineState & ENGE_STATE.JOIN_ROOMING) === ENGE_STATE.JOIN_ROOMING)\r\n        return {\r\n            sequence: this.mProtocol.seq - 1,\r\n            result: -7\r\n        }; //正在加入房间\r\n    if (typeof data !== \"string\")\r\n        return { sequence: this.mProtocol.seq - 1, result: -1 };\r\n    var destType = 0;\r\n    var msgType = 0;\r\n    var userids = [];\r\n    var num = 0;\r\n    for (var i = 0; i < this.mAllPlayers.length; i++) {\r\n        if (this.mAllPlayers[i] !== parseInt(this.mUserID)) {\r\n            userids[num++] = this.mAllPlayers[i];\r\n        }\r\n    }\r\n    if (userids.length > MVSCONFIG.MAXPLAYER_LIMIT)\r\n        return -20;\r\n    if (data.length > 1024)\r\n        return -21;\r\n    var buf = this.mProtocol.broadCast(this.mRoomInfo.getRoomid(), userids, destType, msgType, stringToUtf8ByteArray(data));\r\n    this.mHotelNetWork.send(buf);\r\n    // this.mProtocol.seq-1 因为发送后会加1所以需要减1\r\n    return { sequence: this.mProtocol.seq - 1, result: 0 };\r\n};\r\n/**\r\n * 扩展消息发送\r\n * @param msgType\r\n * @param data\r\n * @param desttype\r\n * @param userIDs\r\n * @returns {*}\r\n */\r\nMatchvsEngine.prototype.sendEventEx = function (msgType, data, desttype, userIDs) {\r\n    if ((this.mEngineState & ENGE_STATE.HAVE_INIT) !== ENGE_STATE.HAVE_INIT)\r\n        return {\r\n            sequence: this.mProtocol.seq - 1,\r\n            result: -2\r\n        }; //未初始化\r\n    if ((this.mEngineState & ENGE_STATE.HAVE_LOGIN) !== ENGE_STATE.HAVE_LOGIN)\r\n        return {\r\n            sequence: this.mProtocol.seq - 1,\r\n            result: -4\r\n        }; //未登录\r\n    if ((this.mEngineState & ENGE_STATE.IN_ROOM) !== ENGE_STATE.IN_ROOM)\r\n        return {\r\n            sequence: this.mProtocol.seq - 1,\r\n            result: -6\r\n        }; //没有进入房间\r\n    if ((this.mEngineState & ENGE_STATE.INITING) === ENGE_STATE.INITING)\r\n        return {\r\n            sequence: this.mProtocol.seq - 1,\r\n            result: -3\r\n        }; //正在初始化\r\n    if ((this.mEngineState & ENGE_STATE.CREATEROOM) === ENGE_STATE.CREATEROOM)\r\n        return {\r\n            sequence: this.mProtocol.seq - 1,\r\n            result: -7\r\n        }; //在创建房间\r\n    if ((this.mEngineState & ENGE_STATE.JOIN_ROOMING) === ENGE_STATE.JOIN_ROOMING)\r\n        return {\r\n            sequence: this.mProtocol.seq - 1,\r\n            result: -7\r\n        }; //正在加入房间\r\n    if (typeof data !== \"string\")\r\n        return { sequence: this.mProtocol.seq - 1, result: -1 };\r\n    if (!(msgType === 0 || msgType === 1 || msgType === 2))\r\n        return { sequence: this.mProtocol.seq - 1, result: -23 };\r\n    if (!(desttype === 0 || desttype === 1))\r\n        return { sequence: this.mProtocol.seq - 1, result: -24 };\r\n    if (data.length > 1024)\r\n        return -21;\r\n    var buf = this.mProtocol.broadCast(this.mRoomInfo.getRoomid(), userIDs, desttype, msgType, stringToUtf8ByteArray(data));\r\n    this.mHotelNetWork.send(buf);\r\n    // this.mProtocol.seq-1 因为发送后会加1所以需要减1\r\n    return { sequence: this.mProtocol.seq - 1, result: 0 };\r\n};\r\n/**\r\n * 玩家订阅或取消订阅一批groups，（支持批量和同时订阅和取消），支持同事订阅和取消订阅，\r\n * 是因为游戏角色从一个区域跨越到另一个区域时需要这种原子切换\r\n * @param confirms {!Array.<string>} value  要订阅的分组集合\r\n * @param cancels {!Array.<string>} value  要取消的分组集合\r\n */\r\nMatchvsEngine.prototype.subscribeEventGroup = function (confirms, cancels) {\r\n    var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 1);\r\n    if (ret !== 0)\r\n        return ret;\r\n    if (confirms.length === 0 && cancels.length === 0)\r\n        return -20;\r\n    var buf = this.mProtocol.subscribeEventGroup(this.mGameID, this.mRoomInfo.getRoomid(), confirms, cancels);\r\n    this.mHotelNetWork.send(buf);\r\n    return 0;\r\n};\r\n/**\r\n * @groups { !Array.<string> } value 调用subscribeEventGroup 设置的分组\r\n * @cpproto { !Array.<string> } value 发送的信息\r\n */\r\nMatchvsEngine.prototype.sendEventGroup = function (data, groups) {\r\n    var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 1);\r\n    if (ret !== 0)\r\n        return ret;\r\n    if (groups.length <= 0)\r\n        return -20;\r\n    if (data.length > 1024)\r\n        return -21;\r\n    var priority = 1; // 要设置的消息通道优先级\r\n    var buf = this.mProtocol.sendEventGroup(this.mGameID, this.mRoomInfo.getRoomid(), priority, groups, data);\r\n    this.mHotelNetWork.send(buf);\r\n    return 0;\r\n};\r\n/**\r\n * @gameID { number } value 游戏ID\r\n * @roomID { string } value 房间号\r\n * @userID { number } value  要订阅的分组集合\r\n */\r\nMatchvsEngine.prototype.hotelHeartBeat = function () {\r\n    var _engine = M_ENGINE;\r\n    _engine.mEngineState |= ENGE_STATE.IN_ROOM;\r\n    _engine.mEngineState |= ENGE_STATE.HAVE_LOGIN;\r\n    var buf = _engine.mProtocol.hotelHeartBeat(_engine.mGameID, _engine.mRoomInfo.getRoomid(), _engine.mUserID);\r\n    _engine.mHotelNetWork.send(buf);\r\n    MatchvsLog.logI(\"hotel heartBeat\");\r\n};\r\n/**\r\n * 注册用户\r\n * @returns {number}\r\n */\r\nMatchvsEngine.prototype.registerUser = function () {\r\n    if ((this.mEngineState & ENGE_STATE.HAVE_INIT) !== ENGE_STATE.HAVE_INIT)\r\n        return -2; //未初始化\r\n    var deviceid = \"javascript\";\r\n    var channel = this.mChannel;\r\n    var cacheKey = \"regUserInfo\" + channel + this.mPlatform;\r\n    var gameVersion = this.mGameVersion;\r\n    var cacheUserInfo = LocalStore_Load(cacheKey);\r\n    if (cacheUserInfo) {\r\n        var obj = JSON.parse(cacheUserInfo);\r\n        this.mRsp.registerUserResponse(new MsRegistRsp(obj.status + \"\", obj.data.userid, obj.data.token, obj.data.nickname, obj.data.avatar));\r\n        MatchvsLog.logI(\"load user info from cache:\" + obj);\r\n        return 0;\r\n    }\r\n    var uri = \"/wc3/regit.do\";\r\n    var url = HttpConf.REGISTER_USER_URL + uri + \"?mac=0\" + \"&deviceid=\" + deviceid + \"&channel=\" + channel + \"&pid=13\" + \"&version=\" + gameVersion;\r\n    var rep = new MatchvsNetWorkCallBack();\r\n    rep.rsp = this.mRsp.registerUserResponse;\r\n    rep.onMsg = function (buf) {\r\n        var obj = JSON.parse(buf);\r\n        if (obj.status === 0) {\r\n            LocalStore_Save(cacheKey, buf);\r\n            this.rsp(new MsRegistRsp(obj.status, obj.data.userid, obj.data.token, obj.data.nickname, obj.data.avatar));\r\n        }\r\n        else {\r\n            this.rsp(new MsRegistRsp(obj.status, 0, \"err\", buf, \"err\"));\r\n        }\r\n    };\r\n    rep.onErr = function (errCode, errMsg) {\r\n        //err code is 0 on weixin game platform\r\n        this.rsp(new MsRegistRsp(errCode === 0 ? -1 : errCode, 0, \"err\", errMsg, \"err\"));\r\n    };\r\n    new MatchvsHttp(rep).get(url);\r\n    return 0;\r\n};\r\n/**\r\n * 获取域名列表\r\n * @returns {number}\r\n */\r\nMatchvsEngine.prototype.getHostList = function () {\r\n    var gameId = this.mGameID;\r\n    var channel = this.mChannel;\r\n    var platform = this.mPlatform;\r\n    var uri = \"/v1/gateway/query\";\r\n    var isUseWSS = isNeedUseWSS();\r\n    var url = \"https://sdk.matchvs.com\" + uri + \"?mac=0\" + \"&gameid=\" + gameId + \"&channel=\" + channel + \"&platform=\" + platform + (isUseWSS ? \"&useWSSProxy=1\" : \"\");\r\n    var rep = new MatchvsNetWorkCallBack();\r\n    var engine = this;\r\n    rep.onMsg = function (buf) {\r\n        var obj = JSON.parse(buf);\r\n        if (obj.status === 200) {\r\n            engine.mEngineState |= ENGE_STATE.HAVE_INIT;\r\n            engine.mEngineState &= ~ENGE_STATE.INITING;\r\n            var http = \"https://\";\r\n            var port = \"\";\r\n            HttpConf.REGISTER_USER_URL = http + obj.data.vsuser;\r\n            HttpConf.HOST_GATWAY_ADDR = (isUseWSS ? \"wss://\" : \"ws://\") + (isUseWSS ? obj.data.wssProxy : (obj.data.engine + \":7001\"));\r\n            HttpConf.CMSNS_URL = http + obj.data.cmsns;\r\n            HttpConf.VS_OPEN_URL = http + obj.data.vsopen;\r\n            HttpConf.VS_PAY_URL = http + obj.data.vspay;\r\n            HttpConf.VS_PRODUCT_URL = http + obj.data.VS_PRODUCT_URL;\r\n        }\r\n        engine.mRsp.initResponse(obj.status);\r\n    };\r\n    rep.onErr = function (errCode, errMsg) {\r\n        console.error(\"getHostListErrCode\" + errCode + \" getHostListErrMsg\" + errMsg);\r\n        engine.mRsp.errorResponse(errCode, errMsg);\r\n    };\r\n    new MatchvsHttp(rep).get(url);\r\n    return 0;\r\n};\r\n/**\r\n * 获取房间列表扩展接口\r\n * @param filter {MsRoomFilterEx}\r\n */\r\nMatchvsEngine.prototype.getRoomListEx = function (filter) {\r\n    var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 0);\r\n    if (ret !== 0)\r\n        return ret;\r\n    var buf = this.mProtocol.getRoomListEx(this.mGameID, filter);\r\n    this.mNetWork.send(buf);\r\n    return 0;\r\n};\r\n/**\r\n * 获取房间详细信息\r\n * @param roomID {string}\r\n * @returns {number}\r\n */\r\nMatchvsEngine.prototype.getRoomDetail = function (roomID) {\r\n    var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 0);\r\n    if (ret !== 0)\r\n        return ret;\r\n    var buf = this.mProtocol.getRoomDetail(this.mGameID, roomID);\r\n    this.mNetWork.send(buf);\r\n    return 0;\r\n};\r\n/**\r\n *\r\n * @param roomID {string}\r\n * @param roomProperty {Array<string>}\r\n * @returns {*}\r\n */\r\nMatchvsEngine.prototype.setRoomProperty = function (roomID, roomProperty) {\r\n    if (roomProperty.length === 0)\r\n        return -1;\r\n    if (roomProperty.length > 1024)\r\n        return -21;\r\n    var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 1);\r\n    if (ret !== 0)\r\n        return ret;\r\n    var buf = this.mProtocol.setRoomProperty(this.mGameID, this.mUserID, roomID, roomProperty);\r\n    this.mNetWork.send(buf);\r\n    return 0;\r\n};\r\n/**\r\n * 断开网络连接\r\n * @param roomID 房间号\r\n */\r\nMatchvsEngine.prototype.disConnect = function (roomID) {\r\n    var buf = engine.mProtocol.disConnect(this.mUserID, this.mGameID, roomID);\r\n    this.mNetWork.send(buf);\r\n};\r\nMatchvsEngine.prototype.hashSet = function (gameID, userID, key, value) {\r\n    //参数组合是安装首字母排序的\r\n    var params = \"gameID=\" + gameID + \"&key=\" + key + \"&userID=\" + userID + \"&value=\" + value;\r\n    //加上 appkey 和 token 进行MD5签名\r\n    var sign = hex_md5(this.mAppKey + \"&\" + params + \"&\" + this.mToken);\r\n    //组合请求链接\r\n    var url = HttpConf.VS_OPEN_URL + \"/wc5/hashSet.do?\" + params + \"&sign=\" + sign;\r\n    //设置请求回调\r\n    var callback = new MatchvsNetWorkCallBack();\r\n    var httpReq = new MatchvsHttp(callback);\r\n    //请求成功回调\r\n    callback.onMsg = function (rsp) {\r\n        MatchvsLog.logI(\"hashSetRsp:\", rsp);\r\n    };\r\n    //请求失败回调\r\n    callback.onErr = function (errCode, errMsg) {\r\n        MatchvsLog.logI(\"hashSetRsp:errCode=\" + errCode + \" errMsg=\" + errMsg);\r\n    };\r\n    //执行请求\r\n    httpReq.get(url);\r\n};\r\nMatchvsEngine.prototype.hashGet = function (gameID, userID, key) {\r\n    //参数组合是安装首字母排序的\r\n    var params = \"gameID=\" + gameID + \"&key=\" + key + \"&userID=\" + userID;\r\n    //加上 appkey 和 token 进行MD5签名\r\n    var sign = hex_md5(this.mAppKey + \"&\" + params + \"&\" + this.mToken);\r\n    //组合请求链接\r\n    var url = HttpConf.VS_OPEN_URL + \"/wc5/hashGet.do?\" + params + \"&sign=\" + sign;\r\n    //设置请求回调\r\n    var callback = new MatchvsNetWorkCallBack();\r\n    var httpReq = new MatchvsHttp(callback);\r\n    //请求成功回调\r\n    callback.onMsg = function (rsp) {\r\n        MatchvsLog.logI(\"hashGetRsp:\", rsp);\r\n    };\r\n    //请求失败回调\r\n    callback.onErr = function (errCode, errMsg) {\r\n        MatchvsLog.logI(\"hashGetRsp:errCode=\" + errCode + \" errMsg=\" + errMsg);\r\n    };\r\n    //执行请求\r\n    httpReq.get(url);\r\n};\r\n/* ================ base64.js ================= */\r\nfunction Base64() {\r\n    // private property\r\n    _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n    // public method for encoding\r\n    this.encode = function (input) {\r\n        var output = \"\";\r\n        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n        var i = 0;\r\n        input = _utf8_encode(input);\r\n        while (i < input.length) {\r\n            chr1 = input.charCodeAt(i++);\r\n            chr2 = input.charCodeAt(i++);\r\n            chr3 = input.charCodeAt(i++);\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            }\r\n            else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n            output = output +\r\n                _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +\r\n                _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\r\n        }\r\n        return output;\r\n    };\r\n    // public method for decoding\r\n    this.decode = function (input) {\r\n        var output = \"\";\r\n        var chr1, chr2, chr3;\r\n        var enc1, enc2, enc3, enc4;\r\n        var i = 0;\r\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n        while (i < input.length) {\r\n            enc1 = _keyStr.indexOf(input.charAt(i++));\r\n            enc2 = _keyStr.indexOf(input.charAt(i++));\r\n            enc3 = _keyStr.indexOf(input.charAt(i++));\r\n            enc4 = _keyStr.indexOf(input.charAt(i++));\r\n            chr1 = (enc1 << 2) | (enc2 >> 4);\r\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n            chr3 = ((enc3 & 3) << 6) | enc4;\r\n            output = output + String.fromCharCode(chr1);\r\n            if (enc3 != 64) {\r\n                output = output + String.fromCharCode(chr2);\r\n            }\r\n            if (enc4 != 64) {\r\n                output = output + String.fromCharCode(chr3);\r\n            }\r\n        }\r\n        output = _utf8_decode(output);\r\n        return output;\r\n    };\r\n    // private method for UTF-8 encoding\r\n    _utf8_encode = function (string) {\r\n        string = string.replace(/\\r\\n/g, \"\\n\");\r\n        var utftext = \"\";\r\n        for (var n = 0; n < string.length; n++) {\r\n            var c = string.charCodeAt(n);\r\n            if (c < 128) {\r\n                utftext += String.fromCharCode(c);\r\n            }\r\n            else if ((c > 127) && (c < 2048)) {\r\n                utftext += String.fromCharCode((c >> 6) | 192);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            }\r\n            else {\r\n                utftext += String.fromCharCode((c >> 12) | 224);\r\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            }\r\n        }\r\n        return utftext;\r\n    };\r\n    // private method for UTF-8 decoding\r\n    _utf8_decode = function (utftext) {\r\n        var string = \"\";\r\n        var i = 0;\r\n        var c = c1 = c2 = 0;\r\n        while (i < utftext.length) {\r\n            c = utftext.charCodeAt(i);\r\n            if (c < 128) {\r\n                string += String.fromCharCode(c);\r\n                i++;\r\n            }\r\n            else if ((c > 191) && (c < 224)) {\r\n                c2 = utftext.charCodeAt(i + 1);\r\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\r\n                i += 2;\r\n            }\r\n            else {\r\n                c2 = utftext.charCodeAt(i + 1);\r\n                c3 = utftext.charCodeAt(i + 2);\r\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n                i += 3;\r\n            }\r\n        }\r\n        return string;\r\n    };\r\n}\r\ntry {\r\n    if (module && module.exports) {\r\n        module.exports = {\r\n            MatchvsLog: MatchvsLog,\r\n            MatchvsEngine: MatchvsEngine,\r\n            MatchvsResponse: MatchvsResponse,\r\n            MsMatchInfo: MsMatchInfo,\r\n            MsCreateRoomInfo: MsCreateRoomInfo,\r\n            MsRoomFilter: MsRoomFilter,\r\n            MsRoomFilterEx: MsRoomFilterEx,\r\n            LocalStore_Clear: LocalStore_Clear,\r\n            MsReopenRoomResponse: MsReopenRoomResponse,\r\n            MsReopenRoomNotify: MsReopenRoomNotify,\r\n            MatchvsHttp: MatchvsHttp\r\n        };\r\n    }\r\n}\r\ncatch (error) {\r\n    console.log(error);\r\n}\r\nwindow.MatchvsLog = MatchvsLog;\r\nwindow.MatchvsEngine = MatchvsEngine;\r\nwindow.MatchvsResponse = MatchvsResponse;\r\nwindow.MsMatchInfo = MsMatchInfo;\r\nwindow.MsCreateRoomInfo = MsCreateRoomInfo;\r\nwindow.MsRoomFilter = MsRoomFilter;\r\nwindow.MsRoomFilterEx = MsRoomFilterEx;\r\nwindow.LocalStore_Clear = LocalStore_Clear;\r\nwindow.MsReopenRoomResponse = MsReopenRoomResponse;\r\nwindow.MsReopenRoomNotify = MsReopenRoomNotify;\r\nwindow.MatchvsHttp = MatchvsHttp;\r\n","var protocol=dcodeIO.ProtoBuf.newBuilder({\"populateAccessors\":true})['import']({\"package\":\"protocol\",\"syntax\":\"proto2\",\"messages\":[{\"name\":\"result_push\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"required\",\"type\":\"int32\",\"name\":\"result\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"attach\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"msg\",\"id\":3}]},{\"name\":\"heart_beat\",\"syntax\":\"proto2\",\"fields\":[]},{\"name\":\"heart_beat_ret\",\"syntax\":\"proto2\",\"fields\":[]},{\"name\":\"kickoff_push\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"required\",\"type\":\"int32\",\"name\":\"type\",\"id\":1}]},{\"name\":\"role_info\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"icon\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"nickname\",\"id\":3},{\"rule\":\"optional\",\"type\":\"sync_data\",\"name\":\"syncData\",\"id\":4}]},{\"name\":\"DataWorkshop\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"value\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"startTimestamp\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"endTimestamp\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"addValue\",\"id\":5},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"open\",\"id\":6},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"display\",\"id\":7}]},{\"name\":\"DataHunt\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"preyId\",\"id\":1},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"inHunt\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"huntTimestamp\",\"id\":3},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"receive\",\"id\":5},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"refresh\",\"id\":6},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"refreshTimestamp\",\"id\":7},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"rewardId\",\"id\":8},{\"rule\":\"repeated\",\"type\":\"double\",\"name\":\"rewardValue\",\"id\":9},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"advanture\",\"id\":10},{\"rule\":\"optional\",\"type\":\"float\",\"name\":\"seasonRate\",\"id\":11}]},{\"name\":\"DataBuilding\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"value\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"startTimestamp\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"endTimestamp\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"addValue\",\"id\":5},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"open\",\"id\":6},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"display\",\"id\":7}]},{\"name\":\"DataMiracle\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"stage\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"value\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"startTimestamp\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"endTimestamp\",\"id\":5},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"done\",\"id\":6},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"open\",\"id\":7},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"display\",\"id\":8},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"spurCount\",\"id\":9},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"spurRecoverTimestamp\",\"id\":10},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"spurEndTimestamp\",\"id\":11},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"drawTimestamp\",\"id\":12},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"drawOnce\",\"id\":13}]},{\"name\":\"DataAchievement\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"done\",\"id\":2},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"open\",\"id\":3},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"draw\",\"id\":4}]},{\"name\":\"DataUnemployed\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"value\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"startTimestamp\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"endTimestamp\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"addValue\",\"id\":5}]},{\"name\":\"DataWounded\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"value\",\"id\":2},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"unemployed\",\"id\":3},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"open\",\"id\":4}]},{\"name\":\"DataProfession\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"value\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"limit\",\"id\":3},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"open\",\"id\":4},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"display\",\"id\":5}]},{\"name\":\"DataArmy\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"value\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"limit\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"trainValue\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"trainLimit\",\"id\":5},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"open\",\"id\":6},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"display\",\"id\":7},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"refID\",\"id\":8}]},{\"name\":\"DataResource\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"value\",\"id\":2},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"limit\",\"id\":3},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"history\",\"id\":4},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"open\",\"id\":5}]},{\"name\":\"Technology\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"startTimestamp\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"endTimestamp\",\"id\":3},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"done\",\"id\":4},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"open\",\"id\":5},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"display\",\"id\":6}]},{\"name\":\"Statistics\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"value\",\"id\":2}]},{\"name\":\"Flag\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"value\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"updateTimestamp\",\"id\":3}]},{\"name\":\"Event\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"state\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"updateTimestamp\",\"id\":3}]},{\"name\":\"Rank\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"rankNum\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"nickname\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"value\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"delta\",\"id\":4},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"isNew\",\"id\":5}]},{\"name\":\"sync_data\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"DataUnemployed\",\"name\":\"unemployed\",\"id\":1},{\"rule\":\"repeated\",\"type\":\"DataProfession\",\"name\":\"profession\",\"id\":2},{\"rule\":\"repeated\",\"type\":\"DataArmy\",\"name\":\"army\",\"id\":3},{\"rule\":\"repeated\",\"type\":\"DataResource\",\"name\":\"resource\",\"id\":4},{\"rule\":\"repeated\",\"type\":\"DataBuilding\",\"name\":\"building\",\"id\":5},{\"rule\":\"repeated\",\"type\":\"Technology\",\"name\":\"technology\",\"id\":6},{\"rule\":\"repeated\",\"type\":\"Flag\",\"name\":\"flag\",\"id\":7},{\"rule\":\"repeated\",\"type\":\"Event\",\"name\":\"event\",\"id\":8},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"timestamp\",\"id\":9},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"gameTime\",\"id\":10},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"level\",\"id\":11},{\"rule\":\"repeated\",\"type\":\"DataWorkshop\",\"name\":\"workshop\",\"id\":12},{\"rule\":\"optional\",\"type\":\"DataWounded\",\"name\":\"wounded\",\"id\":13},{\"rule\":\"repeated\",\"type\":\"Statistics\",\"name\":\"statistics\",\"id\":14},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"offlineCalTime\",\"id\":15},{\"rule\":\"repeated\",\"type\":\"sync_log\",\"name\":\"logs\",\"id\":16},{\"rule\":\"repeated\",\"type\":\"int64\",\"name\":\"doneOpID\",\"id\":17},{\"rule\":\"repeated\",\"type\":\"DataMiracle\",\"name\":\"miracle\",\"id\":18},{\"rule\":\"repeated\",\"type\":\"DataAchievement\",\"name\":\"achievement\",\"id\":19},{\"rule\":\"optional\",\"type\":\"DataHunt\",\"name\":\"hunt\",\"id\":20}]},{\"name\":\"sync_log\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"resourceID\",\"id\":2},{\"rule\":\"repeated\",\"type\":\"double\",\"name\":\"resourceValue\",\"id\":3}]},{\"name\":\"sync_data_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"result\",\"id\":1},{\"rule\":\"optional\",\"type\":\"sync_data\",\"name\":\"syncData\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"timestamp\",\"id\":3}]},{\"name\":\"open_push\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"buildingID\",\"id\":1},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"professionID\",\"id\":2},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"armyID\",\"id\":3},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"technologyID\",\"id\":4},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"workshopID\",\"id\":5}]},{\"name\":\"GmOperation\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"required\",\"type\":\"int32\",\"name\":\"opId\",\"id\":1}]},{\"name\":\"login_register\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"username\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"password\",\"id\":2}]},{\"name\":\"login_register_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"register_Result\",\"name\":\"result\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"uid\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"token\",\"id\":3},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"gameServer\",\"id\":4},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"msg\",\"id\":5}]},{\"name\":\"channel_login\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"channel\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"channelUID\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"sdk\",\"id\":3}]},{\"name\":\"channel_login_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"uid\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"token\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"gameServer\",\"id\":3}]},{\"name\":\"login_login\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"username\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"password\",\"id\":2}]},{\"name\":\"login_login_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"login_Result\",\"name\":\"result\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"uid\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"token\",\"id\":3},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"gameServer\",\"id\":4}]},{\"name\":\"login_server\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"token\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"platform\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"version\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"serverId\",\"id\":4},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"deviceId\",\"id\":5},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"channel\",\"id\":6},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"userId\",\"id\":7}]},{\"name\":\"login_sever_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"role_info\",\"name\":\"roleInfo\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"userId\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"serverTime\",\"id\":3}]},{\"name\":\"recoup_role\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"server_id\",\"id\":2},{\"rule\":\"repeated\",\"type\":\"int64\",\"name\":\"role_id_list\",\"id\":3},{\"rule\":\"repeated\",\"type\":\"recoup_entry\",\"name\":\"resource\",\"id\":4},{\"rule\":\"repeated\",\"type\":\"recoup_entry\",\"name\":\"building\",\"id\":5},{\"rule\":\"repeated\",\"type\":\"recoup_entry\",\"name\":\"profession\",\"id\":6},{\"rule\":\"repeated\",\"type\":\"recoup_entry\",\"name\":\"army\",\"id\":7},{\"rule\":\"repeated\",\"type\":\"recoup_bool_entry\",\"name\":\"technology\",\"id\":8},{\"rule\":\"repeated\",\"type\":\"recoup_entry\",\"name\":\"workshop\",\"id\":9},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"recoup_time\",\"id\":10}]},{\"name\":\"recoup_entry\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"tid\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"value\",\"id\":2}]},{\"name\":\"recoup_bool_entry\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"tid\",\"id\":1},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"done\",\"id\":2}]},{\"name\":\"delete_recoup\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"recoup_index\",\"id\":1}]},{\"name\":\"generate_server\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"server_id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"server_name\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"server_state\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"server_maintain_state\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"server_label\",\"id\":5},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"server_show_state\",\"id\":6},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"server_show_time\",\"id\":7},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"server_release_time\",\"id\":8},{\"rule\":\"repeated\",\"type\":\"string\",\"name\":\"channels\",\"id\":9},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"extranet_ip\",\"id\":10},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"intranet_ip\",\"id\":11},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"sign\",\"id\":12}]},{\"name\":\"server_batch_maintain\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"servers\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"server_maintain_state\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"sign\",\"id\":3}]},{\"name\":\"server_all_maintain\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"server_maintain_state\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"sign\",\"id\":2}]},{\"name\":\"guest_bind\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"appid\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"userid\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"jz_userid\",\"id\":3},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"channel_id\",\"id\":4},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"sign\",\"id\":5}]},{\"name\":\"Opponent\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"level\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"country\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"nickname\",\"id\":3},{\"rule\":\"repeated\",\"type\":\"DataArmy\",\"name\":\"army\",\"id\":4},{\"rule\":\"optional\",\"type\":\"fight_reward\",\"name\":\"reward\",\"id\":5},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"epoch\",\"id\":6}]},{\"name\":\"get_fight_opponent\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"pvp\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"uid\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"peopleTotal\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"level\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"victoryTotal\",\"id\":5},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"doneTech\",\"id\":6}]},{\"name\":\"get_fight_opponent_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"Opponent\",\"name\":\"opponent\",\"id\":1},{\"rule\":\"optional\",\"type\":\"Opponent\",\"name\":\"lOpponent\",\"id\":2},{\"rule\":\"optional\",\"type\":\"Opponent\",\"name\":\"hOpponent\",\"id\":3}]},{\"name\":\"random_fight_opponent\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"pvp\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"uid\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"peopleTotal\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"gold\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"level\",\"id\":5},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"victoryTotal\",\"id\":6},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"doneTech\",\"id\":7}]},{\"name\":\"random_fight_opponent_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"Opponent\",\"name\":\"opponent\",\"id\":1},{\"rule\":\"optional\",\"type\":\"Opponent\",\"name\":\"lOpponent\",\"id\":2},{\"rule\":\"optional\",\"type\":\"Opponent\",\"name\":\"hOpponent\",\"id\":3}]},{\"name\":\"start_fight\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"pvp\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"uid\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"level\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"peopleTotal\",\"id\":4},{\"rule\":\"repeated\",\"type\":\"DataArmy\",\"name\":\"army\",\"id\":5},{\"rule\":\"optional\",\"type\":\"float\",\"name\":\"woundedRatio\",\"id\":6},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"victoryTotal\",\"id\":7},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"doneTech\",\"id\":8},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"opponentType\",\"id\":9},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"maxPeopleTotal\",\"id\":10}]},{\"name\":\"test_fight\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"repeated\",\"type\":\"DataArmy\",\"name\":\"self\",\"id\":1},{\"rule\":\"repeated\",\"type\":\"DataArmy\",\"name\":\"opponent\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"selfLevel\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"opponentLevel\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"victoryTotal\",\"id\":5}]},{\"name\":\"test_fight_count\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"test_fight\",\"name\":\"fight\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"count\",\"id\":2}]},{\"name\":\"test_fight_count_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"victory\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"lose\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"draw\",\"id\":3}]},{\"name\":\"start_fight_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"result\",\"id\":1},{\"rule\":\"optional\",\"type\":\"fight_reward\",\"name\":\"reward\",\"id\":2},{\"rule\":\"repeated\",\"type\":\"fight_report\",\"name\":\"reports\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"selfDeath\",\"id\":5},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"selfWounded\",\"id\":6},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"opponentDeath\",\"id\":7},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"opponentWounded\",\"id\":8},{\"rule\":\"repeated\",\"type\":\"DataArmy\",\"name\":\"self\",\"id\":9},{\"rule\":\"repeated\",\"type\":\"DataArmy\",\"name\":\"opponent\",\"id\":10},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"selfHolyShitArmy\",\"id\":11},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"opponentHolyShitArmy\",\"id\":12},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"totalRatio\",\"id\":13},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"selfMorale\",\"id\":14},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"opponentMorale\",\"id\":15}]},{\"name\":\"fight_reward\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"repeated\",\"type\":\"DataResource\",\"name\":\"resource\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"trophy\",\"id\":2},{\"rule\":\"repeated\",\"type\":\"DataResource\",\"name\":\"luxury\",\"id\":3}]},{\"name\":\"fight_report\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"round\",\"id\":2},{\"rule\":\"repeated\",\"type\":\"figh_round_report\",\"name\":\"roundReport\",\"id\":3}]},{\"name\":\"figh_round_report\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"round\",\"id\":1},{\"rule\":\"repeated\",\"type\":\"DataArmy\",\"name\":\"self\",\"id\":2},{\"rule\":\"repeated\",\"type\":\"DataArmy\",\"name\":\"opponent\",\"id\":3},{\"rule\":\"optional\",\"type\":\"skill_report\",\"name\":\"selfSkill\",\"id\":6},{\"rule\":\"optional\",\"type\":\"skill_report\",\"name\":\"opponentSkill\",\"id\":7},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"selfDodgeArmy\",\"id\":8},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"opponentDodgeArmy\",\"id\":9},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"selfMorale\",\"id\":10},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"opponentMorale\",\"id\":11}]},{\"name\":\"skill_report\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"armyID\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"skillID\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"targetArmyID\",\"id\":3}]},{\"name\":\"log_in_out\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"logtime\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"channelid\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"channeluid\",\"id\":3},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"serverid\",\"id\":4},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"charid\",\"id\":5},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"logmode\",\"id\":6},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"logoutmode\",\"id\":7},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"lasttime\",\"id\":8},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"accountname\",\"id\":9},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"charname\",\"id\":10},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"ip\",\"id\":11},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"mac\",\"id\":12},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"devicelabel\",\"id\":13},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"ostype\",\"id\":14},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"ageid\",\"id\":15},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"countrylv\",\"id\":16},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"techdonenum\",\"id\":17},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"totalpopulation\",\"id\":18},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"totalland\",\"id\":19},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"jin_yuanbao\",\"id\":20},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"resources\",\"id\":21},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"resourceRates\",\"id\":22},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"buildings\",\"id\":23},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"workshops\",\"id\":24},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"professions\",\"id\":25},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"armies\",\"id\":26},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"technologies\",\"id\":27}]},{\"name\":\"log_yuanbao\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"logtime\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"channelid\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"channeluid\",\"id\":3},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"serverid\",\"id\":4},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"charid\",\"id\":5},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"accountname\",\"id\":6},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"charname\",\"id\":7},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"changetype\",\"id\":8},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"changereason\",\"id\":9},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"totalnuma\",\"id\":10},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"deltaa\",\"id\":11},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"totalnumb\",\"id\":12},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"deltab\",\"id\":13},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"delta\",\"id\":14},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"totalnum\",\"id\":15},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"param1\",\"id\":16},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"param2\",\"id\":17},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"param3\",\"id\":18},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"param4\",\"id\":19}]},{\"name\":\"create_role\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"required\",\"type\":\"int32\",\"name\":\"icon\",\"id\":1},{\"rule\":\"required\",\"type\":\"string\",\"name\":\"nickname\",\"id\":2}]},{\"name\":\"create_role_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"required\",\"type\":\"int32\",\"name\":\"result\",\"id\":1},{\"rule\":\"optional\",\"type\":\"role_info\",\"name\":\"roleInfo\",\"id\":2}]},{\"name\":\"get_role_info\",\"syntax\":\"proto2\",\"fields\":[]},{\"name\":\"get_role_info_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"required\",\"type\":\"role_info\",\"name\":\"roleInfo\",\"id\":1}]},{\"name\":\"change_nickname\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"newNickname\",\"id\":1}]},{\"name\":\"change_nickname_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"result\",\"id\":1}]},{\"name\":\"role_info_push\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"level\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"exp\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"power\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"limit\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"faith\",\"id\":5},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"diamond\",\"id\":6}]},{\"name\":\"role_power_push\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"power\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"updateTimestamp\",\"id\":2}]},{\"name\":\"role_flag_info\",\"syntax\":\"proto2\",\"fields\":[]},{\"name\":\"role_flag_info_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"flag\",\"id\":1},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"value\",\"id\":2}]},{\"name\":\"update_flag\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"flag\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"value\",\"id\":2}]},{\"name\":\"update_flag_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"result\",\"id\":1}]},{\"name\":\"role_flag_push\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"flag\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"value\",\"id\":2}]},{\"name\":\"get_rank_info\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"type\",\"id\":1}]},{\"name\":\"get_rank_info_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"repeated\",\"type\":\"Rank\",\"name\":\"topRank\",\"id\":1},{\"rule\":\"optional\",\"type\":\"Rank\",\"name\":\"myRank\",\"id\":2}]},{\"name\":\"acc_batch_building\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"buildingID\",\"id\":1}]},{\"name\":\"acc_batch_building_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"DataBuilding\",\"name\":\"building\",\"id\":1}]},{\"name\":\"acc_batch_people\",\"syntax\":\"proto2\",\"fields\":[]},{\"name\":\"acc_batch_people_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"DataUnemployed\",\"name\":\"unemployed\",\"id\":1}]},{\"name\":\"acc_upgrade_technology\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"techID\",\"id\":1}]},{\"name\":\"acc_upgrade_technology_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"Technology\",\"name\":\"technology\",\"id\":1}]},{\"name\":\"acc_hunt\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"huntID\",\"id\":1}]},{\"name\":\"acc_hunt_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"DataHunt\",\"name\":\"hunt\",\"id\":1}]},{\"name\":\"C2GS\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"session\",\"id\":1},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"sequence\",\"id\":2},{\"rule\":\"optional\",\"type\":\"heart_beat\",\"name\":\"heartBeat\",\"id\":3},{\"rule\":\"optional\",\"type\":\"login_register\",\"name\":\"loginRegister\",\"id\":6},{\"rule\":\"optional\",\"type\":\"login_login\",\"name\":\"loginLogin\",\"id\":7},{\"rule\":\"optional\",\"type\":\"login_server\",\"name\":\"loginServer\",\"id\":11},{\"rule\":\"optional\",\"type\":\"create_role\",\"name\":\"createRole\",\"id\":12},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"getNotice\",\"id\":18},{\"rule\":\"optional\",\"type\":\"sync_data\",\"name\":\"syncData\",\"id\":20},{\"rule\":\"optional\",\"type\":\"change_nickname\",\"name\":\"changeNickname\",\"id\":21},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"getFlag\",\"id\":22},{\"rule\":\"optional\",\"type\":\"random_fight_opponent\",\"name\":\"randomFightOpponent\",\"id\":30},{\"rule\":\"optional\",\"type\":\"start_fight\",\"name\":\"startFight\",\"id\":31},{\"rule\":\"optional\",\"type\":\"get_fight_opponent\",\"name\":\"getFightOpponent\",\"id\":32},{\"rule\":\"optional\",\"type\":\"acc_batch_building\",\"name\":\"accBatchBuilding\",\"id\":40},{\"rule\":\"optional\",\"type\":\"acc_batch_people\",\"name\":\"accBatchPeople\",\"id\":41},{\"rule\":\"optional\",\"type\":\"acc_upgrade_technology\",\"name\":\"accUpgradeTechnology\",\"id\":42},{\"rule\":\"optional\",\"type\":\"acc_hunt\",\"name\":\"accHunt\",\"id\":43},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"drawDayShare\",\"id\":44},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"drawAchievement\",\"id\":45},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"drawMiracle\",\"id\":46},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"drawMiracleOnce\",\"id\":47},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"updateFightData\",\"id\":50},{\"rule\":\"optional\",\"type\":\"get_rank_info\",\"name\":\"getRankInfo\",\"id\":60},{\"rule\":\"optional\",\"type\":\"GmOperation\",\"name\":\"gmOperation\",\"id\":90},{\"rule\":\"optional\",\"type\":\"test_fight\",\"name\":\"testFight\",\"id\":100},{\"rule\":\"optional\",\"type\":\"test_fight_count\",\"name\":\"testFightCount\",\"id\":101},{\"rule\":\"optional\",\"type\":\"log_in_out\",\"name\":\"logInOut\",\"id\":200},{\"rule\":\"optional\",\"type\":\"log_yuanbao\",\"name\":\"logYuanBao\",\"id\":201},{\"rule\":\"optional\",\"type\":\"channel_login\",\"name\":\"channelLogin\",\"id\":400},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"kickoff\",\"id\":500},{\"rule\":\"optional\",\"type\":\"guest_bind\",\"name\":\"guestBind\",\"id\":601},{\"rule\":\"optional\",\"type\":\"recoup_role\",\"name\":\"recoupRole\",\"id\":602}]},{\"name\":\"GS2C\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"session\",\"id\":1},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"sequence\",\"id\":2},{\"rule\":\"optional\",\"type\":\"heart_beat_ret\",\"name\":\"heartBeatRet\",\"id\":3},{\"rule\":\"optional\",\"type\":\"login_register_ret\",\"name\":\"loginRegisterRet\",\"id\":6},{\"rule\":\"optional\",\"type\":\"login_login_ret\",\"name\":\"loginLoginRet\",\"id\":7},{\"rule\":\"optional\",\"type\":\"login_sever_ret\",\"name\":\"loginServerRet\",\"id\":11},{\"rule\":\"optional\",\"type\":\"create_role_ret\",\"name\":\"createRoleRet\",\"id\":12},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"getNoticeRet\",\"id\":18},{\"rule\":\"optional\",\"type\":\"sync_data_ret\",\"name\":\"syncDataRet\",\"id\":20},{\"rule\":\"optional\",\"type\":\"change_nickname_ret\",\"name\":\"changeNicknameRet\",\"id\":21},{\"rule\":\"optional\",\"type\":\"Flag\",\"name\":\"getFlagRet\",\"id\":22},{\"rule\":\"optional\",\"type\":\"random_fight_opponent_ret\",\"name\":\"randomFightOpponentRet\",\"id\":30},{\"rule\":\"optional\",\"type\":\"start_fight_ret\",\"name\":\"startFightRet\",\"id\":31},{\"rule\":\"optional\",\"type\":\"get_fight_opponent_ret\",\"name\":\"getFightOpponentRet\",\"id\":32},{\"rule\":\"optional\",\"type\":\"acc_batch_building_ret\",\"name\":\"accBatchBuildingRet\",\"id\":40},{\"rule\":\"optional\",\"type\":\"acc_batch_people_ret\",\"name\":\"accBatchPeopleRet\",\"id\":41},{\"rule\":\"optional\",\"type\":\"acc_upgrade_technology_ret\",\"name\":\"accUpgradeTechnologyRet\",\"id\":42},{\"rule\":\"optional\",\"type\":\"acc_hunt_ret\",\"name\":\"accHuntRet\",\"id\":43},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"drawDayShareRet\",\"id\":44},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"drawAchievementRet\",\"id\":45},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"drawMiracleRet\",\"id\":46},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"drawMiracleOnceRet\",\"id\":47},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"updateFightDataRet\",\"id\":50},{\"rule\":\"optional\",\"type\":\"get_rank_info_ret\",\"name\":\"getRankInfoRet\",\"id\":60},{\"rule\":\"optional\",\"type\":\"GmOperation\",\"name\":\"gmOperationRet\",\"id\":90},{\"rule\":\"optional\",\"type\":\"start_fight_ret\",\"name\":\"testFightRet\",\"id\":100},{\"rule\":\"optional\",\"type\":\"test_fight_count_ret\",\"name\":\"testFightCountRet\",\"id\":101},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"logInOutRet\",\"id\":200},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"logYuanBaoRet\",\"id\":201},{\"rule\":\"optional\",\"type\":\"channel_login_ret\",\"name\":\"channelLoginRet\",\"id\":400},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"kickoffRet\",\"id\":500},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"guestBindRet\",\"id\":601},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"recoupRoleRet\",\"id\":602},{\"rule\":\"optional\",\"type\":\"result_push\",\"name\":\"resultPush\",\"id\":1000},{\"rule\":\"optional\",\"type\":\"kickoff_push\",\"name\":\"kickoffPush\",\"id\":1001},{\"rule\":\"optional\",\"type\":\"open_push\",\"name\":\"openPush\",\"id\":1002},{\"rule\":\"optional\",\"type\":\"Flag\",\"name\":\"flagPush\",\"id\":1003},{\"rule\":\"optional\",\"type\":\"DataResource\",\"name\":\"resourcePush\",\"id\":1004},{\"rule\":\"repeated\",\"type\":\"Statistics\",\"name\":\"statisticsPush\",\"id\":1005},{\"rule\":\"optional\",\"type\":\"recoup_role\",\"name\":\"opRecoupRole\",\"id\":1006},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"newNoticePush\",\"id\":1007}]}],\"enums\":[{\"name\":\"login_Result\",\"syntax\":\"proto2\",\"values\":[{\"name\":\"loginSuccess\",\"id\":1},{\"name\":\"invalidUser\",\"id\":2},{\"name\":\"invalidPwd\",\"id\":3},{\"name\":\"forbiddenUser\",\"id\":4},{\"name\":\"invalidMaintain\",\"id\":5},{\"name\":\"invalidGameServer\",\"id\":6}]},{\"name\":\"register_Result\",\"syntax\":\"proto2\",\"values\":[{\"name\":\"registerSuccess\",\"id\":1},{\"name\":\"userExists\",\"id\":2},{\"name\":\"invalidFormat\",\"id\":3},{\"name\":\"invalidServer\",\"id\":6}]},{\"name\":\"server_Result\",\"syntax\":\"proto2\",\"values\":[{\"name\":\"success\",\"id\":1},{\"name\":\"maintenance\",\"id\":2},{\"name\":\"notLogin\",\"id\":3}]}],\"services\":[{\"name\":\"RPCService\",\"options\":{},\"rpc\":{\"request\":{\"request\":\"C2GS\",\"request_stream\":false,\"response\":\"GS2C\",\"response_stream\":false,\"options\":{}}}}],\"isNamespace\":true}).build([\"protocol\"]);\r\nmodule.exports=protocol;","window.network = {\n    initNetwork: function() {\n        this.pomeloBuildObj = pomeloBuild.create();\n        this.pomelo = this.pomeloBuildObj.pomelo;\n\n        this.isBinding = false;\n\n        if (!this.isBinding) { // 主要为了让onMessage绑定this\n            this.onMessage = this.onMessage.bind(this);\n            this.isBinding = true;\n        }\n\n        // 只能被network用，其他人不能用\n        this.netListener = eventListener.create(\"one\");\n        this.reset();\n        this._registerNetEvent();\n    },\n\n    reset: function() {\n        this.curMsgName = \"\";\n\n        // 路由管理器（暂名）重置，重置后立马刷新一次netLoading的显示\n        this.routerManager = {};\n    },\n    /**\n     内部使用的注册网络回调函数\n     */\n    _registerNetEvent: function() {\n        this.pomelo[\"on\"](\"heartbeat timeout\", function() {\n            this.pomelo[\"disconnect\"]();\n\n            this.netListener.dispatch(\"reconnect timeout\", {});\n        }.bind(this));\n\n        this.pomelo[\"on\"](\"heartbeat recv\", function() {\n            clientEvent.dispatch(\"updateNetworkState\", \"heartBeatRet\");\n        }.bind(this));\n\n        this.pomelo[\"on\"](\"close\", function() {\n            this.pomelo[\"disconnect\"]();\n\n            this.netListener.dispatch(\"network close\", {});\n        }.bind(this));\n\n        this.pomelo[\"on\"](\"onKick\", function() {\n            this.netListener.dispatch(\"kick user\", {});\n\n            // 关闭网络loading动画\n            this.receiveRouterFromServer('close all netLoading');\n        }.bind(this));\n    },\n\n    // 网络协议都是在logic注册的，不能注销\n    on: function(route) {\n        this.netListener.on.apply(this.netListener, arguments);\n        pomelo[\"on\"](route, this.onMessage);\n    },\n\n    getCurMsgName: function() {\n        return this.curMsgName;\n    },\n\n    connect: function(ip, port, cb) {\n        var netConfig = {\n            host: ip,\n            port: port,\n            log: true\n        };\n\n        this.isKicked = false;\n        netConfig.wsStr = \"wss://\";\n\n        // 解决微信上点击会崩溃的bug,网络连接不能在放在ui层,所以用timeout包装一层\n        setTimeout(function() {\n            this.pomelo[\"init\"](netConfig, function() {\n                if (cb) cb();\n            }.bind(this));\n        }.bind(this), 0);\n    },\n\n    disconnect: function() {\n        if (this.isConnected()) {\n            this.pomelo[\"disconnect\"]();\n        }\n    },\n    /**\n     *  globally-unique identifiers, 生成一个不重复的随机字符串，用于跟踪请求链\n     */\n    guid: function() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n            s4() + '-' + s4() + s4() + s4();\n    },\n\n    send: function(routeStr, dataObj) {\n        if (typeof (dataObj) === \"undefined\") {\n            dataObj = {};\n        }\n\n        // 请求参数中加入唯一标识,用于跟踪请求链。\n        dataObj.uuid = this.guid();\n        console.log(\"send route:\" + routeStr + \" data:\" + JSON.stringify(dataObj));\n\n        // 记录路由请求\n        this.addRouterToManager(routeStr);\n\n        if (this.isConnected()) {\n            this.pomelo[\"request\"](routeStr, dataObj, this.onMessage);\n        }\n    },\n\n    onMessage: function(msgOrigin) {\n        var router = msgOrigin[\"route\"];\n\n        this.receiveRouterFromServer(router);\n\n        console.log(\"receive msg from :\" + JSON.stringify(msgOrigin));\n\n        if (msgOrigin[\"body\"][\"code\"] === 500) {\n            cc.error(\"server data error, can't find the route:\" + router);\n            // pomelo异常处理都返回500，仍然需要做分发处理\n            // return;\n        }\n\n        if (!router) {\n            cc.error(\"please add the msg route in server\");\n            return;\n        }\n\n        // 空数据\n        if (Object.keys(msgOrigin[\"body\"]).length <= 0) {\n            cc.error(\"server data error, can't response no data proto\");\n            return;\n        }\n\n        this.curMsgName = msgOrigin[\"route\"];\n\n        this.netListener.dispatch(msgOrigin[\"route\"], msgOrigin[\"body\"]);\n    },\n\n    setNetLoadingStatus: function(flag) {\n        if (flag) {\n            // clientEvent.dispatch(\"showPanel\", \"netLoadingPanel\");\n        } else {\n            clientEvent.dispatch('hidePanel', \"netLoadingPanel\");\n        }\n    },\n\n    /**\n     * 检测 netLoading 的显示状态\n     * 从 routeManager 中获取每个记录的路由的请求时间，与当前时间对比\n     * 如果超出阈值就显示 netLoading\n     * 注：已返回的路由就会从 routerManager 中删掉\n     */\n    checkNetLoadingStatus: function() {\n        var keys = Object.keys(this.routerManager);\n        var keysLength = keys.length;\n        if (keysLength <= 0) {\n            this.netListener.dispatch('hidePanel', \"netLoadingPanel\");\n            return;\n        }\n\n        var currentTime = Date.now();\n        for (var key in this.routerManager) {\n            if (this.routerManager.hasOwnProperty(key)) {\n                var routerTime = this.routerManager[key];\n                var deltaTime = currentTime - routerTime;\n                if (deltaTime > this.netLoadingCheckInterval) {\n                    // 存在路由的请求时间超出了阈值，显示 netLoading\n                    // 有路由显示的话，就不再检查其他的路由\n                    return;\n                }\n            }\n        }\n    },\n\n    /**\n     * 将路由添加到路由管理器（暂名）\n     * @param {String} router 路由名\n     * 将 { 路由名 => 时间 } 作为键值对存起来，如果是已经存在的路由，则跳过\n     */\n    addRouterToManager: function(router) {\n        var keys = Object.keys(this.routerManager);\n\n        // 断线重连期间，拒绝其他的路由加入\n        if (keys.indexOf('connectTimeout') === -1) {\n            // 断线重连时，清空路由\n            if (router === 'connectTimeout') {\n                this.routerManager = {};\n            }\n\n            keys = Object.keys(this.routerManager);\n            var index = keys.indexOf(router);\n            if (index === -1) {\n                var currentTime = Date.now();\n                this.routerManager[router] = currentTime;\n            }\n        }\n    },\n\n    /**\n     * 收到网络返回，将路由管理器（暂名）中对应的路由删掉\n     * @param {String} router 路由名\n     */\n    receiveRouterFromServer: function(router) {\n        if (router === 'close all netLoading') {\n            this.routerManager = {};\n            this.checkNetLoadingStatus();\n            return;\n        }\n        var keys = Object.keys(this.routerManager);\n        var index = keys.indexOf(router);\n        if (index > -1) {\n            console.log(router, \"cost\", Date.now() - this.routerManager[router], \"ms\");\n            delete this.routerManager[router];\n\n            // 删除之后要刷新一次 netLoading 的显示\n            this.checkNetLoadingStatus();\n        }\n    },\n    /**\n     * 请客网络回调\n     */\n    clearCallback: function() {\n        if (this.pomelo) this.pomelo.clearCallback();\n    }\n};\n\nnetwork.isConnecting = function() {\n    return this.pomelo.isConnecting();\n};\n\nnetwork.isConnected = function() {\n    return this.pomelo.isOpen();\n};\n\nnetwork.isClosed = function() {\n    return this.pomelo.isClosed();\n};\n\nnetwork.isClosing = function() {\n    return this.pomelo.isClosing();\n};\n\nnetwork.chooseNetworkMode = function() {\n    this.initNetwork();\n    if (this.pomelo) {\n        for (var key in this.netListener) {\n            this.pomelo[\"on\"](key, this.onMessage);\n        }\n    }\n};\n\nnetwork.on = function(msgName, handler) {\n    this.netListener.on(msgName, handler);\n};\n\nnetwork.dispatch = function(msgName, msgContent) {\n    this.netListener.dispatch(msgName, msgContent);\n};\n","var mvs = require(\"Matchvs\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        blueHead:{\n            type: cc.Prefab,\n            default: null\n        },\n        blueCorner:{\n            type: cc.Prefab,\n            default: null\n        },\n        blueStraight:{\n            type: cc.Prefab,\n            default: null\n        },\n        redHead:{\n            type: cc.Prefab,\n            default: null\n        },\n        redCorner:{\n            type: cc.Prefab,\n            default: null\n        },\n        redStraight:{\n            type: cc.Prefab,\n            default: null\n        },\n    },\n    onLoad () {\n        Game.PathManager = this;\n        this.arrMap = [];\n        this.blueHeadPool = new cc.NodePool();\n        this.blueCornerPool = new cc.NodePool();\n        this.blueStraightPool = new cc.NodePool();\n        this.redHeadPool = new cc.NodePool();\n        this.redCornerPool = new cc.NodePool();\n        this.redStraightPool = new cc.NodePool();\n    },\n    addPath(arrPath,id){\n        this.arrMap = Game.BlockManager.arrMap;\n        if (this.arrMap.length <= 0){\n            return;\n        }\n        for(let path =0; path < arrPath.length; path++){\n            if (path === 0){\n                let angle = this.twoNodeRotation(arrPath[path],arrPath[path+1]);\n                let pos1 = this.arrMap[arrPath[path].row][arrPath[path].col].pos;\n                let pos2 = this.arrMap[arrPath[path+1].row][arrPath[path+1].col].pos;\n                this.setHead(id,angle,pos1);\n                let data = this.straightPosAndLong(pos1,pos2);\n                this.setStraight(id,angle,data.pos,data.long);\n\n            }else if(path === arrPath.length - 1){\n                let angle = this.twoNodeRotation(arrPath[path],arrPath[path-1]);\n                let pos = this.arrMap[arrPath[path].row][arrPath[path].col].pos;\n                this.setHead(id,angle,pos);\n            }else{\n                let angleCorner = this.threeNodeRotation(arrPath[path-1],arrPath[path],arrPath[path+1]);\n                let pos1 = this.arrMap[arrPath[path].row][arrPath[path].col].pos;\n                let pos2 = this.arrMap[arrPath[path+1].row][arrPath[path+1].col].pos;\n                this.setCorner(id,angleCorner,pos1);\n                let data = this.straightPosAndLong(pos1,pos2);\n                let angle  = this.twoNodeRotation(arrPath[path],arrPath[path+1]);\n                this.setStraight(id,angle,data.pos,data.long);\n            }\n\n        }\n    },\n    twoNodeRotation(path1,path2){\n        let angle = 0;\n        if (path1.row !== path2.row){\n            angle = path1.row > path2.row ? 180 : 0;\n        }\n        else if(path1.col !== path2.col){\n            angle = path1.col > path2.col ? 90 : 270;\n        }\n        return angle;\n    },\n    threeNodeRotation(path1,path2,path3){\n        let angle = 0;\n        if (path1.row !== path2.row){\n            if (path1.row > path2.row){\n                angle = path2.col > path3.col ? 0 : 270;\n            }\n            else if(path1.row < path2.row){\n                angle = path2.col > path3.col ? 90 : 180;\n            }\n        }else{\n            if (path1.col > path2.col){\n                angle = path2.row > path3.row ? 180 : 270;\n            }\n            else if(path1.col < path2.col){\n                angle = path2.row > path3.row ? 90 : 0;\n            }\n        }\n        return angle;\n    },\n    setHead(id,angle,pos){\n        if (id === Game.PlayerManager.self.playerId){\n            var head = this.blueHeadPool.get();\n            if (!head) {\n                head = cc.instantiate(this.blueHead);\n            }\n        } else{\n            var head = this.redHeadPool.get();\n            if (!head) {\n                head = cc.instantiate(this.redHead);\n            }\n        }\n        head.parent = this.node;\n        head.rotation = angle;\n        head.setPosition(pos);\n        head.getComponent(cc.Animation).play(\"pathHead\");\n        head.getComponent(\"path\").initDelete(0.4);\n        //Game.EffectManager.initEffect(pos);\n    },\n    setCorner(id,angle,pos){\n        if (id === Game.PlayerManager.self.playerId){\n            var corner = this.blueCornerPool.get();\n            if (!corner) {\n                corner = cc.instantiate(this.blueCorner);\n            }\n        } else{\n            var corner = this.redCornerPool.get();\n            if (!corner) {\n                corner = cc.instantiate(this.redCorner);\n            }\n        }\n        corner.parent = this.node;\n        corner.rotation = angle;\n        corner.setPosition(pos);\n        corner.getComponent(\"path\").initDelete(0.4);\n    },\n    setStraight(id,angle,pos,long){\n        if (id === Game.PlayerManager.self.playerId){\n            var straight = this.blueStraightPool.get();\n            if (!straight) {\n                straight = cc.instantiate(this.blueStraight);\n            }\n        } else{\n            var straight = this.redStraightPool.get();\n            if (!straight) {\n                straight = cc.instantiate(this.redStraight);\n            }\n        }\n        straight.parent = this.node;\n        straight.rotation = angle;\n        straight.setPosition(pos);\n        straight.height = long;\n        straight.getChildByName(\"electric\").width = long * 2 + 50;\n        straight.getComponent(\"path\").initDelete(0.4);\n    },\n    straightPosAndLong(pos1,pos2){\n        var long = 0;\n        var pos = cc.p();\n        if (pos1.x === pos2.x){\n            if (pos1.y > pos2.y){\n                pos = cc.p(pos1.x, pos1.y - 20);\n                long = pos1.y - pos2.y - 20;\n            }else{\n                pos = cc.p(pos1.x, pos1.y + 20);\n                long = pos2.y - pos1.y - 20;\n            }\n        } else if (pos1.y === pos2.y){\n            if (pos1.x > pos2.x){\n                pos = cc.p(pos1.x - 20, pos1.y);\n                long = pos1.x - pos2.x - 20;\n            }else{\n                pos = cc.p(pos1.x + 20, pos1.y);\n                long = pos2.x - pos1.x - 20;\n            }\n        }\n        let data = {\n            pos: pos,\n            long: long\n        };\n        return data;\n    },\n    recyclePath(target){\n        switch (target.name){\n            case \"blueHead\": this.blueHeadPool.put(target);\n                break;\n            case \"blueCorner\": this.blueCornerPool.put(target);\n                break;\n            case \"blueStraight\": this.blueStraightPool.put(target);\n                break;\n            case \"redHead\": this.redHeadPool.put(target);\n                break;\n            case \"redCorner\": this.redCornerPool.put(target);\n                break;\n            case \"redStraight\": this.redStraightPool.put(target);\n                break;\n        }\n    }\n    // update (dt) {},\n});\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n    },\n    start () {\n\n    },\n    initDelete(time){\n        this.scheduleOnce(()=>{\n           Game.PathManager.recyclePath(this.node);\n        },time)\n    }\n\n    // update (dt) {},\n});\n","cc.Class({\n    extends: cc.Component,\n    properties: {\n        playerSprite: {\n            default: null,\n            type: cc.Sprite\n        },\n\n    },\n    setData: function(userInfo) {\n        this.userInfo = userInfo;\n        this.playerId = userInfo.id ? userInfo.id : userInfo.userId;\n        this.playerSprite.node.active = true;\n        Game.GameManager.userInfoReq(this.playerId);\n    },\n\n    init: function() {\n        this.userInfo = null;\n        clientEvent.on(clientEvent.eventType.playerAccountGet, this.userInfoSet, this);\n    },\n\n    userInfoSet: function(recvMsg) {\n        if (recvMsg.account == this.playerId) {\n            if (recvMsg.headIcon && recvMsg.headIcon !== \"-\") {\n                cc.loader.load({url: recvMsg.headIcon, type: 'png'}, function(err, texture) {\n                    var spriteFrame = new cc.SpriteFrame(texture, cc.Rect(0, 0, texture.width, texture.height));\n                    if(this.playerSprite) {\n                        this.playerSprite.spriteFrame = spriteFrame;\n                    }\n                }.bind(this));\n            }\n        }\n    },\n\n    onDestroy() {\n        clientEvent.off(clientEvent.eventType.playerAccountGet, this.userInfoSet, this);\n    },\n\n    onLoad() {\n        this.init();\n    }\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        selfNode: cc.Node,\n        rivalNode: cc.Node,\n    },\n\n    onLoad() {\n        Game.PlayerManager = this;\n        this.playerInit();\n    },\n    playerInit(){\n        this.self = this.selfNode.getComponent(\"player\");\n        this.self.init(GLB.playerUserIds[0]);\n        this.rival = this.rivalNode.getComponent(\"player\");\n        this.rival.init(GLB.playerUserIds[1]);\n    }\n});\n","var mvs = require(\"Matchvs\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        scoreLabel:{\n            default: null,\n            type: cc.Node\n        }\n    },\n    onLoad(){\n        this.score = 0;\n        this.combo = 1;\n        this.maxCombo = 0;\n        this.blockNumber = 0;\n        this.buff = 20;\n    },\n    init(playerId) {\n        this.playerId = playerId;\n    },\n    addScore() {\n        this.score += 10 * this.combo;\n        this.blockNumber +=2;\n        this.buff = 20;\n        this.combo++;\n        if (this.combo > this.maxCombo){\n            this.maxCombo = this.combo;\n        }\n        this.changeScore();\n    },\n    buffTime() {\n        if(!Game.ClickManager.bClick){\n            return;\n        }\n        this.buff--;\n        if (this.buff <=0){\n            this.combo = 1;\n        }\n    },\n    getData(){\n        var data = {\n                score: this.score,\n                combo: this.combo,\n                maxCombo: this.maxCombo,\n                blockNumber: this.blockNumber,\n                buff: this.buff\n        }\n        return data;\n    },\n    setData(data){\n        this.score = data.score;\n        this.combo = data.combo;\n        this.maxCombo = data.maxCombo;\n        this.blockNumber = data.blockNumber;\n        this.buff = data.buff;\n\n    },\n    changeScore(){\n        this.scoreLabel.getComponent(cc.Label).string = this.score;\n        this.node.dispatchEvent(new cc.Event.EventCustom(clientEvent.eventType.setScoreProgressBar,true));\n    },\n});\n","/**\n * 此文件来自于pomelo helloworld lib/build/build.js\n */\n/**\n * hasOwnProperty.\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar pomeloBuild = cc.Class({\n    onLoad: function () {\n        /**\n         * Registered modules.\n         */\n\n        this.modules = {};\n\n        /**\n         * Registered aliases.\n         */\n\n        this.aliases = {};\n    },\n\n    requirePomelo: function(path, parent, orig) {\n        var resolved = this.resolve(path);\n\n        // lookup failed\n        if (null === resolved) {\n            orig = orig || path;\n            parent = parent || 'root';\n            var err = new Error('Failed to requirePomelo \"' + orig + '\" from \"' + parent + '\"');\n            err.path = orig;\n            err.parent = parent;\n            err.requirePomelo = true;\n            throw err;\n        }\n\n        var module = this.modules[resolved];\n\n        // perform real requirePomelo()\n        // by invoking the module's\n        // registered function\n        if (!module.exports) {\n            module.exports = {};\n            module.client = module.component = true;\n            module.call(this, module.exports, this.relative(resolved), module);\n        }\n\n        return module.exports;\n    },\n\n    /**\n     * Resolve `path`.\n     *\n     * Lookup:\n     *\n     *   - PATH/index.js\n     *   - PATH.js\n     *   - PATH\n     *\n     * @param {String} path\n     * @return {String} path or null\n     * @api private\n     */\n\n    resolve: function (path) {\n        if (path.charAt(0) === '/') path = path.slice(1);\n        var index = path + '/index.js';\n\n        var paths = [\n            path,\n            path + '.js',\n            path + '.json',\n            path + '/index.js',\n            path + '/index.json'\n        ];\n\n        for (var i = 0; i < paths.length; i++) {\n            var resolvePath = paths[i];\n            if (has.call(this.modules, resolvePath)) return resolvePath;\n        }\n\n        if (has.call(this.aliases, index)) {\n            return this.aliases[index];\n        }\n    },\n\n    /**\n     * Normalize `path` relative to the current path.\n     *\n     * @param {String} curr\n     * @param {String} path\n     * @return {String}\n     * @api private\n     */\n\n    normalize: function (curr, path) {\n        var segs = [];\n\n        if ('.' !== path.charAt(0)) return path;\n\n        curr = curr.split('/');\n        path = path.split('/');\n\n        for (var i = 0; i < path.length; ++i) {\n            if ('..' === path[i]) {\n                curr.pop();\n            } else if ('.' !== path[i] && '' !== path[i]) {\n                segs.push(path[i]);\n            }\n        }\n\n        return curr.concat(segs).join('/');\n    },\n\n    /**\n     * Register module at `path` with callback `definition`.\n     *\n     * @param {String} path\n     * @param {Function} definition\n     * @api private\n     */\n\n    register: function (path, definition) {\n        this.modules[path] = definition;\n    },\n\n    /**\n     * Alias a module definition.\n     *\n     * @param {String} from\n     * @param {String} to\n     * @api private\n     */\n\n    alias: function (from, to) {\n        if (!has.call(this.modules, from)) {\n            throw new Error('Failed to alias \"' + from + '\", it does not exist');\n        }\n        this.aliases[to] = from;\n    },\n\n    /**\n     * Return a requirePomelo function relative to the `parent` path.\n     *\n     * @param {String} parent\n     * @return {Function}\n     * @api private\n     */\n\n    relative: function (parent) {\n        var p = this.normalize(parent, '..');\n\n        /**\n         * lastIndexOf helper.\n         */\n\n        function lastIndexOf(arr, obj) {\n            var i = arr.length;\n            while (i--) {\n                if (arr[i] === obj) return i;\n            }\n            return -1;\n        }\n\n        /**\n         * The relative requirePomelo() itself.\n         */\n\n        var selfPomelo = this;\n        function localrequirePomelo(path) {\n            var resolved = localrequirePomelo.resolve(path);\n            return selfPomelo.requirePomelo(resolved, parent, path);\n        }\n\n        /**\n         * Resolve relative to the parent.\n         */\n\n        localrequirePomelo.resolve = function (path) {\n            var c = path.charAt(0);\n            if ('/' === c) return path.slice(1);\n            if ('.' === c) return selfPomelo.normalize(p, path);\n\n            // resolve deps by returning\n            // the dep in the nearest \"deps\"\n            // directory\n            var segs = parent.split('/');\n            var i = lastIndexOf(segs, 'deps') + 1;\n            if (!i) i = 0;\n            path = segs.slice(0, i + 1).join('/') + '/deps/' + path;\n            return path;\n        };\n\n        /**\n         * Check if module is defined at `path`.\n         */\n\n        localrequirePomelo.exists = function (path) {\n            return has.call(selfPomelo.modules, localrequirePomelo.resolve(path));\n        };\n\n        return localrequirePomelo;\n    }\n});\n\npomeloBuild.create = function () {\n    var pomeloBuildObj = new pomeloBuild();\n    pomeloBuildObj.onLoad();\n\n    pomeloBuildObj.register(\"component-indexof/index.js\", function (exports, requirePomelo, module) {\n\n        var indexOf = [].indexOf;\n\n        module.exports = function (arr, obj) {\n            if (indexOf) return arr.indexOf(obj);\n            for (var i = 0; i < arr.length; ++i) {\n                if (arr[i] === obj) return i;\n            }\n            return -1;\n        };\n    });\n\n    pomeloBuildObj.register(\"component-emitter/index.js\", function (exports, requirePomelo, module) {\n\n        /**\n         * Module dependencies.\n         */\n\n        var index = requirePomelo('indexof');\n\n        /**\n         * Expose `Emitter`.\n         */\n\n        module.exports = Emitter;\n\n        /**\n         * Initialize a new `Emitter`.\n         *\n         * @api public\n         */\n\n        function Emitter(obj) {\n            if (obj) return mixin(obj);\n        };\n\n        /**\n         * Mixin the emitter properties.\n         *\n         * @param {Object} obj\n         * @return {Object}\n         * @api private\n         */\n\n        function mixin(obj) {\n            for (var key in Emitter.prototype) {\n                obj[key] = Emitter.prototype[key];\n            }\n            return obj;\n        }\n\n        /**\n         * Listen on the given `event` with `fn`.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.on = function (event, fn) {\n            this._callbacks = this._callbacks || {};\n            (this._callbacks[event] = this._callbacks[event] || [])\n                .push(fn);\n            return this;\n        };\n\n        /**\n         * Adds an `event` listener that will be invoked a single\n         * time then automatically removed.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.once = function (event, fn) {\n            var self = this;\n            this._callbacks = this._callbacks || {};\n\n            function on() {\n                self.off(event, on);\n                fn.apply(this, arguments);\n            }\n\n            fn._off = on;\n            this.on(event, on);\n            return this;\n        };\n\n        /**\n         * Remove the given callback for `event` or all\n         * registered callbacks.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.off =\n            Emitter.prototype.removeListener =\n                Emitter.prototype.removeAllListeners = function (event, fn) {\n                    this._callbacks = this._callbacks || {};\n\n                    // all\n                    if (0 === arguments.length) {\n                        this._callbacks = {};\n                        return this;\n                    }\n\n                    // specific event\n                    var callbacks = this._callbacks[event];\n                    if (!callbacks) return this;\n\n                    // remove all handlers\n                    if (1 === arguments.length) {\n                        delete this._callbacks[event];\n                        return this;\n                    }\n\n                    // remove specific handler\n                    var i = index(callbacks, fn._off || fn);\n                    if (~i) callbacks.splice(i, 1);\n                    return this;\n                };\n\n        /**\n         * Emit `event` with the given args.\n         *\n         * @param {String} event\n         * @param {Mixed} ...\n         * @return {Emitter}\n         */\n\n        Emitter.prototype.emit = function (event) {\n            this._callbacks = this._callbacks || {};\n            var args = [].slice.call(arguments, 1), callbacks = this._callbacks[event];\n\n            if (callbacks) {\n                callbacks = callbacks.slice(0);\n                for (var i = 0, len = callbacks.length; i < len; ++i) {\n                    callbacks[i].apply(this, args);\n                }\n            }\n\n            return this;\n        };\n\n        /**\n         * Return array of callbacks for `event`.\n         *\n         * @param {String} event\n         * @return {Array}\n         * @api public\n         */\n\n        Emitter.prototype.listeners = function (event) {\n            this._callbacks = this._callbacks || {};\n            return this._callbacks[event] || [];\n        };\n\n        /**\n         * Check if this emitter has `event` handlers.\n         *\n         * @param {String} event\n         * @return {Boolean}\n         * @api public\n         */\n\n        Emitter.prototype.hasListeners = function (event) {\n            return !!this.listeners(event).length;\n        };\n\n    });\n\n    pomeloBuildObj.register(\"NetEase-pomelo-protocol/lib/protocol.js\", function (exports, requirePomelo, module) {\n        (function (exports, ByteArray, global) {\n            var Protocol = exports;\n\n            var PKG_HEAD_BYTES = 4;\n            var MSG_FLAG_BYTES = 1;\n            var MSG_ROUTE_CODE_BYTES = 2;\n            var MSG_ID_MAX_BYTES = 5;\n            var MSG_ROUTE_LEN_BYTES = 1;\n\n            var MSG_ROUTE_CODE_MAX = 0xffff;\n\n            var MSG_COMPRESS_ROUTE_MASK = 0x1;\n            var MSG_TYPE_MASK = 0x7;\n\n            var Package = Protocol.Package = {};\n            var Message = Protocol.Message = {};\n\n            Package.TYPE_HANDSHAKE = 1;\n            Package.TYPE_HANDSHAKE_ACK = 2;\n            Package.TYPE_HEARTBEAT = 3;\n            Package.TYPE_DATA = 4;\n            Package.TYPE_KICK = 5;\n\n            Message.TYPE_REQUEST = 0;\n            Message.TYPE_NOTIFY = 1;\n            Message.TYPE_RESPONSE = 2;\n            Message.TYPE_PUSH = 3;\n\n            /**\n             * pomele client encode\n             * id message id;\n             * route message route\n             * msg message body\n             * socketio current support string\n             */\n            Protocol.strencode = function (str) {\n                var byteArray = new ByteArray(str.length * 3);\n                var offset = 0;\n                for (var i = 0; i < str.length; i++) {\n                    var charCode = str.charCodeAt(i);\n                    var codes = null;\n                    if (charCode <= 0x7f) {\n                        codes = [charCode];\n                    } else if (charCode <= 0x7ff) {\n                        codes = [0xc0 | (charCode >> 6), 0x80 | (charCode & 0x3f)];\n                    } else {\n                        codes = [0xe0 | (charCode >> 12), 0x80 | ((charCode & 0xfc0) >> 6), 0x80 | (charCode & 0x3f)];\n                    }\n                    for (var j = 0; j < codes.length; j++) {\n                        byteArray[offset] = codes[j];\n                        ++offset;\n                    }\n                }\n                var _buffer = new ByteArray(offset);\n                copyArray(_buffer, 0, byteArray, 0, offset);\n                return _buffer;\n            };\n\n            /**\n             * client decode\n             * msg String data\n             * return Message Object\n             */\n            Protocol.strdecode = function (buffer) {\n                var bytes = new ByteArray(buffer);\n                var array = [];\n                var offset = 0;\n                var charCode = 0;\n                var end = bytes.length;\n                while (offset < end) {\n                    if (bytes[offset] < 128) {\n                        charCode = bytes[offset];\n                        offset += 1;\n                    } else if (bytes[offset] < 224) {\n                        charCode = ((bytes[offset] & 0x3f) << 6) + (bytes[offset + 1] & 0x3f);\n                        offset += 2;\n                    } else {\n                        charCode = ((bytes[offset] & 0x0f) << 12) + ((bytes[offset + 1] & 0x3f) << 6) + (bytes[offset + 2] & 0x3f);\n                        offset += 3;\n                    }\n                    array.push(charCode);\n                }\n                var res = '';\n                var chunk = 8 * 1024;\n                var i;\n                for (i = 0; i < array.length / chunk; i++) {\n                    res += String.fromCharCode.apply(null, array.slice(i * chunk, (i + 1) * chunk));\n                }\n                res += String.fromCharCode.apply(null, array.slice(i * chunk));\n                return res;\n            };\n\n            /**\n             * Package protocol encode.\n             *\n             * Pomelo package format:\n             * +------+-------------+------------------+\n             * | type | body length |       body       |\n             * +------+-------------+------------------+\n             *\n             * Head: 4bytes\n             *   0: package type,\n             *      1 - handshake,\n             *      2 - handshake ack,\n             *      3 - heartbeat,\n             *      4 - data\n             *      5 - kick\n             *   1 - 3: big-endian body length\n             * Body: body length bytes\n             *\n             * @param  {Number}    type   package type\n             * @param  {ByteArray} body   body content in bytes\n             * @return {ByteArray}        new byte array that contains encode result\n             */\n            Package.encode = function (type, body) {\n                var length = body ? body.length : 0;\n                var buffer = new ByteArray(PKG_HEAD_BYTES + length);\n                var index = 0;\n                buffer[index++] = type & 0xff;\n                buffer[index++] = (length >> 16) & 0xff;\n                buffer[index++] = (length >> 8) & 0xff;\n                buffer[index++] = length & 0xff;\n                if (body) {\n                    copyArray(buffer, index, body, 0, length);\n                }\n                return buffer;\n            };\n\n            /**\n             * Package protocol decode.\n             * See encode for package format.\n             *\n             * @param  {ByteArray} buffer byte array containing package content\n             * @return {Object}           {type: package type, buffer: body byte array}\n             */\n            Package.decode = function (buffer) {\n                var bytes = new ByteArray(buffer);\n                var type = bytes[0];\n                var index = 1;\n                var length = ((bytes[index++]) << 16 | (bytes[index++]) << 8 | bytes[index++]) >>> 0;\n                var body = length ? new ByteArray(length) : null;\n                copyArray(body, 0, bytes, PKG_HEAD_BYTES, length);\n                return {'type': type, 'body': body};\n            };\n\n            /**\n             * Message protocol encode.\n             *\n             * @param  {Number} id            message id\n             * @param  {Number} type          message type\n             * @param  {Number} compressRoute whether compress route\n             * @param  {Number|String} route  route code or route string\n             * @param  {Buffer} msg           message body bytes\n             * @return {Buffer}               encode result\n             */\n            Message.encode = function (id, type, compressRoute, route, msg) {\n                // caculate message max length\n                var idBytes = msgHasId(type) ? caculateMsgIdBytes(id) : 0;\n                var msgLen = MSG_FLAG_BYTES + idBytes;\n\n                if (msgHasRoute(type)) {\n                    if (compressRoute) {\n                        if (typeof route !== 'number') {\n                            throw new Error('error flag for number route!');\n                        }\n                        msgLen += MSG_ROUTE_CODE_BYTES;\n                    } else {\n                        msgLen += MSG_ROUTE_LEN_BYTES;\n                        if (route) {\n                            route = Protocol.strencode(route);\n                            if (route.length > 255) {\n                                throw new Error('route maxlength is overflow');\n                            }\n                            msgLen += route.length;\n                        }\n                    }\n                }\n\n                if (msg) {\n                    msgLen += msg.length;\n                }\n\n                var buffer = new ByteArray(msgLen);\n                var offset = 0;\n\n                // add flag\n                offset = encodeMsgFlag(type, compressRoute, buffer, offset);\n\n                // add message id\n                if (msgHasId(type)) {\n                    offset = encodeMsgId(id, idBytes, buffer, offset);\n                }\n\n                // add route\n                if (msgHasRoute(type)) {\n                    offset = encodeMsgRoute(compressRoute, route, buffer, offset);\n                }\n\n                // add body\n                if (msg) {\n                    offset = encodeMsgBody(msg, buffer, offset);\n                }\n\n                return buffer;\n            };\n\n            /**\n             * Message protocol decode.\n             *\n             * @param  {Buffer|Uint8Array} buffer message bytes\n             * @return {Object}            message object\n             */\n            Message.decode = function (buffer) {\n                var bytes = new ByteArray(buffer);\n                var bytesLen = bytes.length || bytes.byteLength;\n                var offset = 0;\n                var id = 0;\n                var route = null;\n\n                // parse flag\n                var flag = bytes[offset++];\n                var compressRoute = flag & MSG_COMPRESS_ROUTE_MASK;\n                var type = (flag >> 1) & MSG_TYPE_MASK;\n\n                // parse id\n                if (msgHasId(type)) {\n                    var byte = bytes[offset++];\n                    id = byte & 0x7f;\n                    while (byte & 0x80) {\n                        id <<= 7;\n                        byte = bytes[offset++];\n                        id |= byte & 0x7f;\n                    }\n                }\n\n                // parse route\n                if (msgHasRoute(type)) {\n                    if (compressRoute) {\n                        route = (bytes[offset++]) << 8 | bytes[offset++];\n                    } else {\n                        var routeLen = bytes[offset++];\n                        if (routeLen) {\n                            route = new ByteArray(routeLen);\n                            copyArray(route, 0, bytes, offset, routeLen);\n                            route = Protocol.strdecode(route);\n                        } else {\n                            route = '';\n                        }\n                        offset += routeLen;\n                    }\n                }\n\n                // parse body\n                var bodyLen = bytesLen - offset;\n                var body = new ByteArray(bodyLen);\n\n                copyArray(body, 0, bytes, offset, bodyLen);\n\n                return {\n                    'id': id, 'type': type, 'compressRoute': compressRoute,\n                    'route': route, 'body': body\n                };\n            };\n\n            var copyArray = function (dest, doffset, src, soffset, length) {\n                if ('function' === typeof src.copy) {\n                    // Buffer\n                    src.copy(dest, doffset, soffset, soffset + length);\n                } else {\n                    // Uint8Array\n                    for (var index = 0; index < length; index++) {\n                        dest[doffset++] = src[soffset++];\n                    }\n                }\n            };\n\n            var msgHasId = function (type) {\n                return type === Message.TYPE_REQUEST || type === Message.TYPE_RESPONSE;\n            };\n\n            var msgHasRoute = function (type) {\n                return type === Message.TYPE_REQUEST || type === Message.TYPE_NOTIFY ||\n                    type === Message.TYPE_PUSH;\n            };\n\n            var caculateMsgIdBytes = function (id) {\n                var len = 0;\n                do {\n                    len += 1;\n                    id >>= 7;\n                } while (id > 0);\n                return len;\n            };\n\n            var encodeMsgFlag = function (type, compressRoute, buffer, offset) {\n                if (type !== Message.TYPE_REQUEST && type !== Message.TYPE_NOTIFY &&\n                    type !== Message.TYPE_RESPONSE && type !== Message.TYPE_PUSH) {\n                    throw new Error('unkonw message type: ' + type);\n                }\n\n                buffer[offset] = (type << 1) | (compressRoute ? 1 : 0);\n\n                return offset + MSG_FLAG_BYTES;\n            };\n\n            var encodeMsgId = function (id, idBytes, buffer, offset) {\n                var index = offset + idBytes - 1;\n                buffer[index--] = id & 0x7f;\n                while (index >= offset) {\n                    id >>= 7;\n                    buffer[index--] = id & 0x7f | 0x80;\n                }\n                return offset + idBytes;\n            };\n\n            var encodeMsgRoute = function (compressRoute, route, buffer, offset) {\n                if (compressRoute) {\n                    if (route > MSG_ROUTE_CODE_MAX) {\n                        throw new Error('route number is overflow');\n                    }\n\n                    buffer[offset++] = (route >> 8) & 0xff;\n                    buffer[offset++] = route & 0xff;\n                } else {\n                    if (route) {\n                        buffer[offset++] = route.length & 0xff;\n                        copyArray(buffer, offset, route, 0, route.length);\n                        offset += route.length;\n                    } else {\n                        buffer[offset++] = 0;\n                    }\n                }\n\n                return offset;\n            };\n\n            var encodeMsgBody = function (msg, buffer, offset) {\n                copyArray(buffer, offset, msg, 0, msg.length);\n                return offset + msg.length;\n            };\n\n            module.exports = Protocol;\n        })('object' === typeof module ? module.exports : (this.Protocol = {}), 'object' === typeof module ? Buffer : Uint8Array, this);\n\n    });\n\n    pomeloBuildObj.register(\"pomelonode-pomelo-protobuf/lib/client/protobuf.js\", function (exports, requirePomelo, module) {\n        /* ProtocolBuffer client 0.1.0*/\n\n        /**\n         * pomelo-protobuf\n         * @author <zhang0935@gmail.com>\n         */\n\n        /**\n         * Protocol buffer root\n         * In browser, it will be window.protbuf\n         */\n        (function (exports, global) {\n            var Protobuf = exports;\n\n            Protobuf.init = function (opts) {\n                //On the serverside, use serverProtos to encode messages send to client\n                Protobuf.encoder.init(opts.encoderProtos);\n\n                //On the serverside, user clientProtos to decode messages receive from clients\n                Protobuf.decoder.init(opts.decoderProtos);\n            };\n\n            Protobuf.encode = function (key, msg) {\n                return Protobuf.encoder.encode(key, msg);\n            };\n\n            Protobuf.decode = function (key, msg) {\n                return Protobuf.decoder.decode(key, msg);\n            };\n\n            // exports to support for components\n            module.exports = Protobuf;\n        })('object' === typeof module ? module.exports : (this.protobuf = {}), this);\n\n        /**\n         * constants\n         */\n        (function (exports, global) {\n            var constants = exports.constants = {};\n\n            constants.TYPES = {\n                uInt32: 0,\n                sInt32: 0,\n                int32: 0,\n                double: 1,\n                string: 2,\n                message: 2,\n                float: 5\n            };\n\n        })('undefined' !== typeof protobuf ? protobuf : module.exports, this);\n\n        /**\n         * util module\n         */\n        (function (exports, global) {\n\n            var Util = exports.util = {};\n\n            Util.isSimpleType = function (type) {\n                return ( type === 'uInt32' ||\n                type === 'sInt32' ||\n                type === 'int32' ||\n                type === 'uInt64' ||\n                type === 'sInt64' ||\n                type === 'float' ||\n                type === 'double' );\n            };\n\n        })('undefined' !== typeof protobuf ? protobuf : module.exports, this);\n\n        /**\n         * codec module\n         */\n        (function (exports, global) {\n\n            var Codec = exports.codec = {};\n\n            var buffer = new ArrayBuffer(8);\n            var float32Array = new Float32Array(buffer);\n            var float64Array = new Float64Array(buffer);\n            var uInt8Array = new Uint8Array(buffer);\n\n            Codec.encodeUInt32 = function (n) {\n                var n = parseInt(n);\n                if (isNaN(n) || n < 0) {\n                    return null;\n                }\n\n                var result = [];\n                do {\n                    var tmp = n % 128;\n                    var next = Math.floor(n / 128);\n\n                    if (next !== 0) {\n                        tmp = tmp + 128;\n                    }\n                    result.push(tmp);\n                    n = next;\n                } while (n !== 0);\n\n                return result;\n            };\n\n            Codec.encodeSInt32 = function (n) {\n                var n = parseInt(n);\n                if (isNaN(n)) {\n                    return null;\n                }\n                n = n < 0 ? (Math.abs(n) * 2 - 1) : n * 2;\n\n                return Codec.encodeUInt32(n);\n            };\n\n            Codec.decodeUInt32 = function (bytes) {\n                var n = 0;\n\n                for (var i = 0; i < bytes.length; i++) {\n                    var m = parseInt(bytes[i]);\n                    n = n + ((m & 0x7f) * Math.pow(2, (7 * i)));\n                    if (m < 128) {\n                        return n;\n                    }\n                }\n\n                return n;\n            };\n\n\n            Codec.decodeSInt32 = function (bytes) {\n                var n = this.decodeUInt32(bytes);\n                var flag = ((n % 2) === 1) ? -1 : 1;\n\n                n = ((n % 2 + n) / 2) * flag;\n\n                return n;\n            };\n\n            Codec.encodeFloat = function (float) {\n                float32Array[0] = float;\n                return uInt8Array;\n            };\n\n            Codec.decodeFloat = function (bytes, offset) {\n                if (!bytes || bytes.length < (offset + 4)) {\n                    return null;\n                }\n\n                for (var i = 0; i < 4; i++) {\n                    uInt8Array[i] = bytes[offset + i];\n                }\n\n                return float32Array[0];\n            };\n\n            Codec.encodeDouble = function (double) {\n                float64Array[0] = double;\n                return uInt8Array.subarray(0, 8);\n            };\n\n            Codec.decodeDouble = function (bytes, offset) {\n                if (!bytes || bytes.length < (8 + offset)) {\n                    return null;\n                }\n\n                for (var i = 0; i < 8; i++) {\n                    uInt8Array[i] = bytes[offset + i];\n                }\n\n                return float64Array[0];\n            };\n\n            Codec.encodeStr = function (bytes, offset, str) {\n                for (var i = 0; i < str.length; i++) {\n                    var code = str.charCodeAt(i);\n                    var codes = encode2UTF8(code);\n\n                    for (var j = 0; j < codes.length; j++) {\n                        bytes[offset] = codes[j];\n                        offset++;\n                    }\n                }\n\n                return offset;\n            };\n\n            /**\n             * Decode string from utf8 bytes\n             */\n            Codec.decodeStr = function (bytes, offset, length) {\n                var array = [];\n                var end = offset + length;\n\n                while (offset < end) {\n                    var code = 0;\n\n                    if (bytes[offset] < 128) {\n                        code = bytes[offset];\n\n                        offset += 1;\n                    } else if (bytes[offset] < 224) {\n                        code = ((bytes[offset] & 0x3f) << 6) + (bytes[offset + 1] & 0x3f);\n                        offset += 2;\n                    } else {\n                        code = ((bytes[offset] & 0x0f) << 12) + ((bytes[offset + 1] & 0x3f) << 6) + (bytes[offset + 2] & 0x3f);\n                        offset += 3;\n                    }\n\n                    array.push(code);\n\n                }\n\n                var str = '';\n                for (var i = 0; i < array.length;) {\n                    str += String.fromCharCode.apply(null, array.slice(i, i + 10000));\n                    i += 10000;\n                }\n\n                return str;\n            };\n\n            /**\n             * Return the byte length of the str use utf8\n             */\n            Codec.byteLength = function (str) {\n                if (typeof(str) !== 'string') {\n                    return -1;\n                }\n\n                var length = 0;\n\n                for (var i = 0; i < str.length; i++) {\n                    var code = str.charCodeAt(i);\n                    length += codeLength(code);\n                }\n\n                return length;\n            };\n\n            /**\n             * Encode a unicode16 char code to utf8 bytes\n             */\n            function encode2UTF8(charCode) {\n                if (charCode <= 0x7f) {\n                    return [charCode];\n                } else if (charCode <= 0x7ff) {\n                    return [0xc0 | (charCode >> 6), 0x80 | (charCode & 0x3f)];\n                } else {\n                    return [0xe0 | (charCode >> 12), 0x80 | ((charCode & 0xfc0) >> 6), 0x80 | (charCode & 0x3f)];\n                }\n            }\n\n            function codeLength(code) {\n                if (code <= 0x7f) {\n                    return 1;\n                } else if (code <= 0x7ff) {\n                    return 2;\n                } else {\n                    return 3;\n                }\n            }\n        })('undefined' !== typeof protobuf ? protobuf : module.exports, this);\n\n        /**\n         * encoder module\n         */\n        (function (exports, global) {\n\n            var protobuf = exports;\n            var MsgEncoder = exports.encoder = {};\n\n            var codec = protobuf.codec;\n            var constant = protobuf.constants;\n            var util = protobuf.util;\n\n            MsgEncoder.init = function (protos) {\n                this.protos = protos || {};\n            };\n\n            MsgEncoder.encode = function (route, msg) {\n                //Get protos from protos map use the route as key\n                var protos = this.protos[route];\n\n                //Check msg\n                if (!checkMsg(msg, protos)) {\n                    return null;\n                }\n\n                //Set the length of the buffer 2 times bigger to prevent overflow\n                var length = codec.byteLength(JSON.stringify(msg));\n\n                //Init buffer and offset\n                var buffer = new ArrayBuffer(length);\n                var uInt8Array = new Uint8Array(buffer);\n                var offset = 0;\n\n                if (!!protos) {\n                    offset = encodeMsg(uInt8Array, offset, protos, msg);\n                    if (offset > 0) {\n                        return uInt8Array.subarray(0, offset);\n                    }\n                }\n\n                return null;\n            };\n\n            /**\n             * Check if the msg follow the defination in the protos\n             */\n            function checkMsg(msg, protos) {\n                if (!protos) {\n                    return false;\n                }\n\n                for (var name in protos) {\n                    var proto = protos[name];\n\n                    //All required element must exist\n                    switch (proto.option) {\n                        case 'required' :\n                            if (typeof(msg[name]) === 'undefined') {\n                                return false;\n                            }\n                        case 'optional' :\n                            if (typeof(msg[name]) !== 'undefined') {\n                                var message = protos.__messages[proto.type] || MsgEncoder.protos['message ' + proto.type];\n                                if (!!message) {\n                                    checkMsg(msg[name], message);\n                                }\n                            }\n                            break;\n                        case 'repeated' :\n                            //Check nest message in repeated elements\n                            var message = protos.__messages[proto.type] || MsgEncoder.protos['message ' + proto.type];\n                            if (!!msg[name] && !!message) {\n                                for (var i = 0; i < msg[name].length; i++) {\n                                    if (!checkMsg(msg[name][i], message)) {\n                                        return false;\n                                    }\n                                }\n                            }\n                            break;\n                    }\n                }\n\n                return true;\n            }\n\n            function encodeMsg(buffer, offset, protos, msg) {\n                for (var name in msg) {\n                    if (!!protos[name]) {\n                        var proto = protos[name];\n\n                        switch (proto.option) {\n                            case 'required' :\n                            case 'optional' :\n                                offset = writeBytes(buffer, offset, encodeTag(proto.type, proto.tag));\n                                offset = encodeProp(msg[name], proto.type, offset, buffer, protos);\n                                break;\n                            case 'repeated' :\n                                if (msg[name].length > 0) {\n                                    offset = encodeArray(msg[name], proto, offset, buffer, protos);\n                                }\n                                break;\n                        }\n                    }\n                }\n\n                return offset;\n            }\n\n            function encodeProp(value, type, offset, buffer, protos) {\n                switch (type) {\n                    case 'uInt32':\n                        offset = writeBytes(buffer, offset, codec.encodeUInt32(value));\n                        break;\n                    case 'int32' :\n                    case 'sInt32':\n                        offset = writeBytes(buffer, offset, codec.encodeSInt32(value));\n                        break;\n                    case 'float':\n                        writeBytes(buffer, offset, codec.encodeFloat(value));\n                        offset += 4;\n                        break;\n                    case 'double':\n                        writeBytes(buffer, offset, codec.encodeDouble(value));\n                        offset += 8;\n                        break;\n                    case 'string':\n                        var length = codec.byteLength(value);\n\n                        //Encode length\n                        offset = writeBytes(buffer, offset, codec.encodeUInt32(length));\n                        //write string\n                        codec.encodeStr(buffer, offset, value);\n                        offset += length;\n                        break;\n                    default :\n                        var message = protos.__messages[type] || MsgEncoder.protos['message ' + type];\n                        if (!!message) {\n                            //Use a tmp buffer to build an internal msg\n                            var tmpBuffer = new ArrayBuffer(codec.byteLength(JSON.stringify(value)));\n                            var length = 0;\n\n                            length = encodeMsg(tmpBuffer, length, message, value);\n                            //Encode length\n                            offset = writeBytes(buffer, offset, codec.encodeUInt32(length));\n                            //contact the object\n                            for (var i = 0; i < length; i++) {\n                                buffer[offset] = tmpBuffer[i];\n                                offset++;\n                            }\n                        }\n                        break;\n                }\n\n                return offset;\n            }\n\n            /**\n             * Encode reapeated properties, simple msg and object are decode differented\n             */\n            function encodeArray(array, proto, offset, buffer, protos) {\n                var i = 0;\n\n                if (util.isSimpleType(proto.type)) {\n                    offset = writeBytes(buffer, offset, encodeTag(proto.type, proto.tag));\n                    offset = writeBytes(buffer, offset, codec.encodeUInt32(array.length));\n                    for (i = 0; i < array.length; i++) {\n                        offset = encodeProp(array[i], proto.type, offset, buffer);\n                    }\n                } else {\n                    for (i = 0; i < array.length; i++) {\n                        offset = writeBytes(buffer, offset, encodeTag(proto.type, proto.tag));\n                        offset = encodeProp(array[i], proto.type, offset, buffer, protos);\n                    }\n                }\n\n                return offset;\n            }\n\n            function writeBytes(buffer, offset, bytes) {\n                for (var i = 0; i < bytes.length; i++, offset++) {\n                    buffer[offset] = bytes[i];\n                }\n\n                return offset;\n            }\n\n            function encodeTag(type, tag) {\n                var value = constant.TYPES[type] || 2;\n                return codec.encodeUInt32((tag << 3) | value);\n            }\n        })('undefined' !== typeof protobuf ? protobuf : module.exports, this);\n\n        /**\n         * decoder module\n         */\n        (function (exports, global) {\n            var protobuf = exports;\n            var MsgDecoder = exports.decoder = {};\n\n            var codec = protobuf.codec;\n            var util = protobuf.util;\n\n            var buffer;\n            var offset = 0;\n\n            MsgDecoder.init = function (protos) {\n                this.protos = protos || {};\n            };\n\n            MsgDecoder.setProtos = function (protos) {\n                if (!!protos) {\n                    this.protos = protos;\n                }\n            };\n\n            MsgDecoder.decode = function (route, buf) {\n                var protos = this.protos[route];\n\n                buffer = buf;\n                offset = 0;\n\n                if (!!protos) {\n                    return decodeMsg({}, protos, buffer.length);\n                }\n\n                return null;\n            };\n\n            function decodeMsg(msg, protos, length) {\n                while (offset < length) {\n                    var head = getHead();\n                    var type = head.type;\n                    var tag = head.tag;\n                    var name = protos.__tags[tag];\n\n                    switch (protos[name].option) {\n                        case 'optional' :\n                        case 'required' :\n                            msg[name] = decodeProp(protos[name].type, protos);\n                            break;\n                        case 'repeated' :\n                            if (!msg[name]) {\n                                msg[name] = [];\n                            }\n                            decodeArray(msg[name], protos[name].type, protos);\n                            break;\n                    }\n                }\n\n                return msg;\n            }\n\n            /**\n             * Test if the given msg is finished\n             */\n            function isFinish(msg, protos) {\n                return (!protos.__tags[peekHead().tag]);\n            }\n\n            /**\n             * Get property head from protobuf\n             */\n            function getHead() {\n                var tag = codec.decodeUInt32(getBytes());\n\n                return {\n                    type: tag & 0x7,\n                    tag: tag >> 3\n                };\n            }\n\n            /**\n             * Get tag head without move the offset\n             */\n            function peekHead() {\n                var tag = codec.decodeUInt32(peekBytes());\n\n                return {\n                    type: tag & 0x7,\n                    tag: tag >> 3\n                };\n            }\n\n            function decodeProp(type, protos) {\n                switch (type) {\n                    case 'uInt32':\n                        return codec.decodeUInt32(getBytes());\n                    case 'int32' :\n                    case 'sInt32' :\n                        return codec.decodeSInt32(getBytes());\n                    case 'float' :\n                        var float = codec.decodeFloat(buffer, offset);\n                        offset += 4;\n                        return float;\n                    case 'double' :\n                        var double = codec.decodeDouble(buffer, offset);\n                        offset += 8;\n                        return double;\n                    case 'string' :\n                        var length = codec.decodeUInt32(getBytes());\n\n                        var str = codec.decodeStr(buffer, offset, length);\n                        offset += length;\n\n                        return str;\n                    default :\n                        var message = protos.__messages[type] || MsgDecoder.protos['message ' + type];\n                        if (!!protos && !!message) {\n                            var length = codec.decodeUInt32(getBytes());\n                            var msg = {};\n                            decodeMsg(msg, message, offset + length);\n                            return msg;\n                        }\n                        break;\n                }\n            }\n\n            function decodeArray(array, type, protos) {\n                if (util.isSimpleType(type)) {\n                    var length = codec.decodeUInt32(getBytes());\n\n                    for (var i = 0; i < length; i++) {\n                        array.push(decodeProp(type));\n                    }\n                } else {\n                    array.push(decodeProp(type, protos));\n                }\n            }\n\n            function getBytes(flag) {\n                var bytes = [];\n                var pos = offset;\n                flag = flag || false;\n\n                var b;\n\n                do {\n                    b = buffer[pos];\n                    bytes.push(b);\n                    pos++;\n                } while (b >= 128);\n\n                if (!flag) {\n                    offset = pos;\n                }\n                return bytes;\n            }\n\n            function peekBytes() {\n                return getBytes(true);\n            }\n\n        })('undefined' !== typeof protobuf ? protobuf : module.exports, this);\n\n\n    });\n\n    pomeloBuildObj.register(\"pomelonode-pomelo-jsclient-websocket/lib/pomelo-client.js\", function (exports, requirePomelo, module) {\n        (function (self) {\n            var JS_WS_CLIENT_TYPE = 'js-websocket';\n            var JS_WS_CLIENT_VERSION = '0.0.1';\n\n            var Protocol = self.Protocol;\n            var Package = Protocol.Package;\n            var Message = Protocol.Message;\n            var EventEmitter = self.EventEmitter;\n            var protobuf = self.protobuf;\n\n            var RES_OK = 200;\n            var RES_FAIL = 500;\n            var RES_OLD_CLIENT = 501;\n\n            if (typeof Object.create !== 'function') {\n                Object.create = function (o) {\n                    function F() {\n                    }\n\n                    F.prototype = o;\n                    return new F();\n                };\n            }\n\n            var root = window;\n            var pomelo = Object.create(EventEmitter.prototype); // object extend from object\n            root.pomelo = pomelo;\n            var socket = null;\n            var reqId = 0;\n            var callbacks = {};\n            var handlers = {};\n            //Map from request id to route\n            var routeMap = {};\n\n            var heartbeatInterval = 0;\n            var heartbeatTimeout = 0;\n            var nextHeartbeatTimeout = 0;\n            var gapThreshold = 100;   // heartbeat gap threashold\n            var heartbeatId = null;\n            var heartbeatTimeoutId = null;\n\n            var handshakeCallback = null;\n\n            var handshakeBuffer = {\n                'sys': {\n                    type: JS_WS_CLIENT_TYPE,\n                    version: JS_WS_CLIENT_VERSION\n                },\n                'user': {}\n            };\n\n            var initCallback = null;\n\n            pomelo.init = function (params, cb) {\n                initCallback = cb;\n                var host = params.host;\n                var port = params.port;\n\n                var wsStr = \"ws://\";\n\n                if (params.wsStr) {\n                    wsStr = params.wsStr;\n                }\n\n                var url = wsStr + host;\n                if (port) {\n                    url += ':' + port;\n                }\n\n                handshakeBuffer.user = params.user;\n                handshakeCallback = params.handshakeCallback;\n                initWebSocket(url, cb);\n            };\n\n            var initWebSocket = function (url, cb) {\n                console.log('connect to ' + url);\n                var onopen = function (event) {\n                    var obj = Package.encode(Package.TYPE_HANDSHAKE, Protocol.strencode(JSON.stringify(handshakeBuffer)));\n                    send(obj);\n                };\n                var onmessage = function (event) {\n                    processPackage(Package.decode(event.data), cb);\n                    // new package arrived, update the heartbeat timeout\n                    if (heartbeatTimeout) {\n                        nextHeartbeatTimeout = Date.now() + heartbeatTimeout;\n                    }\n                };\n                var onerror = function (event) {\n                    pomelo.emit('io-error', event);\n                    console.warn('socket error: ', JSON.stringify(event));\n                };\n                var onclose = function (event) {\n                    pomelo.emit('close', event);\n                    console.warn('socket close: ', JSON.stringify(event));\n                    // //尝试修复断线后继续发心跳包后报错\n                    // if (heartbeatId) {\n                    //     clearTimeout(heartbeatId);\n                    //     heartbeatId = null;\n                    // }\n                    //\n                    // if (heartbeatTimeoutId) {\n                    //     clearTimeout(heartbeatTimeoutId);\n                    //     heartbeatTimeoutId = null;\n                    // }\n                };\n                socket = new WebSocket(url);\n                socket.binaryType = 'arraybuffer';\n                socket.onopen = onopen;\n                socket.onmessage = onmessage;\n                socket.onerror = onerror;\n                socket.onclose = onclose;\n            };\n\n            pomelo.disconnect = function () {\n                if (socket) {\n                    if (socket.disconnect) socket.disconnect();\n                    if (socket.close) socket.close();\n                    console.log('disconnect');\n                    socket = null;\n                }\n\n                if (heartbeatId) {\n                    clearTimeout(heartbeatId);\n                    heartbeatId = null;\n                }\n                if (heartbeatTimeoutId) {\n                    clearTimeout(heartbeatTimeoutId);\n                    heartbeatTimeoutId = null;\n                }\n            };\n\n            pomelo.request = function (route, msg, cb) {\n                if (arguments.length === 2 && typeof msg === 'function') {\n                    cb = msg;\n                    msg = {};\n                } else {\n                    msg = msg || {};\n                }\n                route = route || msg.route;\n                if (!route) {\n                    return;\n                }\n\n                reqId++;\n                /**\n                 * 128及其倍数的reqId会导致服务端编解码出现异常,128及其倍数是个坑。绕过。\n                 * //pomelo-protocol.js#243\n                 *  do{\n                        m = parseInt(bytes[offset]);\n                        id += (m & 0x7f) << (7 * i);   //这个风骚的位移有bug\n                        offset++;\n                        i++;\n                    }while(m >= 128); \n                 * \n                 */\n                if (reqId % 128 == 0){\n                    reqId++;\n                }\n\n                sendMessage(reqId, route, msg);\n\n                callbacks[reqId] = cb;\n                routeMap[reqId] = route;\n            };\n\n            pomelo.notify = function (route, msg) {\n                msg = msg || {};\n                sendMessage(0, route, msg);\n            };\n\n            pomelo.clearCallback = function () {\n                if(!socket) return;\n                socket.onopen = null;\n                socket.onmessage = null;\n                socket.onerror = null;\n                socket.onclose = null;\n            };\n\n            pomelo.isConnecting = function () {\n                return (socket && socket.readyState === WebSocket.CONNECTING);\n            };\n\n            pomelo.isOpen = function () {\n                return (socket && socket.readyState === WebSocket.OPEN);\n            };\n\n            pomelo.isClosed = function () {\n                return (socket && socket.readyState === WebSocket.CLOSED);\n            };\n\n            pomelo.isClosing = function () {\n                return (socket && socket.readyState === WebSocket.CLOSING);\n            };\n\n            var sendMessage = function (reqId, route, msg) {\n                var type = reqId ? Message.TYPE_REQUEST : Message.TYPE_NOTIFY;\n\n                //compress message by protobuf\n                var protos = !!pomelo.data.protos ? pomelo.data.protos.client : {};\n                if (!!protos[route]) {\n                    msg = protobuf.encode(route, msg);\n                } else {\n                    msg = Protocol.strencode(JSON.stringify(msg));\n                }\n\n\n                var compressRoute = 0;\n                if (pomelo.dict && pomelo.dict[route]) {\n                    route = pomelo.dict[route];\n                    compressRoute = 1;\n                }\n\n                msg = Message.encode(reqId, type, compressRoute, route, msg);\n                var packet = Package.encode(Package.TYPE_DATA, msg);\n                send(packet);\n            };\n\n            var send = function (packet) {\n                if (socket) {\n                    socket.send(packet.buffer);\n                }\n            };\n\n\n            var handler = {};\n\n            var heartbeat = function (data) {\n                if (!heartbeatInterval) {\n                    // no heartbeat\n                    return;\n                }\n\n                pomelo.emit('heartbeat recv');\n\n                var obj = Package.encode(Package.TYPE_HEARTBEAT);\n                if (heartbeatTimeoutId) {\n                    clearTimeout(heartbeatTimeoutId);\n                    heartbeatTimeoutId = null;\n                }\n\n                if (heartbeatId) {\n                    // already in a heartbeat interval\n                    return;\n                }\n\n                heartbeatId = setTimeout(function () {\n                    heartbeatId = null;\n                    send(obj);\n\n                    nextHeartbeatTimeout = Date.now() + heartbeatTimeout;\n                    heartbeatTimeoutId = setTimeout(heartbeatTimeoutCb, heartbeatTimeout);\n                }, heartbeatInterval);\n            };\n\n            var heartbeatTimeoutCb = function () {\n                var gap = nextHeartbeatTimeout - Date.now();\n                if (gap > gapThreshold) {\n                    heartbeatTimeoutId = setTimeout(heartbeatTimeoutCb, gap);\n                } else {\n                    console.warn('server heartbeat timeout');\n                    pomelo.emit('heartbeat timeout');\n                    pomelo.disconnect();\n                }\n            };\n\n            var handshake = function (data) {\n                data = JSON.parse(Protocol.strdecode(data));\n                if (data.code === RES_OLD_CLIENT) {\n                    pomelo.emit('error', 'client version not fullfill');\n                    return;\n                }\n\n                if (data.code !== RES_OK) {\n                    pomelo.emit('error', 'handshake fail');\n                    return;\n                }\n\n                handshakeInit(data);\n\n                var obj = Package.encode(Package.TYPE_HANDSHAKE_ACK);\n                send(obj);\n                if (initCallback) {\n                    initCallback(socket);\n                    initCallback = null;\n                }\n            };\n\n            var onData = function (data) {\n                //probuff decode\n                var msg = Message.decode(data);\n\n                if (msg.id > 0) {\n                    msg.route = routeMap[msg.id];\n                    delete routeMap[msg.id];\n                    if (!msg.route) {\n                        return;\n                    }\n                }\n\n                msg.body = deCompose(msg);\n\n                processMessage(pomelo, msg);\n            };\n\n            var onKick = function (data) {\n                var info = JSON.parse(Protocol.strdecode(data));\n\n                var reason = \"kick\";\n                if (info.hasOwnProperty(\"reason\")) {\n                    reason = info[\"reason\"];\n                }\n\n                pomelo.emit('onKick', reason);\n            };\n\n            handlers[Package.TYPE_HANDSHAKE] = handshake;\n            handlers[Package.TYPE_HEARTBEAT] = heartbeat;\n            handlers[Package.TYPE_DATA] = onData;\n            handlers[Package.TYPE_KICK] = onKick;\n\n            var processPackage = function (msg) {\n                handlers[msg.type](msg.body);\n            };\n\n            var processMessage = function (pomelo, msg) {\n                if (!msg.id) {\n                    // server push message\n                    pomelo.emit(msg.route, msg);\n                    return;\n                }\n\n                //if have a id then find the callback function with the request\n                var cb = callbacks[msg.id];\n\n                delete callbacks[msg.id];\n                if (typeof cb !== 'function') {\n                    return;\n                }\n\n                cb(msg);\n                return;\n            };\n\n            var processMessageBatch = function (pomelo, msgs) {\n                for (var i = 0, l = msgs.length; i < l; i++) {\n                    processMessage(pomelo, msgs[i]);\n                }\n            };\n\n            var deCompose = function (msg) {\n                var protos = !!pomelo.data.protos ? pomelo.data.protos.server : {};\n                var abbrs = pomelo.data.abbrs;\n                var route = msg.route;\n\n                //Decompose route from dict\n                if (msg.compressRoute) {\n                    if (!abbrs[route]) {\n                        return {};\n                    }\n\n                    route = msg.route = abbrs[route];\n                }\n                if (!!protos[route]) {\n                    return protobuf.decode(route, msg.body);\n                } else {\n                    return JSON.parse(Protocol.strdecode(msg.body));\n                }\n\n                return msg;\n            };\n\n            var handshakeInit = function (data) {\n                if (data.sys && data.sys.heartbeat) {\n                    heartbeatInterval = data.sys.heartbeat * 1000;   // heartbeat interval\n                    heartbeatTimeout = heartbeatInterval * 2;        // max heartbeat timeout\n                } else {\n                    heartbeatInterval = 0;\n                    heartbeatTimeout = 0;\n                }\n\n                initData(data);\n\n                if (typeof handshakeCallback === 'function') {\n                    handshakeCallback(data.user);\n                }\n            };\n\n            //Initilize data used in pomelo client\n            var initData = function (data) {\n                if (!data || !data.sys) {\n                    return;\n                }\n                pomelo.data = pomelo.data || {};\n                var dict = data.sys.dict;\n                var protos = data.sys.protos;\n\n                //Init compress dict\n                if (dict) {\n                    pomelo.data.dict = dict;\n                    pomelo.data.abbrs = {};\n\n                    for (var route in dict) {\n                        pomelo.data.abbrs[dict[route]] = route;\n                    }\n                }\n\n                //Init protobuf protos\n                if (protos) {\n                    pomelo.data.protos = {\n                        server: protos.server || {},\n                        client: protos.client || {}\n                    };\n                    if (!!protobuf) {\n                        protobuf.init({encoderProtos: protos.client, decoderProtos: protos.server});\n                    }\n                }\n            };\n\n            module.exports = pomelo;\n        })(this);\n\n    });\n\n    pomeloBuildObj.register(\"boot/index.js\", function (exports, requirePomelo, module) {\n        var Emitter = requirePomelo('emitter');\n        this.EventEmitter = Object.create(Emitter);\n\n        var protocol = requirePomelo('pomelo-protocol');\n        this.Protocol = protocol;\n\n        var protobuf = requirePomelo('pomelo-protobuf');\n        this.protobuf = protobuf;\n\n        var pomelo = requirePomelo('pomelo-jsclient-websocket');\n        this.pomelo = pomelo;\n\n    });\n    pomeloBuildObj.alias(\"boot/index.js\", \"pomelo-client/deps/boot/index.js\");\n    pomeloBuildObj.alias(\"component-emitter/index.js\", \"boot/deps/emitter/index.js\");\n    pomeloBuildObj.alias(\"component-indexof/index.js\", \"component-emitter/deps/indexof/index.js\");\n\n    pomeloBuildObj.alias(\"NetEase-pomelo-protocol/lib/protocol.js\", \"boot/deps/pomelo-protocol/lib/protocol.js\");\n    pomeloBuildObj.alias(\"NetEase-pomelo-protocol/lib/protocol.js\", \"boot/deps/pomelo-protocol/index.js\");\n    pomeloBuildObj.alias(\"NetEase-pomelo-protocol/lib/protocol.js\", \"NetEase-pomelo-protocol/index.js\");\n\n    pomeloBuildObj.alias(\"pomelonode-pomelo-protobuf/lib/client/protobuf.js\", \"boot/deps/pomelo-protobuf/lib/client/protobuf.js\");\n    pomeloBuildObj.alias(\"pomelonode-pomelo-protobuf/lib/client/protobuf.js\", \"boot/deps/pomelo-protobuf/index.js\");\n    pomeloBuildObj.alias(\"pomelonode-pomelo-protobuf/lib/client/protobuf.js\", \"pomelonode-pomelo-protobuf/index.js\");\n\n    pomeloBuildObj.alias(\"pomelonode-pomelo-jsclient-websocket/lib/pomelo-client.js\", \"boot/deps/pomelo-jsclient-websocket/lib/pomelo-client.js\");\n    pomeloBuildObj.alias(\"pomelonode-pomelo-jsclient-websocket/lib/pomelo-client.js\", \"boot/deps/pomelo-jsclient-websocket/index.js\");\n    pomeloBuildObj.alias(\"pomelonode-pomelo-jsclient-websocket/lib/pomelo-client.js\", \"pomelonode-pomelo-jsclient-websocket/index.js\");\n\n    pomeloBuildObj.requirePomelo(\"boot\");\n\n    return pomeloBuildObj;\n};\n\nwindow.pomeloBuild = pomeloBuild;\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        rankCntLb: cc.Label,\n        userNameLb: cc.Label,\n        userIcon: cc.Sprite,\n        userScoreLb: cc.Label\n    },\n\n    setData(rankIndex, data) {\n        if (this.rankCntLb) {\n            this.rankCntLb.string = rankIndex + 1;\n        }\n        this.userNameLb.string = data.nick;\n        cc.loader.load({url: data.url, type: 'png'}, function(err, texture) {\n            var spriteFrame = new cc.SpriteFrame(texture, cc.Rect(0, 0, texture.width, texture.height));\n            if(this.userIcon) {\n                this.userIcon.spriteFrame = spriteFrame;\n            }\n        }.bind(this));\n        this.userScoreLb.string = data.score;\n    }\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        icon: {\n            default: null,\n            type: cc.Sprite\n        },\n\n        nameLb: {\n            default: null,\n            type: cc.Label\n        }\n    },\n\n    setData: function(id) {\n        this.playerId = id;\n        clientEvent.on(clientEvent.eventType.playerAccountGet, this.userInfoSet, this);\n        Game.GameManager.userInfoReq(this.playerId);\n    },\n\n    userInfoSet: function(recvMsg) {\n        if (recvMsg.account == this.playerId) {\n            if (this.nameLb){\n                this.nameLb.string = recvMsg.userName;\n            }\n            if (recvMsg.headIcon && recvMsg.headIcon !== \"-\") {\n                cc.loader.load({url: recvMsg.headIcon, type: 'png'}, function(err, texture) {\n                    var spriteFrame = new cc.SpriteFrame(texture, cc.Rect(0, 0, texture.width, texture.height));\n                    if(this.icon) {\n                        this.icon.spriteFrame = spriteFrame;\n                    }\n                }.bind(this));\n            }\n        }\n    },\n\n    onDestroy() {\n        clientEvent.off(clientEvent.eventType.playerAccountGet, this.userInfoSet, this);\n    },\n\n});\n","var mvs = require(\"Matchvs\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        roomIdLb: {\n            default: null,\n            type: cc.Label\n        },\n        roomNameLb: {\n            default: null,\n            type: cc.Label\n        },\n    },\n\n    start() {\n        this.node.on(\"click\", this.joinRoom, this);\n    },\n\n    setData: function(msRoomAttribute) {\n        this.msRoomAttribute = msRoomAttribute;\n        this.roomIdLb.string = msRoomAttribute.roomID;\n        this.roomNameLb.string = msRoomAttribute.roomName;\n    },\n\n    joinRoom: function() {\n        mvs.engine.joinRoom(this.msRoomAttribute.roomID, \"joinRoomSpecial\");\n    }\n});\n","var mvs = require(\"Matchvs\");\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        userName: {\n            default: null,\n            type: cc.Label\n        },\n        ownerTag: {\n            default: null,\n            type: cc.Node\n        },\n        otherTag: {\n            default: null,\n            type: cc.Node\n        },\n        selfTag: {\n            default: null,\n            type: cc.Node\n        },\n        defaultNode: {\n            default: null,\n            type: cc.Node\n        },\n        commonNode: {\n            default: null,\n            type: cc.Node\n        },\n        kick: {\n            default: null,\n            type: cc.Node\n        },\n        userIcon: {\n            default: null,\n            type: cc.Sprite\n        }\n    },\n\n    init: function() {\n        this.defaultNode.active = true;\n        this.otherTag.active = false;\n        this.ownerTag.active = false;\n        this.selfTag.active = false;\n        this.userName.string = '';\n        this.commonNode.active = false;\n        this.kick.active = false;\n        this.kick.on(\"click\", this.kickPlayer, this);\n        this.userId = 0;\n        clientEvent.on(clientEvent.eventType.playerAccountGet, this.userInfoSet, this);\n    },\n\n    setData: function(userId, ownerId) {\n        this.userId = userId;\n        if (this.userId === ownerId) {\n            this.ownerTag.active = true;\n            this.otherTag.active = false;\n            this.selfTag.active = false;\n        } else if (this.userId === GLB.userInfo.id) {\n            this.ownerTag.active = false;\n            this.otherTag.active = false;\n            this.selfTag.active = true;\n        } else {\n            this.ownerTag.active = false;\n            this.otherTag.active = true;\n            this.selfTag.active = false;\n        }\n        this.defaultNode.active = false;\n        this.commonNode.active = true;\n        this.userName.string = this.userId;\n\n        if (!GLB.isRoomOwner || this.userId === GLB.userInfo.id) {\n            this.kick.active = false;\n        } else {\n            this.kick.active = true;\n        }\n        Game.GameManager.userInfoReq(this.userId);\n    },\n\n    userInfoSet: function(recvMsg) {\n        console.log(\"recvMsg:\" + recvMsg);\n        if (recvMsg.account == this.userId) {\n            console.log(\"set user info\");\n            console.log(recvMsg);\n            this.userName.string = recvMsg.userName;\n            if (recvMsg.headIcon && recvMsg.headIcon !== \"-\") {\n                cc.loader.load({url: recvMsg.headIcon, type: 'png'}, function(err, texture) {\n                    var spriteFrame = new cc.SpriteFrame(texture, cc.Rect(0, 0, texture.width, texture.height));\n                    if(this.userIcon) {\n                        this.userIcon.spriteFrame = spriteFrame;\n                    }\n                }.bind(this));\n            }\n        }\n    },\n\n    onDestroy() {\n        clientEvent.off(clientEvent.eventType.playerAccountGet, this.userInfoSet, this);\n    },\n\n    kickPlayer: function() {\n        mvs.engine.kickPlayer(this.userId, \"kick\");\n    }\n});\n","var uiPanel = require(\"uiPanel\");\ncc.Class({\n    extends: uiPanel,\n\n    properties: {\n        pageView:{\n            default: null,\n            type: cc.Node\n        }\n    },\n\n    onLoad () {\n        this._super();\n        this.nodeDict[\"close\"].on(cc.Node.EventType.TOUCH_END, this.close, this);\n        this.nodeDict[\"left\"].on(cc.Node.EventType.TOUCH_END, this.leftScroll, this);\n        this.nodeDict[\"right\"].on(cc.Node.EventType.TOUCH_END, this.rightScroll, this);\n    },\n    leftScroll(){\n        var index = this.pageView.getComponent(cc.PageView).getCurrentPageIndex();\n        this.pageView.getComponent(cc.PageView).setCurrentPageIndex(index-1);\n    },\n    rightScroll(){\n        var index = this.pageView.getComponent(cc.PageView).getCurrentPageIndex();\n        this.pageView.getComponent(cc.PageView).setCurrentPageIndex(index+1);\n    },\n    close() {\n        var lobbyPanel = uiFunc.findUI(\"uiLobbyPanelVer\");\n        if (lobbyPanel) {\n            lobbyPanel.getComponent(\"uiLobbyPanel\").openBotton();\n        }\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n    },\n    update(){\n        var index = this.pageView.getComponent(cc.PageView).getCurrentPageIndex();\n        this.nodeDict[\"left\"].getComponent(cc.Button).interactable = true;\n        this.nodeDict[\"right\"].getComponent(cc.Button).interactable = true;\n        if (index === 0){\n            this.nodeDict[\"left\"].getComponent(cc.Button).interactable = false;\n        }\n        else if (index === 2) {\n            this.nodeDict[\"right\"].getComponent(cc.Button).interactable = false;\n        }\n    }\n\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n    properties: {},\n\n    onLoad() {\n        this._super();\n        this.playerCntLb = this.nodeDict[\"playerCnt\"].getComponent(cc.Label);\n        this.playerCnt = GLB.PLAYER_COUNTS[0];\n        this.playerCntLb.string = this.playerCnt;\n        this.refreshBtnState();\n        this.nodeDict[\"quit\"].on(\"click\", this.quit, this);\n        this.nodeDict[\"addNode\"].on(\"click\", this.addPlayerCount, this);\n        this.nodeDict[\"subNode\"].on(\"click\", this.subPlayerCount, this);\n        this.nodeDict[\"create\"].on(\"click\", this.createRoom, this);\n\n        clientEvent.on(clientEvent.eventType.createRoomResponse, this.createRoomResponse, this);\n    },\n\n    addPlayerCount: function() {\n        for (var i = 0; i < GLB.PLAYER_COUNTS.length; i++) {\n            if (this.playerCnt === GLB.PLAYER_COUNTS[i]) {\n                if (GLB.PLAYER_COUNTS.length > i + 1) {\n                    this.playerCnt = GLB.PLAYER_COUNTS[i + 1];\n                    break;\n                }\n            }\n        }\n\n        this.playerCntLb.string = this.playerCnt;\n        this.refreshBtnState();\n    },\n\n    subPlayerCount: function() {\n        for (var i = 0; i < GLB.PLAYER_COUNTS.length; i++) {\n            if (this.playerCnt === GLB.PLAYER_COUNTS[i]) {\n                if (i > 0) {\n                    this.playerCnt = GLB.PLAYER_COUNTS[i - 1];\n                    break;\n                }\n            }\n        }\n        this.playerCntLb.string = this.playerCnt;\n        this.refreshBtnState();\n    },\n\n    refreshBtnState() {\n        if (this.playerCnt === GLB.PLAYER_COUNTS[0]) {\n            this.nodeDict[\"subNode\"].getComponent(cc.Button).interactable = false;\n        } else {\n            this.nodeDict[\"subNode\"].getComponent(cc.Button).interactable = true;\n        }\n\n        if (this.playerCnt === GLB.PLAYER_COUNTS[GLB.PLAYER_COUNTS.length - 1]) {\n            this.nodeDict[\"addNode\"].getComponent(cc.Button).interactable = false;\n        } else {\n            this.nodeDict[\"addNode\"].getComponent(cc.Button).interactable = true;\n        }\n    },\n\n    quit: function() {\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n    },\n\n    createRoom: function() {\n        Game.GameManager.blockInput();\n\n        var create = new mvs.CreateRoomInfo();\n        create.roomName = this.nodeDict[\"roomName\"].getComponent(cc.EditBox).string;\n        GLB.MAX_PLAYER_COUNT = this.playerCnt;\n        create.maxPlayer = GLB.MAX_PLAYER_COUNT;\n        create.mode = 0;\n        create.canWatch = 0;\n        create.visibility = 1;\n        create.roomProperty = GLB.MAX_PLAYER_COUNT;\n        var result = mvs.engine.createRoom(create, { maxPlayer: GLB.MAX_PLAYER_COUNT });\n        if (result !== 0) {\n            console.log('创建房间失败,错误码:' + result);\n        }\n    },\n\n    createRoomResponse: function(data) {\n        var status = data.rsp.status;\n        if (status !== 200) {\n            console.log('创建房间失败,异步回调错误码: ' + status);\n        } else {\n            console.log('创建房间成功:' + JSON.stringify(data.rsp));\n            console.log('房间号: ' + data.rsp.roomID);\n            GLB.roomId = data.rsp.roomID;\n\n            if (cc.Canvas.instance.designResolution.height > cc.Canvas.instance.designResolution.width) {\n                uiFunc.openUI(\"uiRoomVer\", function(obj) {\n                    var room = obj.getComponent('uiRoom');\n                    room.createRoomInit(data.rsp);\n                    uiFunc.closeUI(this.node.name);\n                    this.node.destroy();\n                }.bind(this));\n            } else {\n                uiFunc.openUI(\"uiRoom\", function(obj) {\n                    var room = obj.getComponent('uiRoom');\n                    room.createRoomInit(data.rsp);\n                    uiFunc.closeUI(this.node.name);\n                    this.node.destroy();\n                }.bind(this));\n            }\n        }\n    },\n\n    onDestroy: function() {\n        clientEvent.off(clientEvent.eventType.createRoomResponse, this.createRoomResponse, this);\n    }\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n    properties: {},\n\n    onLoad() {\n        this._super();\n        this.nodeDict[\"sure\"].on(\"click\", this.sure, this);\n        this.nodeDict[\"close\"].on(\"click\", this.close, this);\n        if (!Game.GameManager.bExit){\n\n        }\n    },\n\n    close() {\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n    },\n\n    sure() {\n        if(!Game.GameManager.bExit){\n            return;\n        }\n        mvs.engine.leaveRoom(\"\");\n        Game.BlockManager.deleteWholeBlock();\n        var gamePanel = uiFunc.findUI(\"uiGamePanel\");\n        if (gamePanel) {\n            uiFunc.closeUI(\"uiGamePanel\");\n            gamePanel.destroy();\n        }\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n        Game.GameManager.lobbyShow();\n    },\n});\n","var mvs = require(\"Matchvs\");\nvar uiPanel = require(\"uiPanel\");\ncc.Class({\n    extends: uiPanel,\n\n    properties: {\n        bgmAudio: {\n            default: null,\n            url: cc.AudioClip\n        },\n        startAudio: {\n            default: null,\n            url: cc.AudioClip\n        },\n        selfScore:{\n            default:null,\n            type: cc.Label\n        },\n        rivalScore:{\n            default:null,\n            type: cc.Label\n        },\n        progressBar:{\n            default:null,\n            type: cc.Node\n        },\n        numberSpriteFrame:{\n            default:[],\n            type: cc.SpriteFrame\n        }\n    },\n    onLoad() {\n        this._super();\n        this.round = 0;\n        this.count = 0;\n        this.playerLcon = this.nodeDict[\"player\"].getComponent(\"resultPlayerIcon\");\n        this.rivalLcon = this.nodeDict[\"rival\"].getComponent(\"resultPlayerIcon\");\n        this.node.on(clientEvent.eventType.nextRound,this.initArrBlock,this);\n        this.node.on(clientEvent.eventType.setScoreProgressBar,this.setScoreProgressBar,this);\n        clientEvent.on(clientEvent.eventType.roundStart, this.roundStart, this);\n        clientEvent.on(clientEvent.eventType.updateMap, this.sendInitMapMsg, this);\n        clientEvent.on(clientEvent.eventType.gameOver, this.gameOver, this);\n        clientEvent.on(clientEvent.eventType.getRoomDetailResponse, this.setPlayerId, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomMedNotify, this.leaveRoom, this);\n        clientEvent.on(clientEvent.eventType.getReconnectionData, this.getReconnectionData, this);\n        clientEvent.on(clientEvent.eventType.setReconnectionData, this.setReconnectionData, this);\n        clientEvent.on(clientEvent.eventType.setCount, this.setCount, this);\n        clientEvent.on(clientEvent.eventType.checkLcon, this.checkLcon, this);\n        this.nodeDict[\"exit\"].on(cc.Node.EventType.TOUCH_START, this.exit, this);\n        this.nodeDict['round'].getComponent(cc.Animation).on('finished', this.gameStart, this);\n        this.scheduleOnce(this.checkGameStatus,10);\n        if (window.BK && !BK.Audio.switch){\n            BK.Audio.switch = true;\n        }\n        this.bgmId = cc.audioEngine.play(this.bgmAudio, true, 1);\n    },\n    sendExpressionMsg(event, customEventData){\n        if (Game.GameManager.gameState !== GameState.Over) {\n            mvs.engine.sendFrameEvent(JSON.stringify({\n                action: GLB.BUBBLE,\n                type: customEventData,\n                id: Game.PlayerManager.self.playerId\n            }));\n        }\n    },\n    showLcon(){\n        this.playerLcon.setData(GLB.playerUserIds[0]);\n        this.rivalLcon.setData(GLB.playerUserIds[1]);\n    },\n    checkLcon(){\n        if (this.playerLcon.icon.spriteFrame === null){\n            Game.GameManager.network.connect(GLB.IP, GLB.PORT,function(){});\n            this.scheduleOnce(this.showLcon,1);\n        }\n    },\n    setPlayerId(data){\n        var arrPlayer = data.rsp.userInfos;\n        for (let player of arrPlayer){\n            if (player.userId === GLB.userInfo.id){\n                GLB.playerUserIds[0] = player.userId;\n            }else{\n                GLB.playerUserIds[1] = player.userId;\n            }\n        }\n        Game.PlayerManager.playerInit();\n    },\n    initArrBlock(){\n        if (!this.playPrompt()){\n            this.gameOver();\n           return;\n        }\n        if(!GLB.isRoomOwner){\n            return;\n        }\n        //初始化地图数组\n        var arrMap = [];\n        for(let row = 0; row < 8; row++){\n            arrMap[row] = [];\n            for (let col = 0; col < 9; col++){\n                arrMap[row][col] = 0;\n            }\n        }\n        //随机一个id，通过id从表中拿取数组\n        var length = window.dataManager.layoutDtMgr.getArrLayoutLenght();\n        var removeId = Math.floor(Math.random() * length + 1);\n        var arrRemove = window.dataManager.layoutDtMgr.getDataByID(removeId).array;\n        //根据拿到的id，把地图数组中相应的部分置为null\n        for (let data of arrRemove){\n            arrMap[data[0]][data[1]] = null;\n        }\n        //number为需要生成方块的数量\n        var number = 72 - arrRemove.length;\n        //随机生成方块种类\n        var arrBlock = [];\n        for(let i = 0; i < number / 2; i++){\n            let blockType = Math.floor(Math.random()*10);\n            arrBlock.push(blockType);\n            arrBlock.push(blockType);\n        }\n        //循环给地图数组赋予方块种类\n        for (let row = 0;row < 8 ; row++){\n            for (let col = 0; col < 9; col++){\n                if (arrMap[row][col] !== null) {\n                    let index = Math.floor(Math.random() * arrBlock.length);\n                    arrMap[row][col] = arrBlock[index];\n                    arrBlock.splice(index,1);\n                }\n            }\n        }\n        this.sendInitMapMsg(arrMap);\n    },\n    checkGameStatus(){\n        Game.GameManager.openTip(\"游戏无法进行\");\n        this.scheduleOnce(()=>{\n            Game.GameManager.recurLobby();\n        },2.5)\n    },\n    leaveRoom(data) {\n        if (Game.GameManager.gameState !== GameState.Over) {\n            uiFunc.openUI(\"uiTip\", function(obj) {\n                var uiTip = obj.getComponent(\"uiTip\");\n                if (uiTip) {\n                    if (data.leaveRoomInfo.userId !== GLB.userInfo.id) {\n                        uiTip.setData(\"对手重新连接失败，即将结束游戏\");\n                    }\n                }\n            }.bind(this));\n        }\n    },\n    sendInitMapMsg(arrMap) {\n        // if(!GLB.isRoomOwner){\n        //     return;\n        // }\n        if (Game.GameManager.gameState !== GameState.Over) { //&& GLB.isRoomOwner\n            mvs.engine.sendFrameEvent(JSON.stringify({\n                action: GLB.INITMAP,\n                array: arrMap\n            }));\n        }\n    },\n    exit() {\n        if (!Game.ClickManager.bClick){\n            return;\n        }\n        uiFunc.openUI(\"uiExit\");\n    },\n    gameOver: function() {\n        //游戏结束--\n        if (GLB.isRoomOwner) {\n            var msg = {\n                action: GLB.GAME_OVER_EVENT\n            };\n            Game.GameManager.sendEventEx(msg);\n        }\n        cc.audioEngine.stop(this.bgmId);\n\n    },\n    roundStart: function() {\n        this.initArrBlock();\n        this.showLcon();\n    },\n    leaveRoom() {\n        Game.GameManager.bExit = false;\n        this.scheduleOnce(()=>{\n            Game.GameManager.bExit = true;\n        },3.0);\n        if (Game.GameManager.gameState !== GameState.Over) {\n            uiFunc.openUI(\"uiTip\", function(obj) {\n                var uiTip = obj.getComponent(\"uiTip\");\n                if (uiTip) {\n                    uiTip.setData(\"对手离开了游戏\");\n                    cc.log(\"对手离开了游戏\");\n                }\n            }.bind(this));\n        }\n    },\n    setScoreProgressBar(){\n        var ratio = Game.PlayerManager.self.score / (Game.PlayerManager.self.score + Game.PlayerManager.rival.score);\n        if (Game.PlayerManager.self.score === 0\n            && Game.PlayerManager.rival.score === 0) {\n            ratio = 0.5;\n        }\n        this.progressBar.getComponent(cc.ProgressBar).progress = ratio;\n        this.progressBar.getChildByName(\"light\").x = ratio * 500 - 250;\n    },\n    playPrompt(){\n        this.round++;\n        this.nodeDict['prompt'].active = true;\n        Game.ClickManager.bClick = false;\n        if (this.round >= 4){\n            clearInterval(this.scheduleCountDown);\n            this.nodeDict['gameOver'].opacity = 255;\n            return false;\n\n        }\n        this.count = 60;\n        clearInterval(this.scheduleCountDown);\n        this.nodeDict['countDown'].getComponent(cc.Label).string = \"剩余时间 \" + this.count;\n        this.nodeDict['tab'].getComponent(cc.Label).string = \"Round \"+this.round+\"/3\";\n        this.nodeDict['number'].getComponent(cc.Sprite).spriteFrame = this.numberSpriteFrame[this.round - 1];\n        this.nodeDict['round'].getComponent(cc.Animation).play(\"round1\");\n        if (window.BK && !BK.Audio.switch){\n            BK.Audio.switch = true;\n            this.bgmId = cc.audioEngine.play(this.bgmAudio, true, 1);\n        }\n        this.scheduleOnce(()=>{\n            cc.audioEngine.play(this.startAudio, false, 1);\n        },2.5);\n        return true;\n    },\n    gameStart(){\n        clearInterval(this.scheduleCountDown);\n        this.unschedule(this.checkGameStatus);\n        Game.ClickManager.bClick = true;\n        this.nodeDict['prompt'].active = false;\n        this.scheduleCountDown = setInterval(function(){\n            this.countDown();\n        }.bind(this), 1000);\n    },\n    countDown(){\n        if (this.count > 0){\n            this.count--;\n        }\n        this.nodeDict['countDown'].getComponent(cc.Label).string = \"剩余时间 \" + this.count;\n        if (this.count <= 0){\n            this.sendNextRound();\n        }\n    },\n    setCount(count){\n        this.count = count;\n    },\n    sendNextRound(){\n        clearInterval(this.scheduleCountDown);\n        if (Game.GameManager.gameState !== GameState.Over && GLB.isRoomOwner) {\n            mvs.engine.sendFrameEvent(JSON.stringify({\n                action: GLB.TIME_OUT,\n            }));\n        }\n    },\n    getReconnectionData(){\n        cc.log(\"发送重新连接数据\");\n        var arrMap = Game.BlockManager.getArrMap();\n        this.sendInitMapMsg(arrMap);\n        var selfData = Game.PlayerManager.self.getData();\n        var rivalData = Game.PlayerManager.rival.getData();\n        var gameData = {\n            round: this.round,\n            count: this.count,\n            selfData: selfData,\n            rivalData: rivalData,\n            gamestate: Game.GameManager.gameState\n        };\n        if (Game.GameManager.gameState !== GameState.Over) {\n            mvs.engine.sendFrameEvent(JSON.stringify({\n                action: GLB.RECONNECTION_DATA,\n                playerId: Game.PlayerManager.self.playerId,\n                gameData: gameData\n            }));\n        }\n    },\n    setReconnectionData(cpProto){\n        cc.log(\"掉线玩家接受并更新数据\");\n        var data = cpProto.gameData;\n        var id = cpProto.playerId;\n        if (data.round <= 0 || data.gamestate !== GameState.Play){\n            return;\n        }\n        Game.GameManager.bReconnect = true;\n        this.round = data.round;\n        this.count = data.count;\n        if (id === GLB.userInfo.id){\n            GLB.isRoomOwner = true;\n            Game.PlayerManager.self.setData(data.selfData);\n            Game.PlayerManager.rival.setData(data.rivalData);\n        }else{\n            GLB.isRoomOwner = false;\n            Game.PlayerManager.self.setData(data.rivalData);\n            Game.PlayerManager.rival.setData(data.selfData);\n        }\n        Game.PlayerManager.self.changeScore();\n        Game.PlayerManager.rival.changeScore();\n        if (this.nodeDict){\n            this.nodeDict['tab'].getComponent(cc.Label).string = \"Round \"+this.round+\"/3\";\n        }\n        Game.GameManager.gameState = GameState.Play;\n        this.showLcon();\n        this.gameStart();\n\n    },\n    onDestroy() {\n        clientEvent.off(clientEvent.eventType.roundStart, this.roundStart, this);\n        clientEvent.off(clientEvent.eventType.gameOver, this.gameOver, this);\n        clientEvent.off(clientEvent.eventType.refreshSlateBtn, this.refreshSlateBtn, this);\n        clientEvent.off(clientEvent.eventType.leaveRoomMedNotify, this.leaveRoom, this);\n        clientEvent.off(clientEvent.eventType.getRoomDetailResponse, this.setPlayerId, this);\n        clientEvent.off(clientEvent.eventType.getReconnectionData, this.getReconnectionData, this);\n        clientEvent.off(clientEvent.eventType.setCount, this.setCount, this);\n        clientEvent.off(clientEvent.eventType.checkLcon, this.checkLcon, this);\n        this.node.off(clientEvent.eventType.nextRound,this.initArrBlock,this);\n        this.node.off(clientEvent.eventType.setScoreProgressBar,this.setScoreProgressBar,this);\n        this.nodeDict[\"exit\"].off(cc.Node.EventType.TOUCH_START, this.exit, this);\n        clearInterval(this.scheduleCountDown);\n        cc.audioEngine.stop(this.bgmId);\n        if (window.BK){\n            BK.Audio.switch = false;\n        }\n     }\n\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n\n    properties: {},\n\n    start() {\n        this.nodeDict[\"guide\"].on(\"click\", this.beginnerCourse, this);\n        this.nodeDict[\"randomRoom\"].on(\"click\", this.randomRoom, this);\n        this.nodeDict[\"createRoom\"].on(\"click\", this.createRoom, this);\n        this.nodeDict[\"joinRoom\"].on(\"click\", this.joinRoom, this);\n        this.nodeDict[\"inviteFriend\"].on(\"click\", this.inviteFriend, this);\n        this.nodeDict[\"exit\"].on(\"click\", this.exit, this);\n        if (GLB.nickName) {\n            this.nodeDict[\"name\"].getComponent(cc.Label).string = GLB.nickName;\n        } else {\n            this.nodeDict[\"name\"].getComponent(cc.Label).string = GLB.userInfo.id;\n        }\n        if (GLB.avatarUrl) {\n            cc.loader.load({url: GLB.avatarUrl, type: 'png'}, function(err, texture) {\n                var spriteFrame = new cc.SpriteFrame(texture, cc.Rect(0, 0, texture.width, texture.height));\n                if (this.node){\n                    this.nodeDict[\"userIcon\"].getComponent(cc.Sprite).spriteFrame = spriteFrame;\n                }\n            }.bind(this));\n        }\n        this.nodeDict[\"rank\"].on(\"click\", this.rank, this);\n    },\n\n    rank: function() {\n        Game.GameManager.blockInput();\n\n        Game.GameManager.getRankData(function(data) {\n            uiFunc.openUI(\"uiRankPanelVer\", function(obj) {\n                var uiRankPanelScript = obj.getComponent(\"uiRankPanel\");\n                if (uiRankPanelScript) {\n                    uiRankPanelScript.setData(data);\n                }\n            })\n        });\n    },\n\n    exit: function() {\n        mvs.engine.logout(\"\");\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n    },\n\n    onEnable() {\n        GLB.isRoomOwner = false;\n        GLB.MAX_PLAYER_COUNT = 2;\n    },\n\n    randomRoom: function() {\n        Game.GameManager.blockInput();\n\n        GLB.matchType = GLB.RANDOM_MATCH; // 修改匹配方式为随机匹配\n        console.log('开始随机匹配');\n        if (GLB.gameType === GLB.COOPERATION) {\n            if (GLB.MAX_PLAYER_COUNT > 1) {\n                if (cc.Canvas.instance.designResolution.height > cc.Canvas.instance.designResolution.width) {\n                    uiFunc.openUI(\"uiMatchingVer\", function(obj) {\n                        var matching = obj.getComponent(\"uiMatching\");\n                        matching.joinRandomRoom();\n                    });\n                } else {\n                    uiFunc.openUI(\"uiMatching\", function(obj) {\n                        var matching = obj.getComponent(\"uiMatching\");\n                        matching.joinRandomRoom();\n                    });\n                }\n            } else {\n                cc.director.loadScene('game');\n            }\n        } else if (GLB.gameType === GLB.COMPETITION) {\n            if (GLB.MAX_PLAYER_COUNT === 2) {\n                if (cc.Canvas.instance.designResolution.height > cc.Canvas.instance.designResolution.width) {\n                    uiFunc.openUI(\"uiMatching1v1Ver\", function(obj) {\n                        var matching = obj.getComponent(\"uiMatching1v1Ver\");\n                        matching.joinRandomRoom();\n                    });\n                } else {\n                    uiFunc.openUI(\"uiMatching1v1\", function(obj) {\n                        var matching = obj.getComponent(\"uiMatching1v1\");\n                        matching.joinRandomRoom();\n                    });\n                }\n            } else if (GLB.MAX_PLAYER_COUNT === 4) {\n                if (cc.Canvas.instance.designResolution.height > cc.Canvas.instance.designResolution.width) {\n                    uiFunc.openUI(\"uiMatching2v2Ver\", function(obj) {\n                        var matching = obj.getComponent(\"uiMatching2v2Ver\");\n                        matching.joinRandomRoom();\n                    });\n                } else {\n                    uiFunc.openUI(\"uiMatching2v2Ver\", function(obj) {\n                        var matching = obj.getComponent(\"uiMatching2v2Ver\");\n                        matching.joinRandomRoom();\n                    });\n                }\n            }\n        }\n    },\n\n    createRoom: function() {\n        Game.GameManager.blockInput();\n\n        if (cc.Canvas.instance.designResolution.height > cc.Canvas.instance.designResolution.width) {\n            uiFunc.openUI(\"uiCreateRoomVer\");\n        } else {\n            uiFunc.openUI(\"uiCreateRoom\");\n        }\n    },\n\n    joinRoom: function() {\n        Game.GameManager.blockInput();\n\n        if (cc.Canvas.instance.designResolution.height > cc.Canvas.instance.designResolution.width) {\n            uiFunc.openUI(\"uiRoomListVer\");\n        } else {\n            uiFunc.openUI(\"uiRoomList\");\n        }\n    },\n\n    inviteFriend: function() {\n        if (window.BK) {\n            BK.QQ.shareToArk(0, \"萌鸟连连看\", \"https://data.tianziyou.com/matchvsGamesRes/logo/linkGameLogo.png\", true)\n        }\n    },\n\n    beginnerCourse: function() {\n        uiFunc.openUI(\"uiBeginnerCourse\");\n        //Game.GameManager.closeUiPanel();\n        this.nodeDict[\"guide\"].getComponent(cc.Button).interactable = false;\n    },\n    openBotton: function() {\n        this.nodeDict[\"guide\"].getComponent(cc.Button).interactable = true;\n    }\n\n\n});\n","var uiPanel = require(\"uiPanel\");\ncc.Class({\n    extends: uiPanel,\n    properties: {},\n\n    onLoad() {\n        this._super();\n        this.nodeDict[\"start\"].on(\"click\", this.startGame, this);\n    },\n\n    startGame() {\n        Game.GameManager.matchVsInit();\n    }\n});\n","var uiPanel = require(\"uiPanel\");\ncc.Class({\n    extends: uiPanel,\n    // LIFE-CYCLE CALLBACKS:\n    start() {\n        clientEvent.on(clientEvent.eventType.openUI, this.uiOperateCallBack, this);\n        clientEvent.on(clientEvent.eventType.closeUI, this.uiOperateCallBack, this);\n        this.isUseMask = false;\n        this.node.active = false;\n    },\n\n    uiOperateCallBack: function() {\n        // 最后一个需要使用mask的panel\n        var lastMaskIndex = -1;\n        for (var i = uiFunc.uiList.length - 1; i >= 0; i--) {\n            var ui = uiFunc.uiList[i];\n            var panel = ui.getComponent(\"uiPanel\");\n            if (panel && panel.isUseMask) {\n                lastMaskIndex = i;\n                break;\n            }\n        }\n        if (lastMaskIndex >= 0) {\n            this.node.active = true;\n            for (var j = lastMaskIndex; j < uiFunc.uiList.length; j++) {\n                var targetUI = uiFunc.uiList[j];\n                if (targetUI) {\n                    this.node.setSiblingIndex(Number.MAX_SAFE_INTEGER);\n                    targetUI.setSiblingIndex(Number.MAX_SAFE_INTEGER);\n                } else {\n                    console.log(\"current show ui is null!\");\n                }\n            }\n        } else {\n            this.node.active = false;\n            return;\n        }\n    },\n\n    refresh: function() {\n        // 最后一个需要使用mask的panel\n        var lastMaskIndex = -1;\n        for (var i = uiFunc.uiList.length - 1; i >= 0; i--) {\n            var ui = uiFunc.uiList[i];\n            var panel = ui.getComponent(\"uiPanel\");\n            if (panel.isUseMask) {\n                lastMaskIndex = i;\n                break;\n            }\n        }\n        if (lastMaskIndex >= 0) {\n            this.node.active = true;\n            for (var j = lastMaskIndex; j < uiFunc.uiList.length; j++) {\n                var targetUI = uiFunc.uiList[j];\n                if (targetUI) {\n                    this.node.setSiblingIndex(Number.MAX_SAFE_INTEGER);\n                    targetUI.setSiblingIndex(Number.MAX_SAFE_INTEGER);\n                } else {\n                    console.log(\"current show ui is null!\");\n                }\n            }\n        } else {\n            this.node.active = false;\n            return;\n        }\n    },\n\n    onDestroy: function() {\n        clientEvent.off(clientEvent.eventType.openUI, this.uiOperateCallBack, this);\n        clientEvent.off(clientEvent.eventType.closeUI, this.uiOperateCallBack, this);\n    }\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n    properties: {\n        playerIcons: [cc.Node]\n    },\n\n    onLoad() {\n        this._super();\n        this.nodeDict[\"quit\"].on(\"click\", this.leaveRoom, this);\n        this.bQuit = true;\n        this.joinRoom = false;\n        clientEvent.on(clientEvent.eventType.joinRoomResponse, this.joinRoomResponse, this);\n        clientEvent.on(clientEvent.eventType.joinRoomNotify, this.joinRoomNotify, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomResponse, this.leaveRoomResponse, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomNotify, this.leaveRoomNotify, this);\n        clientEvent.on(clientEvent.eventType.joinOverResponse, this.joinOverResponse, this);\n        clientEvent.on(clientEvent.eventType.checkLcon, this.checkLcon, this);\n    },\n\n    joinRandomRoom: function() {\n        var result = null;\n        if (GLB.matchType === GLB.RANDOM_MATCH) {\n            result = mvs.engine.joinRandomRoom(GLB.MAX_PLAYER_COUNT, '');\n            if (result !== 0) {\n                console.log('进入房间失败,错误码:' + result);\n                Game.GameManager.openTip(\"进入房间失败\");\n                Game.GameManager.recurLobby();\n            }\n        } else if (GLB.matchType === GLB.PROPERTY_MATCH) {\n            var matchinfo = new mvs.MatchInfo();\n            matchinfo.maxPlayer = GLB.MAX_PLAYER_COUNT;\n            matchinfo.mode = 0;\n            matchinfo.canWatch = 0;\n            matchinfo.tags = GLB.tagsInfo;\n            result = mvs.engine.joinRoomWithProperties(matchinfo, \"joinRoomWithProperties\");\n            if (result !== 0) {\n                console.log('进入房间失败,错误码:' + result);\n            }\n        }\n    },\n\n    startGame: function() {\n        console.log('游戏即将开始');\n        cc.director.loadScene('game');\n    },\n\n    joinRoomResponse: function(data) {\n        if (data.status !== 200) {\n            console.log('进入房间失败,异步回调错误码: ' + data.status);\n        } else {\n            console.log('进入房间成功');\n            console.log('房间号: ' + data.roomInfo.roomID);\n        }\n        GLB.roomId = data.roomInfo.roomID;\n        var userIds = [GLB.userInfo.id]\n        console.log('房间用户: ' + userIds);\n\n        var playerIcon = null;\n        for (var j = 0; j < data.roomUserInfoList.length; j++) {\n            playerIcon = this.playerIcons[j + 1].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(data.roomUserInfoList[j]);\n                if (GLB.userInfo.id !== data.roomUserInfoList[j].userId) {\n                    userIds.push(data.roomUserInfoList[j].userId);\n                }\n            }\n        }\n\n        for (var i = 0; i < this.playerIcons.length; i++) {\n            playerIcon = this.playerIcons[i].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(GLB.userInfo);\n                break;\n            }\n        }\n        GLB.playerUserIds = userIds;\n        if (userIds.length >= GLB.MAX_PLAYER_COUNT) {\n            var result = mvs.engine.joinOver(\"\");\n            console.log(\"发出关闭房间的通知\");\n            if (result !== 0) {\n                console.log(\"关闭房间失败，错误码：\", result);\n            }\n\n            GLB.playerUserIds = userIds;\n        }\n        this.joinRoom = true;\n    },\n\n    showLcon(){\n        for (var i = 0; i < GLB.playerUserIds.length; i++){\n            var playerIcon = this.playerIcons[i].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(GLB.playerUserIds[i]);\n            }\n        }\n    },\n    checkLcon(){\n        if (this.playerIcons[i].getComponent('playerIcon').playerSprite.spriteFrame === null\n        || this.joinRoom){\n            Game.GameManager.network.connect(GLB.IP, GLB.PORT,function(){});\n            this.scheduleOnce(this.showLcon,1);\n        }\n    },\n\n    joinRoomNotify: function(data) {\n        console.log(\"joinRoomNotify, roomUserInfo:\" + JSON.stringify(data.roomUserInfo));\n        var playerIcon = null;\n        for (var j = 0; j < this.playerIcons.length; j++) {\n            playerIcon = this.playerIcons[j].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(data.roomUserInfo);\n                break;\n            }\n        }\n        this.bQuit = false;\n    },\n\n    leaveRoom: function() {\n        if (!this.bQuit){\n            return;\n        }\n        mvs.engine.leaveRoom(\"\");\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n    },\n\n    leaveRoomNotify: function(data) {\n        if (GLB.roomId === data.leaveRoomInfo.roomID) {\n            for (var i = 0; i < this.playerIcons.length; i++) {\n                var playerIcon = this.playerIcons[i].getComponent('playerIcon');\n                if (playerIcon && playerIcon.userInfo && playerIcon.playerId === data.leaveRoomInfo.userId) {\n                    playerIcon.init();\n                    break;\n                }\n            }\n        }\n    },\n\n    leaveRoomResponse: function(data) {\n        if (data.leaveRoomRsp.status === 200) {\n            console.log(\"离开房间成功\");\n            for (var i = 0; i < this.playerIcons.length; i++) {\n                var playerIcon = this.playerIcons[i].getComponent('playerIcon');\n                if (playerIcon) {\n                    playerIcon.init();\n                    break;\n                }\n            }\n            uiFunc.closeUI(this.node.name);\n            this.node.destroy();\n        } else {\n            console.log(\"离开房间失败\");\n        }\n    },\n\n    joinOverResponse: function(data) {\n        if (data.joinOverRsp.status === 200) {\n            console.log(\"关闭房间成功\");\n            this.notifyGameStart();\n        } else {\n            console.log(\"关闭房间失败，回调通知错误码：\", data.joinOverRsp.status);\n        }\n    },\n\n    notifyGameStart: function() {\n        GLB.isRoomOwner = true;\n        var msg = {\n            action: GLB.GAME_START_EVENT,\n            userIds: GLB.playerUserIds\n        };\n        setTimeout(function() {\n            Game.GameManager.sendEventEx(msg);\n        }, 750);\n    },\n\n    onDestroy() {\n        clientEvent.off(clientEvent.eventType.joinRoomResponse, this.joinRoomResponse, this);\n        clientEvent.off(clientEvent.eventType.joinRoomNotify, this.joinRoomNotify, this);\n        clientEvent.off(clientEvent.eventType.leaveRoomResponse, this.leaveRoomResponse, this);\n        clientEvent.off(clientEvent.eventType.leaveRoomNotify, this.leaveRoomNotify, this);\n        clientEvent.off(clientEvent.eventType.joinOverResponse, this.joinOverResponse, this);\n        clientEvent.off(clientEvent.eventType.checkLcon, this.checkLcon, this);\n    }\n});\n","cc.Class({\n    extends: cc.Component,\n    properties: {\n        isTop: false\n    },\n\n    onLoad: function() {\n        // node load --\n        this.nodeDict = {};\n        var linkWidget = function(self, nodeDict) {\n            var children = self.children;\n            for (var i = 0; i < children.length; i++) {\n                var widgetName = children[i].name;\n                if (widgetName && widgetName.indexOf(\"key_\") >= 0) {\n                    var nodeName = widgetName.substring(4);\n                    if (nodeDict[nodeName]) {\n                        cc.error(\"控件名字重复!\" + children[i].name);\n                    }\n                    nodeDict[nodeName] = children[i];\n                }\n                if (children[i].childrenCount > 0) {\n                    linkWidget(children[i], nodeDict);\n                }\n            }\n        }.bind(this);\n        linkWidget(this.node, this.nodeDict);\n    },\n\n    onDestroy: function() {\n        clientEvent.clear(this);\n    }\n});\n","var uiPanel = require(\"uiPanel\");\n\ncc.Class({\n\n    extends: uiPanel,\n    properties: {\n        rankPrefab: {\n            default: null,\n            type: cc.Node\n        },\n        rank1Node: {\n            default: null,\n            type: cc.Node\n        },\n        rank2Node: {\n            default: null,\n            type: cc.Node\n        },\n        rank3Node: {\n            default: null,\n            type: cc.Node\n        }\n    },\n\n    onLoad: function() {\n        this._super();\n        this.rankPrefab.active = false;\n        this.rank1Node.active = false;\n        this.rank2Node.active = false;\n        this.rank3Node.active = false;\n        this.rank1Info = this.rank1Node.getComponent(\"rankUserInfo\");\n        this.rank2Info = this.rank2Node.getComponent(\"rankUserInfo\");\n        this.rank3Info = this.rank3Node.getComponent(\"rankUserInfo\");\n        this.nodeDict[\"exit\"].on(\"click\", this.quit, this);\n    },\n\n    quit: function() {\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n    },\n\n    setData: function(rankdata) {\n        console.log(\"setData\");\n        rankdata = rankdata.filter(function(data) {\n            return data.score !== Number.MAX_SAFE_INTEGER && data.score !== 0;\n        });\n        for (var i = 0; i < rankdata.length; i++) {\n            if (i === 0) {\n                this.rank1Node.active = true;\n                this.rank1Info.setData(i, rankdata[i]);\n            } else if (i === 1) {\n                this.rank2Node.active = true;\n                this.rank2Info.setData(i, rankdata[i]);\n            } else if (i === 2) {\n                this.rank3Node.active = true;\n                this.rank3Info.setData(i, rankdata[i]);\n            } else {\n                var temp = cc.instantiate(this.rankPrefab);\n                temp.active = true;\n                temp.parent = this.rankPrefab.parent;\n                var rankInfo = temp.getComponent(\"rankUserInfo\");\n                rankInfo.setData(i, rankdata[i]);\n            }\n        }\n    }\n});\n","var uiPanel = require(\"uiPanel\");\ncc.Class({\n    extends: uiPanel,\n\n    properties: {\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    // update (dt) {},\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n\n    properties: {\n        loseClip: {\n            default: null,\n            url: cc.AudioClip\n        },\n        victoryClip: {\n            default: null,\n            url: cc.AudioClip\n        }\n    },\n\n    onLoad() {\n        this._super();\n        this.player1 = this.nodeDict[\"player1\"].getComponent(\"resultPlayerIcon\");\n        this.player1.node.active = false;\n        this.player2 = this.nodeDict[\"player2\"].getComponent(\"resultPlayerIcon\");\n        this.player2.node.active = false;\n        this.player3 = this.nodeDict[\"player3\"].getComponent(\"resultPlayerIcon\");\n        this.player3.node.active = false;\n        this.nodeDict[\"quit\"].on(\"click\", this.quit, this);\n    },\n\n    setData: function(data) {\n        if (data.length > 0) {\n            this.player1.setData(data[0]);\n            this.player1.node.active = true;\n            if (data.length > 1) {\n                this.player2.setData(data[1]);\n                this.player2.node.active = true;\n            }\n            if (data.length > 2) {\n                this.player3.setData(data[2]);\n                this.player3.node.active = true;\n            }\n        }\n        if (data.loseCamp === Camp.Friend) {\n            cc.audioEngine.play(this.victoryClip, false, 1);\n        } else {\n            cc.audioEngine.play(this.loseClip, false, 1);\n        }\n    },\n\n\n    quit: function() {\n        mvs.engine.leaveRoom(\"\");\n        var gamePanel = uiFunc.findUI(\"uiGamePanel\");\n        if (gamePanel) {\n            uiFunc.closeUI(\"uiGamePanel\");\n            gamePanel.destroy();\n        }\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n\n\n        Game.GameManager.lobbyShow();\n    }\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n\n    properties: {},\n\n    start() {\n        this.roomPrefab = this.nodeDict[\"roomPrefab\"];\n        this.editBox = this.nodeDict[\"editBox\"].getComponent(cc.EditBox);\n        this.roomPrefab.active = false;\n        this.nodeDict[\"search\"].on(\"click\", this.search, this);\n        this.nodeDict[\"quit\"].on(\"click\", this.quit, this);\n\n\n        this.rooms = [];\n\n        clientEvent.on(clientEvent.eventType.getRoomListResponse, this.getRoomListResponse, this);\n        clientEvent.on(clientEvent.eventType.joinRoomResponse, this.joinRoomResponse, this);\n        clientEvent.on(clientEvent.eventType.getRoomListExResponse, this.getRoomListExResponse, this);\n\n        this.getRoomList();\n        this.roomRqId = setInterval(function() {\n            if (this.editBox.string === '') {\n                this.getRoomList();\n            }\n        }.bind(this), 5000);\n    },\n\n    getRoomList: function() {\n        var filter = {\n            maxPlayer: 0,\n            mode: 0,\n            canWatch: 0,\n            roomProperty: \"\",\n            full: 2,\n            state: 1,\n            sort: 1,\n            order: 0,\n            pageNo: 0,\n            pageSize: 20\n        }\n        mvs.engine.getRoomListEx(filter);\n    },\n\n    getRoomListResponse: function(data) {\n        for (var j = 0; j < this.rooms.length; j++) {\n            this.rooms[j].destroy();\n        }\n        this.rooms = [];\n        data.roomInfos.sort(function(a, b) {\n            return a.roomID - b.roomID;\n        });\n        for (var i = 0; i < data.roomInfos.length; i++) {\n            var room = cc.instantiate(this.roomPrefab);\n            room.active = true;\n            room.parent = this.roomPrefab.parent;\n            var roomScript = room.getComponent('roomInfo');\n            roomScript.setData(data.roomInfos[i]);\n\n            this.rooms.push(room);\n        }\n    },\n\n    getRoomListExResponse: function(data) {\n        for (var j = 0; j < this.rooms.length; j++) {\n            this.rooms[j].destroy();\n        }\n        this.rooms = [];\n        this.roomAttrs = data.rsp.roomAttrs;\n        for (var i = 0; i < data.rsp.roomAttrs.length; i++) {\n            var room = cc.instantiate(this.roomPrefab);\n            room.active = true;\n            room.parent = this.roomPrefab.parent;\n            var roomScript = room.getComponent('roomInfo');\n            roomScript.setData(data.rsp.roomAttrs[i]);\n\n            this.rooms.push(room);\n        }\n    },\n\n    quit: function() {\n        clearInterval(this.roomRqId);\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n    },\n\n    search: function() {\n        if (this.editBox.string === '') {\n            for (var i = 0; i < this.rooms.length; i++) {\n                this.rooms[i].active = true;\n            }\n        } else {\n            for (var j = 0; j < this.rooms.length; j++) {\n                var roomScript = this.rooms[j].getComponent('roomInfo');\n                if (roomScript.roomIdLb.string == this.editBox.string) {\n                    this.rooms[j].active = true;\n                } else {\n                    this.rooms[j].active = false;\n                }\n            }\n        }\n    },\n\n    joinRoomResponse: function(data) {\n        if (data.status !== 200) {\n            console.log('进入房间失败,异步回调错误码: ' + data.status);\n        } else {\n            console.log('进入房间成功');\n            console.log('房间号: ' + data.roomInfo.roomID);\n            if (!data.roomUserInfoList.some(function(x) {\n                return x.userId === GLB.userInfo.id;\n            })) {\n                data.roomUserInfoList.push({\n                    userId: GLB.userInfo.id,\n                    userProfile: \"\"\n                });\n            }\n            // 设置房间最大人数--\n            for (var i = 0; i < this.roomAttrs.length; i++) {\n                if (data.roomInfo.roomID === this.roomAttrs[i].roomID) {\n                    GLB.MAX_PLAYER_COUNT = this.roomAttrs[i].maxPlayer;\n                    break;\n                }\n            }\n\n            if (cc.Canvas.instance.designResolution.height > cc.Canvas.instance.designResolution.width) {\n                uiFunc.openUI(\"uiRoomVer\", function(obj) {\n                    var room = obj.getComponent('uiRoom');\n                    room.joinRoomInit(data.roomUserInfoList, data.roomInfo);\n                    uiFunc.closeUI(this.node.name);\n                    this.node.destroy();\n                }.bind(this));\n            } else {\n                uiFunc.openUI(\"uiRoom\", function(obj) {\n                    var room = obj.getComponent('uiRoom');\n                    room.joinRoomInit(data.roomUserInfoList, data.roomInfo);\n                    uiFunc.closeUI(this.node.name);\n                    this.node.destroy();\n                }.bind(this));\n            }\n        }\n    },\n\n    onDestroy() {\n        clearInterval(this.roomRqId);\n\n        clientEvent.off(clientEvent.eventType.getRoomListResponse, this.getRoomListResponse, this);\n        clientEvent.off(clientEvent.eventType.joinRoomResponse, this.joinRoomResponse, this);\n        clientEvent.off(clientEvent.eventType.getRoomListExResponse, this.getRoomListExResponse, this);\n    }\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n    properties: {},\n\n    onLoad() {\n        this._super();\n        this.players = [];\n        this.roomId = 0;\n        this.roomInfo = null;\n        this.owner = 0;\n        this.playerPrefab = this.nodeDict[\"player\"];\n        this.playerPrefab.active = false;\n        this.nodeDict[\"quit\"].on(\"click\", this.quit, this);\n        this.nodeDict[\"startGame\"].on(\"click\", this.startGame, this);\n\n\n        clientEvent.on(clientEvent.eventType.joinRoomNotify, this.joinRoomNotify, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomResponse, this.leaveRoomResponse, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomNotify, this.leaveRoomNotify, this);\n        clientEvent.on(clientEvent.eventType.kickPlayerResponse, this.kickPlayerResponse, this);\n        clientEvent.on(clientEvent.eventType.kickPlayerNotify, this.kickPlayerNotify, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomMedNotify, this.leaveRoomMedNotify, this);\n\n        for (var i = 0; i < GLB.MAX_PLAYER_COUNT; i++) {\n            var temp = cc.instantiate(this.playerPrefab);\n            temp.active = true;\n            temp.parent = this.nodeDict[\"layout\"];\n            var roomUserInfo = temp.getComponent('roomUserInfo');\n            roomUserInfo.init();\n            this.players.push(roomUserInfo);\n        }\n    },\n\n    kickPlayerResponse: function(data) {\n        for (var j = 0; j < this.players.length; j++) {\n            if (this.players[j].userId === data.kickPlayerRsp.userID) {\n                this.players[j].init();\n                break;\n            }\n        }\n        if (GLB.userInfo.id === data.kickPlayerRsp.userID) {\n            GLB.isRoomOwner = false;\n            uiFunc.closeUI(this.node.name);\n            this.node.destroy();\n        }\n    },\n\n    kickPlayerNotify: function(data) {\n        for (var j = 0; j < this.players.length; j++) {\n            if (this.players[j].userId === data.kickPlayerNotify.userId) {\n                this.players[j].init();\n                break;\n            }\n        }\n\n        if (GLB.userInfo.id === data.kickPlayerNotify.userId) {\n            GLB.isRoomOwner = false;\n            uiFunc.closeUI(this.node.name);\n            this.node.destroy();\n        }\n    },\n\n    joinRoomNotify: function(data) {\n        for (var j = 0; j < this.players.length; j++) {\n            if (this.players[j].userId === 0) {\n                this.players[j].setData(data.roomUserInfo.userId, this.ownerId);\n                break;\n            }\n        }\n    },\n\n    leaveRoomResponse: function(data) {\n        if (data.leaveRoomRsp.status === 200) {\n            console.log(\"离开房间成功！\");\n        } else {\n            console.log(\"离开房间失败\");\n        }\n        GLB.isRoomOwner = false;\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n    },\n\n    leaveRoomMedNotify: function(data) {\n        for (var j = 0; j < this.players.length; j++) {\n            if (this.players[j].userId === data.userID) {\n                this.players[j].init();\n                break;\n            }\n        }\n        if (data.userId !== GLB.userInfo.id) {\n            this.ownerId = GLB.userInfo.id;\n        }\n        if (this.ownerId === GLB.userInfo.id) {\n            GLB.isRoomOwner = true;\n        }\n        for (var i = 0; i < this.players.length; i++) {\n            if (this.players[i].userId !== 0) {\n                this.players[i].setData(this.players[i].userId, this.ownerId);\n            }\n        }\n        mvs.engine.kickPlayer(data.userID, \"kick\");\n        this.refreshStartBtn();\n    },\n\n    leaveRoomNotify: function(data) {\n        for (var j = 0; j < this.players.length; j++) {\n            if (this.players[j].userId === data.leaveRoomInfo.userId) {\n                this.players[j].init();\n                break;\n            }\n        }\n        if (data.leaveRoomInfo.userId !== GLB.userInfo.id) {\n            this.ownerId = GLB.userInfo.id;\n        }\n\n        if (this.ownerId === GLB.userInfo.id) {\n            GLB.isRoomOwner = true;\n        }\n        for (var i = 0; i < this.players.length; i++) {\n            if (this.players[i].userId !== 0) {\n                this.players[i].setData(this.players[i].userId, this.ownerId);\n            }\n        }\n\n        this.refreshStartBtn();\n    },\n\n    refreshStartBtn() {\n        var spNode = this.nodeDict[\"startGame\"];\n        var btn = this.nodeDict[\"startGame\"].getComponent(cc.Button);\n        if (GLB.isRoomOwner) {\n            spNode.color = cc.Color.WHITE;\n            btn.enabled = true;\n        } else {\n            spNode.color = cc.Color.BLACK;\n            btn.enabled = false;\n        }\n    },\n\n    quit: function() {\n        mvs.engine.leaveRoom(\"\");\n    },\n\n    startGame: function() {\n        if (!GLB.isRoomOwner) {\n            uiFunc.openUI(\"uiTip\", function(obj) {\n                var uiTip = obj.getComponent(\"uiTip\");\n                if (uiTip) {\n                    uiTip.setData(\"等待房主开始游戏\");\n                }\n            }.bind(this));\n            return;\n        }\n        var userIds = [];\n        var playerCnt = 0;\n        for (var j = 0; j < this.players.length; j++) {\n            if (this.players[j].userId !== 0) {\n                playerCnt++;\n                userIds.push(this.players[j].userId);\n            }\n        }\n\n\n        if (playerCnt === GLB.MAX_PLAYER_COUNT) {\n            var result = mvs.engine.joinOver(\"\");\n            console.log(\"发出关闭房间的通知\");\n            if (result !== 0) {\n                console.log(\"关闭房间失败，错误码：\", result);\n            }\n\n            GLB.playerUserIds = userIds;\n\n            var msg = {\n                action: GLB.GAME_START_EVENT,\n                userIds: userIds\n            };\n            Game.GameManager.sendEventEx(msg);\n        } else {\n            uiFunc.openUI(\"uiTip\", function(obj) {\n                var uiTip = obj.getComponent(\"uiTip\");\n                if (uiTip) {\n                    uiTip.setData(\"房间人数不足\");\n                }\n            }.bind(this));\n        }\n    },\n\n    createRoomInit(rsp) {\n        this.roomId = rsp.roomID;\n        this.ownerId = rsp.owner;\n        this.players[0].setData(this.ownerId, this.ownerId);\n        GLB.isRoomOwner = true;\n        this.refreshStartBtn();\n    },\n\n    joinRoomInit(roomUserInfoList, roomInfo) {\n        roomUserInfoList.sort(function(a, b) {\n            if (roomInfo.ownerId === b.userId) {\n                return 1;\n            }\n            return 0;\n        });\n        this.ownerId = roomInfo.ownerId;\n        for (var j = 0; j < roomUserInfoList.length; j++) {\n            this.players[j].setData(roomUserInfoList[j].userId, this.ownerId);\n        }\n        this.refreshStartBtn();\n    },\n\n    onDestroy() {\n        clientEvent.off(clientEvent.eventType.joinRoomNotify, this.joinRoomNotify, this);\n        clientEvent.off(clientEvent.eventType.leaveRoomResponse, this.leaveRoomResponse, this);\n        clientEvent.off(clientEvent.eventType.leaveRoomNotify, this.leaveRoomNotify, this);\n        clientEvent.off(clientEvent.eventType.kickPlayerResponse, this.kickPlayerResponse, this);\n        clientEvent.off(clientEvent.eventType.kickPlayerNotify, this.kickPlayerNotify, this);\n        clientEvent.off(clientEvent.eventType.leaveRoomMedNotify, this.leaveRoomMedNotify, this);\n\n    }\n});\n","var uiPanel = require(\"uiPanel\");\ncc.Class({\n    extends: uiPanel,\n    properties: {},\n\n    onload(){\n        this._super();\n    },\n\n    start() {\n        setTimeout(function() {\n            if (this && this.node) {\n                uiFunc.closeUI(this.node.name);\n                this.node.destroy();\n            }\n        }.bind(this), 2000);\n    },\n\n    setData(content){\n        this.nodeDict[\"tipLb\"].getComponent(cc.Label).string = content;\n    }\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n\n    properties: {\n        loseClip: {\n            default: null,\n            url: cc.AudioClip\n        },\n        victoryClip: {\n            default: null,\n            url: cc.AudioClip\n        }\n    },\n\n    start() {\n        var isLose = Game.GameManager.isRivalLeave ? false : Game.PlayerManager.self.score < Game.PlayerManager.rival.score;\n        clientEvent.on(clientEvent.eventType.checkLcon, this.checkLcon, this);\n        this.player = this.nodeDict[\"player\"].getComponent(\"resultPlayerIcon\");\n        this.rival = this.nodeDict[\"rival\"].getComponent(\"resultPlayerIcon\");\n        this.showLcon();\n        this.nodeDict[\"vs\"].active = true;\n        //this.nodeDict[\"score\"].active = true;\n        this.nodeDict[\"quit\"].on(\"click\", this.quit, this);\n\n        this.nodeDict[\"lose\"].active = isLose;\n        this.nodeDict[\"win\"].active = !isLose;\n\n        if (!isLose) {\n            cc.audioEngine.play(this.victoryClip, false, 1);\n            // 发送胜局记录--\n        } else {\n            cc.audioEngine.play(this.loseClip, false, 1);\n        }\n        this.showScore();\n    },\n\n    showLcon(){\n        this.player.setData(Game.PlayerManager.self.playerId);\n        this.rival.setData(Game.PlayerManager.rival.playerId);\n    },\n\n    checkLcon(){\n        if (this.player.icon.spriteFrame === null){\n            Game.GameManager.network.connect(GLB.IP, GLB.PORT,function(){});\n            this.scheduleOnce(this.showLcon,1);\n        }\n    },\n\n    quit: function() {\n        mvs.engine.leaveRoom(\"\");\n        var gamePanel = uiFunc.findUI(\"uiGamePanel\");\n        if (gamePanel) {\n            uiFunc.closeUI(\"uiGamePanel\");\n            gamePanel.destroy();\n        }\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n        Game.GameManager.lobbyShow();\n    },\n    showScore(){\n        var self = Game.PlayerManager.self;\n        var rival = Game.PlayerManager.rival;\n        Game.GameManager.setRankData(self.score);\n        this.nodeDict[\"scoreOne\"].getChildByName(\"self\").getComponent(cc.Label).string = self.score;\n        this.nodeDict[\"scoreOne\"].getChildByName(\"rival\").getComponent(cc.Label).string = rival.score;\n        var ratio = self.score / (self.score + rival.score);\n        if (self.score === 0 && rival.score === 0) {\n            ratio = 0.5;\n        }\n        this.nodeDict[\"scoreOne\"].getComponent(cc.ProgressBar).progress = ratio;\n\n        this.nodeDict[\"scoreTwo\"].getChildByName(\"self\").getComponent(cc.Label).string = self.blockNumber;\n        this.nodeDict[\"scoreTwo\"].getChildByName(\"rival\").getComponent(cc.Label).string = rival.blockNumber;\n        ratio = self.blockNumber / (self.blockNumber + rival.blockNumber);\n        if (self.blockNumber === 0 && rival.blockNumber === 0) {\n            ratio = 0.5;\n        }\n        this.nodeDict[\"scoreTwo\"].getComponent(cc.ProgressBar).progress = ratio;\n        self.maxCombo = self.maxCombo > 2 ? self.maxCombo - 2 : 0;\n        rival.maxCombo = rival.maxCombo > 2 ? rival.maxCombo - 2 : 0;\n        this.nodeDict[\"scoreThree\"].getChildByName(\"self\").getComponent(cc.Label).string = self.maxCombo;\n        this.nodeDict[\"scoreThree\"].getChildByName(\"rival\").getComponent(cc.Label).string = rival.maxCombo;\n        ratio = self.maxCombo / (self.maxCombo + rival.maxCombo);\n        if (self.maxCombo === 0 && rival.maxCombo === 0) {\n            ratio = 0.5;\n        }\n        this.nodeDict[\"scoreThree\"].getComponent(cc.ProgressBar).progress = ratio;\n    },\n    onDestroy(){\n        clientEvent.off(clientEvent.eventType.checkLcon, this.checkLcon, this);\n    }\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n    properties: {},\n\n    onLoad() {\n        this._super();\n        this.nodeDict[\"sure\"].on(\"click\", this.sure, this);\n        this.nodeDict[\"close\"].on(\"click\", this.close, this);\n    },\n\n    close() {\n        uiFunc.closeUI(this.node);\n    },\n\n    sure() {\n        mvs.engine.leaveRoom(\"\");\n        var gamePanel = uiFunc.findUI(\"uiGamePanel\");\n        if (gamePanel) {\n            uiFunc.closeUI(gamePanel);\n        }\n        uiFunc.closeUI(this.node);\n        Game.GameManager.lobbyShow();\n    }\n});\n"],"sourceRoot":"/source/","file":"project.js"}